ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB146:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0.1\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Standard includes. */
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <stdlib.h>
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include <string.h>
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task.h is included from an application file. */
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* FreeRTOS includes. */
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "FreeRTOS.h"
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "task.h"
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "timers.h"
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #include "stack_macros.h"
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** functions but without including stdio.h here. */
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#include <stdio.h>
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * global, rather than file scope.
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define static
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	microcontroller architecture. */
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	state task. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			--uxTopPriority;																			\
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																										\
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	being used. */
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	architecture being used. */
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																								\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{																									\
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																								\
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}																								\
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** count overflows. */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {																									\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																									\
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** to its original value when it is released. */
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #else
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* See the comments above the definition of
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** } tskTCB;
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** typedef tskTCB TCB_t;
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** which static variables must be declared volatile. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** accessed from a critical section. */
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*lint -restore */
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /**
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * is in any other state.
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * creation of the first user task.
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * and its TCB deleted.
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * a suspended list, etc.).
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * set to a value other than 1.
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * will exit the Blocked state.
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/*
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 * human readable tables of task information.
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	 */
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * under the control of the scheduler.
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * called by the function.
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure. */
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function - use them. */
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = NULL;
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Store the stack location in the TCB. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pcName,
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									pxTaskDefinition->xRegions );
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not static allocation is being used. */
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task had a statically allocated stack in case it is
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pcName,
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							void * const pvParameters,
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							UBaseType_t uxPriority,
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the TCB then the stack. */
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allocation is being used. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxNewTCB != NULL )
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				be deleted later if required. */
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxNewTCB );
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB = NULL;
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxStack;
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxStack != NULL )
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Allocate space for the TCB. */
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxNewTCB != NULL )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it again. */
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vPortFree( pxStack );
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB = NULL;
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxNewTCB != NULL )
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const uint32_t ulStackDepth,
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									void * const pvParameters,
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									UBaseType_t uxPriority,
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									TCB_t *pxNewTCB,
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t x;
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	by the port. */
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			debugging. */
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		performed. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the task name in the TCB. */
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			break;
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	remove the privilege bit if one is present. */
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Event lists are always in priority order. */
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xRegions;
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the top of stack variable is updated. */
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	updated. */
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the suspended state - make this the current task. */
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				initialisation required.  We will not recover if this call
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				fails, but we will report the failure. */
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvInitialiseTaskLists();
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			current task if it is the highest priority task to be created
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			so far. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxTaskNumber++;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then it should run now. */
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being deleted. */
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready list. */
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			not return. */
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxTaskNumber++;
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that has just been deleted. */
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been deleted. */
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			block. */
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				tick time is less than the wake time. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_DELAY();
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task that is removed from the event list while the
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is resumed.
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				executing task. */
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have put ourselves to sleep. */
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			portYIELD_WITHIN_API();
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eTaskState eReturn;
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	List_t *pxStateList;
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eRunning;
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				lists. */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eBlocked;
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					indefinitely? */
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eSuspended;
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						eReturn = eBlocked;
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					all. */
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					eReturn = eDeleted;
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				Ready (including pending ready) state. */
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eReady;
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being queried. */
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is being changed. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority than the calling task. */
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of a task other than the currently
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						running task is being raised.  Is the priority being
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						raised above that of the running task? */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The priority of the running task is being raised,
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but the running task must already be the highest
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority task able to run so no yield is required. */
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of the running task down means
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					there may now be another task of higher priority that
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is ready to execute. */
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					require a yield as the running task must be above the
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new priority of the task being modified. */
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				before its uxPriority member is changed so the
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					currently using an inherited priority. */
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority gets set whatever. */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				being used for anything else. */
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing more than change its priority variable. However, if
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				in the list appropriate to its new priority. */
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						there is no need to check again and the port level
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						reset macro can be called directly. */
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				optimised task selection is not being used. */
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			being suspended. */
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			suspended list. */
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					now suspended, so no notification was received. */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task that is now in the Suspended state. */
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 31


1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The current task has just been suspended. */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be adjusted to point to a different task. */
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is. */
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB = NULL;
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vTaskSwitchContext();
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
  28              		.loc 1 1732 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 32


1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		section. */
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1740 0
  35 0000 0246     		mov	r2, r0
  36 0002 40B9     		cbnz	r0, .L2
  37              	.LBB94:
  38              	.LBB95:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * subject to the following conditions:
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h ****  */
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 33


  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR		char
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT		float
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE		double
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG		long
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT		short
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #else
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD() 															\
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {																				\
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 																				\
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 34


 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE	__inline
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** #endif
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdFALSE;
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	else
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	{
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		xReturn = pdTRUE;
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	}
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return xReturn;
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
  40              		.loc 2 156 0
  41              		.syntax unified
  42              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 35


  43 0004 4FF02003 			mov r3, #32												
  44 0008 83F31188 		msr basepri, r3											
  45 000c BFF36F8F 		isb														
  46 0010 BFF34F8F 		dsb														
  47              	
  48              	@ 0 "" 2
  49              	.LVL1:
  50              		.thumb
  51              		.syntax unified
  52              	.L3:
  53 0014 FEE7     		b	.L3
  54              	.L2:
  55              	.LBE95:
  56              	.LBE94:
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  57              		.loc 1 1743 0
  58 0016 4169     		ldr	r1, [r0, #20]
  59 0018 0A4B     		ldr	r3, .L12
  60 001a 9942     		cmp	r1, r3
  61 001c 01D1     		bne	.L7
  62 001e 0123     		movs	r3, #1
  63 0020 00E0     		b	.L4
  64              	.L7:
  65 0022 0023     		movs	r3, #0
  66              	.L4:
  67              		.loc 1 1743 0 is_stmt 0 discriminator 4
  68 0024 43B1     		cbz	r3, .L8
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  69              		.loc 1 1746 0 is_stmt 1
  70 0026 926A     		ldr	r2, [r2, #40]
  71 0028 0749     		ldr	r1, .L12+4
  72 002a 8A42     		cmp	r2, r1
  73 002c 06D0     		beq	.L9
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  74              		.loc 1 1750 0
  75 002e 02B1     		cbz	r2, .L6
  76 0030 0023     		movs	r3, #0
  77              	.L6:
  78              		.loc 1 1750 0 is_stmt 0 discriminator 4
  79 0032 2BB9     		cbnz	r3, .L11
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  80              		.loc 1 1733 0 is_stmt 1
  81 0034 0020     		movs	r0, #0
  82              	.LVL2:
  83 0036 7047     		bx	lr
  84              	.LVL3:
  85              	.L8:
  86 0038 0020     		movs	r0, #0
  87              	.LVL4:
  88 003a 7047     		bx	lr
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 36


  89              	.LVL5:
  90              	.L9:
  91 003c 0020     		movs	r0, #0
  92              	.LVL6:
  93 003e 7047     		bx	lr
  94              	.LVL7:
  95              	.L11:
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
  96              		.loc 1 1752 0
  97 0040 0120     		movs	r0, #1
  98              	.LVL8:
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  99              		.loc 1 1770 0
 100 0042 7047     		bx	lr
 101              	.L13:
 102              		.align	2
 103              	.L12:
 104 0044 00000000 		.word	.LANCHOR0
 105 0048 14000000 		.word	.LANCHOR0+20
 106              		.cfi_endproc
 107              	.LFE146:
 108              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
 109              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 113              		.type	prvResetNextTaskUnblockTime, %function
 114              	prvResetNextTaskUnblockTime:
 115              	.LFB174:
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 37


1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		currently executing task. */
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended because this is inside a critical section. */
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						but will leave the lists in the correct state for the
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						next yield. */
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToResume );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 38


1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					suspended list to the ready list directly. */
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unsuspended. */
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 39


1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xYieldRequired;
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskStartScheduler( void )
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		address of the RAM then create the idle task. */
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												configIDLE_TASK_NAME,
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												ulIdleTaskStackSize,
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#else
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( void * ) NULL,
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xReturn == pdPASS )
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 40


1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( xReturn == pdPASS )
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the only macro called by the function. */
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			freertos_tasks_c_additions_init();
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		starts to run. */
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to the task that will run first. */
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		FreeRTOSConfig.h file. */
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portable interface. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function will not return. */
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 41


2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		or the timer task. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) xIdleTaskHandle;
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskEndScheduler( void )
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSuspendAll( void )
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	http://goo.gl/wu4acr */
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	++uxSchedulerSuspended;
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xReturn;
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		running. */
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 42


2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			processed. */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			idle priority.  This path can only be reached if
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = 0;
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		--uxSchedulerSuspended;
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 43


2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				appropriate ready list. */
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					task then a yield must be performed. */
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					which may have prevented the next unblock time from being
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					important for low power tickless implementations, where
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				time. */
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						do
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								xYieldPending = pdTRUE;
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							else
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							--uxPendedCounts;
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 44


2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						uxPendedTicks = 0;
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xAlreadyYielded;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTicks = xTickCount;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xTicks;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 45


2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = xTickCount;
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t. */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queried. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t x;
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cNextChar;
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 46


2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mismatch. */
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Characters didn't match. */
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						found. */
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxReturn = pxNextTCB;
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxReturn != NULL )
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The handle has been found. */
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxReturn;
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t* pxTCB;
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 47


2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the ready lists. */
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxQueue--;
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB != NULL )
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Found the handle. */
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Search the delayed lists. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == NULL )
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the suspended list. */
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB == NULL )
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Search the deleted list. */
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 48


2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Ready state. */
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				do
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxQueue--;
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				task in the Blocked state. */
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					each task in the Suspended state. */
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pulTotalRunTime = 0;
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 49


2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xIdleTaskHandle;
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 1. */
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		each stepped tick. */
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount += xTicksToJump;
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxTCB );
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 50


2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vTaskSuspendAll();
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			it is actually in the Blocked state. */
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				scheduler is suspended. */
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskENTER_CRITICAL();
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskEXIT_CRITICAL();
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch if preemption is turned off. */
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						is unsuspended. */
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 51


2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) xTaskResumeAll();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xItemValue;
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	tasks to be unblocked. */
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		block. */
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		delayed lists if it wraps to 0. */
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = xConstTickCount;
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		look any further down the list. */
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( ;; )
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					to the maximum possible value so it is extremely
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					unlikely that the
2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					next time through. */
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 52


2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					at which the task at the head of the delayed list must
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be removed from the Blocked state. */
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						item value is the time at which the task at the head
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						state -	so record the item value in
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime. */
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it from the event list. */
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					list. */
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					context switch if preemption is turned off. */
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						only be performed if the unblocked task has a
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						priority that is equal to or higher than the
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						currently executing task. */
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 53


2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationTickHook();
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		++uxPendedTicks;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler is locked. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationTickHook();
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 54


2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xSwitchRequired;
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		getting set. */
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the value can be accessed from an interrupt. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 55


2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *xTCB;
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask == NULL )
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFAIL;
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSwitchContext( void )
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		switch. */
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdFALSE;
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 56


2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#else
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				protection here so count values are only valid until the timer
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				are provided by the application, not the kernel. */
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{																									\
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 																											\
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		optimised asm code. */
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			structure specific to this task. */
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 57


2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event groups implementation. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	task that is not in the Blocked state. */
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the task level). */
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This function should not be called by application code hence the
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		can be used in place of vListInsert. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 58


2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TIMERS */
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	called from a critical section within an ISR. */
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the delayed list, and add it to the ready list.
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxEventList is not empty. */
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pending until the scheduler is resumed. */
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		it should force a context switch now. */
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdTRUE;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 59


3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pdFALSE;
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the event flags implementation. */
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Store the new item value in the event list. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	event flags. */
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	lists. */
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		a context switch is required.  This function is called with the
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 60


3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xYieldPending = pdTRUE;
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				but has the same result. */
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				specified is the maximum block time then the task should block
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 61


3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The tick count is greater than the time at which
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			was called. */
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			*pxTicksToWait = 0;
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskEXIT_CRITICAL();
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return xReturn;
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** void vTaskMissedYield( void )
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = 0U;
3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 62


3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTask != NULL )
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * -----------------------------------------------------------
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The Idle task.
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * ----------------------------------------------------------
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  *
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c ****  */
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) pvParameters;
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	any. */
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( ;; )
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			see if any other task has become available.  If we are using
3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			will automatically get the processor anyway. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskYIELD();
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 63


3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			timeslice.
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				taskYIELD();
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			allows the application designer to add background functionality
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			without the overhead of a separate task.
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vApplicationIdleHook();
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		user defined low power mode	implementations require
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			test of the expected idle time is performed without the
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			valid. */
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskSuspendAll();
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					time can be sampled again, and this time its value can
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 64


3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					be used. */
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if the application does not want
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) xTaskResumeAll();
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			eReturn = eAbortSleep;
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupts. */
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 65


3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return eReturn;
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = NULL;
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pvReturn;
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 66


3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the calling task. */
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	using list2. */
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		TCB_t *pxTCB;
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		being called too often in the idle task. */
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 67


3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskENTER_CRITICAL();
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			taskEXIT_CRITICAL();
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		state is just set to whatever is passed in. */
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( eState != eInvalid )
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 68


3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( eState == eSuspended )
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						vTaskSuspendAll();
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						( void ) xTaskResumeAll();
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#else
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#endif
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 69


3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			do
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxTask++;
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxTask;
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulCount = 0U;
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulCount++;
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 70


3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxReturn;
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#else
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return uxReturn;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the stack and TCB. */
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			check what was statically allocated before trying to free the
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			memory. */
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				must be freed. */
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 71


3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				only memory that must be freed. */
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vPortFree( pxTCB );
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				nothing needs to be freed. */
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 116              		.loc 1 3742 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 121              		.loc 1 3745 0
 122 0000 094B     		ldr	r3, .L19
 123 0002 9B6A     		ldr	r3, [r3, #40]
 124 0004 1B68     		ldr	r3, [r3]
 125 0006 0BB9     		cbnz	r3, .L18
 126 0008 0123     		movs	r3, #1
 127 000a 00E0     		b	.L15
 128              	.L18:
 129 000c 0023     		movs	r3, #0
 130              	.L15:
 131              		.loc 1 3745 0 is_stmt 0 discriminator 4
 132 000e 23B1     		cbz	r3, .L16
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		there is an item in the delayed list. */
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 133              		.loc 1 3751 0 is_stmt 1
 134 0010 4FF0FF32 		mov	r2, #-1
 135 0014 044B     		ldr	r3, .L19
 136 0016 DA62     		str	r2, [r3, #44]
 137 0018 7047     		bx	lr
 138              	.L16:
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 72


3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from the Blocked state. */
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 139              		.loc 1 3759 0
 140 001a 034B     		ldr	r3, .L19
 141 001c 9A6A     		ldr	r2, [r3, #40]
 142 001e D268     		ldr	r2, [r2, #12]
 143 0020 D268     		ldr	r2, [r2, #12]
 144              	.LVL9:
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 145              		.loc 1 3760 0
 146 0022 5268     		ldr	r2, [r2, #4]
 147              	.LVL10:
 148 0024 DA62     		str	r2, [r3, #44]
 149 0026 7047     		bx	lr
 150              	.L20:
 151              		.align	2
 152              	.L19:
 153 0028 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE174:
 156              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 157              		.section	.text.prvDeleteTCB,"ax",%progbits
 158              		.align	2
 159              		.thumb
 160              		.thumb_func
 161              		.type	prvDeleteTCB, %function
 162              	prvDeleteTCB:
 163              	.LFB173:
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 164              		.loc 1 3688 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              	.LVL11:
 169 0000 10B5     		push	{r4, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 0446     		mov	r4, r0
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTCB );
 174              		.loc 1 3706 0
 175 0004 006B     		ldr	r0, [r0, #48]
 176              	.LVL12:
 177 0006 FFF7FEFF 		bl	vPortFree
 178              	.LVL13:
3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 179              		.loc 1 3707 0
 180 000a 2046     		mov	r0, r4
 181 000c FFF7FEFF 		bl	vPortFree
 182              	.LVL14:
 183 0010 10BD     		pop	{r4, pc}
 184              		.cfi_endproc
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 73


 185              	.LFE173:
 186              		.size	prvDeleteTCB, .-prvDeleteTCB
 187 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 191              		.type	prvInitialiseNewTask, %function
 192              	prvInitialiseNewTask:
 193              	.LFB137:
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** StackType_t *pxTopOfStack;
 194              		.loc 1 831 0
 195              		.cfi_startproc
 196              		@ args = 16, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              	.LVL15:
 199 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 200              		.cfi_def_cfa_offset 32
 201              		.cfi_offset 4, -32
 202              		.cfi_offset 5, -28
 203              		.cfi_offset 6, -24
 204              		.cfi_offset 7, -20
 205              		.cfi_offset 8, -16
 206              		.cfi_offset 9, -12
 207              		.cfi_offset 10, -8
 208              		.cfi_offset 14, -4
 209 0004 8246     		mov	r10, r0
 210 0006 8946     		mov	r9, r1
 211 0008 1546     		mov	r5, r2
 212 000a 9846     		mov	r8, r3
 213 000c 089F     		ldr	r7, [sp, #32]
 214 000e 099E     		ldr	r6, [sp, #36]
 215 0010 0A9C     		ldr	r4, [sp, #40]
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 216              		.loc 1 853 0
 217 0012 9200     		lsls	r2, r2, #2
 218              	.LVL16:
 219 0014 A521     		movs	r1, #165
 220              	.LVL17:
 221 0016 206B     		ldr	r0, [r4, #48]
 222              	.LVL18:
 223 0018 FFF7FEFF 		bl	memset
 224              	.LVL19:
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 225              		.loc 1 863 0
 226 001c 236B     		ldr	r3, [r4, #48]
 227 001e 05F18042 		add	r2, r5, #1073741824
 228 0022 013A     		subs	r2, r2, #1
 229 0024 03EB8205 		add	r5, r3, r2, lsl #2
 230              	.LVL20:
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 231              		.loc 1 864 0
 232 0028 25F00705 		bic	r5, r5, #7
 233              	.LVL21:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 234              		.loc 1 891 0
 235 002c 0023     		movs	r3, #0
 236 002e 08E0     		b	.L24
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 74


 237              	.LVL22:
 238              	.L26:
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 239              		.loc 1 893 0
 240 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 241 0034 E218     		adds	r2, r4, r3
 242 0036 82F83410 		strb	r1, [r2, #52]
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 243              		.loc 1 898 0
 244 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 245 003e 12B1     		cbz	r2, .L25
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 246              		.loc 1 891 0 discriminator 2
 247 0040 0133     		adds	r3, r3, #1
 248              	.LVL23:
 249              	.L24:
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 250              		.loc 1 891 0 is_stmt 0 discriminator 1
 251 0042 0F2B     		cmp	r3, #15
 252 0044 F4D9     		bls	.L26
 253              	.L25:
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 254              		.loc 1 910 0 is_stmt 1
 255 0046 0023     		movs	r3, #0
 256              	.LVL24:
 257 0048 84F84330 		strb	r3, [r4, #67]
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 258              		.loc 1 914 0
 259 004c 062F     		cmp	r7, #6
 260 004e 00D9     		bls	.L27
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 261              		.loc 1 916 0
 262 0050 0627     		movs	r7, #6
 263              	.L27:
 264              	.LVL25:
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 265              		.loc 1 923 0
 266 0052 E762     		str	r7, [r4, #44]
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 267              		.loc 1 931 0
 268 0054 201D     		adds	r0, r4, #4
 269 0056 FFF7FEFF 		bl	vListInitialiseItem
 270              	.LVL26:
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 271              		.loc 1 932 0
 272 005a 04F11800 		add	r0, r4, #24
 273 005e FFF7FEFF 		bl	vListInitialiseItem
 274              	.LVL27:
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 275              		.loc 1 936 0
 276 0062 2461     		str	r4, [r4, #16]
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 277              		.loc 1 939 0
 278 0064 C7F10703 		rsb	r3, r7, #7
 279 0068 A361     		str	r3, [r4, #24]
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 280              		.loc 1 940 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 75


 281 006a 6462     		str	r4, [r4, #36]
 282              	.LVL28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 283              		.loc 1 973 0
 284 006c 0023     		movs	r3, #0
 285 006e 06E0     		b	.L28
 286              	.LVL29:
 287              	.L29:
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 288              		.loc 1 975 0 discriminator 3
 289 0070 03F11002 		add	r2, r3, #16
 290 0074 04EB8202 		add	r2, r4, r2, lsl #2
 291 0078 0021     		movs	r1, #0
 292 007a 5160     		str	r1, [r2, #4]
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 293              		.loc 1 973 0 discriminator 3
 294 007c 0133     		adds	r3, r3, #1
 295              	.LVL30:
 296              	.L28:
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 297              		.loc 1 973 0 is_stmt 0 discriminator 1
 298 007e 042B     		cmp	r3, #4
 299 0080 F6D9     		bls	.L29
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 300              		.loc 1 982 0 is_stmt 1
 301 0082 0023     		movs	r3, #0
 302              	.LVL31:
 303 0084 A365     		str	r3, [r4, #88]
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 304              		.loc 1 983 0
 305 0086 84F85C30 		strb	r3, [r4, #92]
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 306              		.loc 1 1010 0
 307 008a 4246     		mov	r2, r8
 308 008c 5146     		mov	r1, r10
 309 008e 2846     		mov	r0, r5
 310 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 311              	.LVL32:
 312 0094 2060     		str	r0, [r4]
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 313              		.loc 1 1014 0
 314 0096 06B1     		cbz	r6, .L23
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 315              		.loc 1 1018 0
 316 0098 3460     		str	r4, [r6]
 317              	.L23:
 318 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 319              		.cfi_endproc
 320              	.LFE137:
 321              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 322 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 323              		.align	2
 324              		.thumb
 325              		.thumb_func
 326              		.type	prvInitialiseTaskLists, %function
 327              	prvInitialiseTaskLists:
 328              	.LFB171:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 76


3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** UBaseType_t uxPriority;
 329              		.loc 1 3448 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 70B5     		push	{r4, r5, r6, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 4, -16
 336              		.cfi_offset 5, -12
 337              		.cfi_offset 6, -8
 338              		.cfi_offset 14, -4
 339              	.LVL33:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 340              		.loc 1 3451 0
 341 0002 0024     		movs	r4, #0
 342 0004 07E0     		b	.L34
 343              	.LVL34:
 344              	.L35:
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 345              		.loc 1 3453 0 discriminator 3
 346 0006 04EB8402 		add	r2, r4, r4, lsl #2
 347 000a 9300     		lsls	r3, r2, #2
 348 000c 1048     		ldr	r0, .L37
 349 000e 1844     		add	r0, r0, r3
 350 0010 FFF7FEFF 		bl	vListInitialise
 351              	.LVL35:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 352              		.loc 1 3451 0 discriminator 3
 353 0014 0134     		adds	r4, r4, #1
 354              	.LVL36:
 355              	.L34:
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 356              		.loc 1 3451 0 is_stmt 0 discriminator 1
 357 0016 062C     		cmp	r4, #6
 358 0018 F5D9     		bls	.L35
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 359              		.loc 1 3456 0 is_stmt 1
 360 001a 0E4C     		ldr	r4, .L37+4
 361              	.LVL37:
 362 001c 04F1BC06 		add	r6, r4, #188
 363 0020 3046     		mov	r0, r6
 364 0022 FFF7FEFF 		bl	vListInitialise
 365              	.LVL38:
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 366              		.loc 1 3457 0
 367 0026 04F1D005 		add	r5, r4, #208
 368 002a 2846     		mov	r0, r5
 369 002c FFF7FEFF 		bl	vListInitialise
 370              	.LVL39:
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 371              		.loc 1 3458 0
 372 0030 04F11400 		add	r0, r4, #20
 373 0034 FFF7FEFF 		bl	vListInitialise
 374              	.LVL40:
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 375              		.loc 1 3462 0
 376 0038 04F1E400 		add	r0, r4, #228
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 77


 377 003c FFF7FEFF 		bl	vListInitialise
 378              	.LVL41:
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 379              		.loc 1 3468 0
 380 0040 2046     		mov	r0, r4
 381 0042 FFF7FEFF 		bl	vListInitialise
 382              	.LVL42:
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 383              		.loc 1 3474 0
 384 0046 A662     		str	r6, [r4, #40]
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 385              		.loc 1 3475 0
 386 0048 C4F8F850 		str	r5, [r4, #248]
 387 004c 70BD     		pop	{r4, r5, r6, pc}
 388              	.L38:
 389 004e 00BF     		.align	2
 390              	.L37:
 391 0050 30000000 		.word	.LANCHOR0+48
 392 0054 00000000 		.word	.LANCHOR0
 393              		.cfi_endproc
 394              	.LFE171:
 395              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 396              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 397              		.align	2
 398              		.thumb
 399              		.thumb_func
 400              		.type	prvAddNewTaskToReadyList, %function
 401              	prvAddNewTaskToReadyList:
 402              	.LFB138:
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 403              		.loc 1 1028 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              	.LVL43:
 408 0000 38B5     		push	{r3, r4, r5, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 3, -16
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 5, -8
 413              		.cfi_offset 14, -4
 414 0002 0446     		mov	r4, r0
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 415              		.loc 1 1031 0
 416 0004 FFF7FEFF 		bl	vPortEnterCritical
 417              	.LVL44:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 418              		.loc 1 1033 0
 419 0008 264B     		ldr	r3, .L45
 420 000a D3F8FC20 		ldr	r2, [r3, #252]
 421 000e 0132     		adds	r2, r2, #1
 422 0010 C3F8FC20 		str	r2, [r3, #252]
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 423              		.loc 1 1034 0
 424 0014 D3F80031 		ldr	r3, [r3, #256]
 425 0018 4BB9     		cbnz	r3, .L40
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 78


 426              		.loc 1 1038 0
 427 001a 224B     		ldr	r3, .L45
 428 001c C3F80041 		str	r4, [r3, #256]
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 429              		.loc 1 1040 0
 430 0020 D3F8FC30 		ldr	r3, [r3, #252]
 431 0024 012B     		cmp	r3, #1
 432 0026 10D1     		bne	.L41
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 433              		.loc 1 1045 0
 434 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 435              	.LVL45:
 436 002c 0DE0     		b	.L41
 437              	.L40:
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 438              		.loc 1 1057 0
 439 002e 1D4B     		ldr	r3, .L45
 440 0030 D3F80431 		ldr	r3, [r3, #260]
 441 0034 4BB9     		cbnz	r3, .L41
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 442              		.loc 1 1059 0
 443 0036 1B4B     		ldr	r3, .L45
 444 0038 D3F80031 		ldr	r3, [r3, #256]
 445 003c DA6A     		ldr	r2, [r3, #44]
 446 003e E36A     		ldr	r3, [r4, #44]
 447 0040 9A42     		cmp	r2, r3
 448 0042 02D8     		bhi	.L41
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 449              		.loc 1 1061 0
 450 0044 174B     		ldr	r3, .L45
 451 0046 C3F80041 		str	r4, [r3, #256]
 452              	.L41:
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 453              		.loc 1 1074 0
 454 004a 164A     		ldr	r2, .L45
 455 004c D2F80831 		ldr	r3, [r2, #264]
 456 0050 0133     		adds	r3, r3, #1
 457 0052 C2F80831 		str	r3, [r2, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 458              		.loc 1 1084 0
 459 0056 E36A     		ldr	r3, [r4, #44]
 460 0058 D2F80C21 		ldr	r2, [r2, #268]
 461 005c 9342     		cmp	r3, r2
 462 005e 02D9     		bls	.L42
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 463              		.loc 1 1084 0 is_stmt 0 discriminator 1
 464 0060 104A     		ldr	r2, .L45
 465 0062 C2F80C31 		str	r3, [r2, #268]
 466              	.L42:
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 467              		.loc 1 1084 0 discriminator 3
 468 0066 0F4D     		ldr	r5, .L45
 469 0068 05F13000 		add	r0, r5, #48
 470 006c 03EB8303 		add	r3, r3, r3, lsl #2
 471 0070 9A00     		lsls	r2, r3, #2
 472 0072 211D     		adds	r1, r4, #4
 473 0074 1044     		add	r0, r0, r2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 79


 474 0076 FFF7FEFF 		bl	vListInsertEnd
 475              	.LVL46:
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 476              		.loc 1 1088 0 is_stmt 1 discriminator 3
 477 007a FFF7FEFF 		bl	vPortExitCritical
 478              	.LVL47:
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 479              		.loc 1 1090 0 discriminator 3
 480 007e D5F80431 		ldr	r3, [r5, #260]
 481 0082 6BB1     		cbz	r3, .L39
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 482              		.loc 1 1094 0
 483 0084 D5F80031 		ldr	r3, [r5, #256]
 484 0088 DA6A     		ldr	r2, [r3, #44]
 485 008a E36A     		ldr	r3, [r4, #44]
 486 008c 9A42     		cmp	r2, r3
 487 008e 07D2     		bcs	.L39
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 488              		.loc 1 1096 0
 489 0090 4FF08052 		mov	r2, #268435456
 490 0094 044B     		ldr	r3, .L45+4
 491 0096 1A60     		str	r2, [r3]
 492              		.syntax unified
 493              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 494 0098 BFF34F8F 		dsb
 495              	@ 0 "" 2
 496              	@ 1096 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 497 009c BFF36F8F 		isb
 498              	@ 0 "" 2
 499              		.thumb
 500              		.syntax unified
 501              	.L39:
 502 00a0 38BD     		pop	{r3, r4, r5, pc}
 503              	.LVL48:
 504              	.L46:
 505 00a2 00BF     		.align	2
 506              	.L45:
 507 00a4 00000000 		.word	.LANCHOR0
 508 00a8 04ED00E0 		.word	-536810236
 509              		.cfi_endproc
 510              	.LFE138:
 511              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 512              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 513              		.align	2
 514              		.thumb
 515              		.thumb_func
 516              		.type	prvCheckTasksWaitingTermination, %function
 517              	prvCheckTasksWaitingTermination:
 518              	.LFB172:
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 519              		.loc 1 3480 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523 0000 38B5     		push	{r3, r4, r5, lr}
 524              		.cfi_def_cfa_offset 16
 525              		.cfi_offset 3, -16
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 80


 526              		.cfi_offset 4, -12
 527              		.cfi_offset 5, -8
 528              		.cfi_offset 14, -4
 529              	.LBB96:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 530              		.loc 1 3490 0
 531 0002 17E0     		b	.L48
 532              	.L49:
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 533              		.loc 1 3492 0
 534 0004 FFF7FEFF 		bl	vPortEnterCritical
 535              	.LVL49:
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 536              		.loc 1 3494 0
 537 0008 0D4C     		ldr	r4, .L51
 538 000a D4F8F030 		ldr	r3, [r4, #240]
 539 000e DD68     		ldr	r5, [r3, #12]
 540              	.LVL50:
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 541              		.loc 1 3495 0
 542 0010 281D     		adds	r0, r5, #4
 543 0012 FFF7FEFF 		bl	uxListRemove
 544              	.LVL51:
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 545              		.loc 1 3496 0
 546 0016 D4F8FC30 		ldr	r3, [r4, #252]
 547 001a 013B     		subs	r3, r3, #1
 548 001c C4F8FC30 		str	r3, [r4, #252]
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 549              		.loc 1 3497 0
 550 0020 D4F81031 		ldr	r3, [r4, #272]
 551 0024 013B     		subs	r3, r3, #1
 552 0026 C4F81031 		str	r3, [r4, #272]
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 553              		.loc 1 3499 0
 554 002a FFF7FEFF 		bl	vPortExitCritical
 555              	.LVL52:
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 556              		.loc 1 3501 0
 557 002e 2846     		mov	r0, r5
 558 0030 FFF7FEFF 		bl	prvDeleteTCB
 559              	.LVL53:
 560              	.L48:
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 561              		.loc 1 3490 0
 562 0034 024B     		ldr	r3, .L51
 563 0036 D3F81031 		ldr	r3, [r3, #272]
 564 003a 002B     		cmp	r3, #0
 565 003c E2D1     		bne	.L49
 566              	.LBE96:
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 567              		.loc 1 3505 0
 568 003e 38BD     		pop	{r3, r4, r5, pc}
 569              	.L52:
 570              		.align	2
 571              	.L51:
 572 0040 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 81


 573              		.cfi_endproc
 574              	.LFE172:
 575              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 576              		.section	.text.prvIdleTask,"ax",%progbits
 577              		.align	2
 578              		.thumb
 579              		.thumb_func
 580              		.type	prvIdleTask, %function
 581              	prvIdleTask:
 582              	.LFB168:
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop warnings. */
 583              		.loc 1 3236 0
 584              		.cfi_startproc
 585              		@ Volatile: function does not return.
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              	.LVL54:
 589 0000 08B5     		push	{r3, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 3, -8
 592              		.cfi_offset 14, -4
 593              	.LVL55:
 594              	.L54:
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 595              		.loc 1 3252 0
 596 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 597              	.LVL56:
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 598              		.loc 1 3275 0
 599 0006 064B     		ldr	r3, .L57
 600 0008 1B6B     		ldr	r3, [r3, #48]
 601 000a 012B     		cmp	r3, #1
 602 000c F9D9     		bls	.L54
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 603              		.loc 1 3277 0
 604 000e 4FF08052 		mov	r2, #268435456
 605 0012 044B     		ldr	r3, .L57+4
 606 0014 1A60     		str	r2, [r3]
 607              		.syntax unified
 608              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 609 0016 BFF34F8F 		dsb
 610              	@ 0 "" 2
 611              	@ 3277 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 612 001a BFF36F8F 		isb
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616 001e F0E7     		b	.L54
 617              	.L58:
 618              		.align	2
 619              	.L57:
 620 0020 00000000 		.word	.LANCHOR0
 621 0024 04ED00E0 		.word	-536810236
 622              		.cfi_endproc
 623              	.LFE168:
 624              		.size	prvIdleTask, .-prvIdleTask
 625              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 82


 626              		.align	2
 627              		.thumb
 628              		.thumb_func
 629              		.type	prvAddCurrentTaskToDelayedList, %function
 630              	prvAddCurrentTaskToDelayedList:
 631              	.LFB184:
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		individual execution thread. */
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 83


3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				not being used for anything else. */
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				to be moved into a new list. */
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Just inherit the priority. */
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Inheritance occurred. */
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 84


3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority of the task attempting to take the mutex.
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					not been the case. */
3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			be the running state task. */
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task? */
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the holding task from the ready list. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 85


3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					new	ready list. */
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					running to give back the mutex. */
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This is only actually required in the corner case whereby
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					in an order different to that in which they were taken.
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a task is waiting on it or not. */
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xReturn = pdTRUE;
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 86


3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			one mutex. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			holding task's base priority and the priority of the highest
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Does the priority need to change? */
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task has timed out because it already holds the
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					its own priority. */
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					priority to facilitate determining the subject task's
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					state. */
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					being used for anything else. */
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					then the task that holds the mutex could be in either the
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					from its current state list if it is in the Ready state as
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 87


4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the task's priority is going to change and there is one
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					Ready list per priority. */
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						else
4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskEnterCritical( void )
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			critical section. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 88


4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskExitCritical( void )
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portENABLE_INTERRUPTS();
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	size_t x;
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Start by copying the entire string. */
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		printed out. */
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 89


4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Terminate. */
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Return the new end of string. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return &( pcBuffer[ x ] );
4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	char cStatus;
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays task names, states and stack usage.
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * snprintf() implementation!).
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskList().
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 90


4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										to prevent static checking errors. */
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										cStatus = 0x00;
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 										break;
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				can be printed in tabular form more easily. */
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Write the rest of the string. */
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*----------------------------------------------------------*/
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 91


4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		#endif
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/*
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * PLEASE NOTE:
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * scheduler.
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * in both absolute and percentage terms.
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * a full snprintf() implementation!).
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 *
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		 */
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		function is executing. */
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		equate to NULL. */
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Generate the (binary) data. */
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* For percentage calculations. */
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulTotalTime /= 100UL;
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 92


4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Avoid divide by zero errors. */
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulTotalTime > 0 )
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* Write the task name to the string, padding with
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					easily. */
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#else
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							printf() library can be used. */
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						#endif
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 93


4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	queues and semaphores. */
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return uxReturn;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return pxCurrentTCB;
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 94


4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ulReturn != 0UL )
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return ulReturn;
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 95


4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				clear the value to zero. */
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					critical section exits) - but it is not something that
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					application code should ever do. */
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					portYIELD_WITHIN_API();
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				have changed. */
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			unblocked because of a timeout. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was not received. */
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFALSE;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 96


4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* A notification was already pending or a notification was
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				received while the task was waiting. */
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 97


4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction:
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY();
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					because it will automatically get reset to a new value when
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					earliest possible time. */
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				#endif
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 98


4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			switch( eAction )
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetBits	:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 99


4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eIncrement	:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* The value could not be written to the task. */
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xReturn = pdFAIL;
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				case eNoAction :
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The task is being notified without its notify value being
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					updated. */
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 100


4781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
4807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		provided on the following link:
4827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 101


4838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			semaphore. */
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			notification then unblock it now. */
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The task should not have been on an event list. */
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					/* The notified task has a priority above the currently
4865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					executing task so a yield is required. */
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					else
4871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
4872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						safe FreeRTOS function. */
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						xYieldPending = pdTRUE;
4876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
4877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				else
4879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
4882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 102


4895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
4896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
4897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		its notification state cleared. */
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskENTER_CRITICAL();
4903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
4908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdFAIL;
4912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		taskEXIT_CRITICAL();
4915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		return xReturn;
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
4921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** {
 632              		.loc 1 4924 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL57:
 637 0000 70B5     		push	{r4, r5, r6, lr}
 638              		.cfi_def_cfa_offset 16
 639              		.cfi_offset 4, -16
 640              		.cfi_offset 5, -12
 641              		.cfi_offset 6, -8
 642              		.cfi_offset 14, -4
 643 0002 0446     		mov	r4, r0
 644 0004 0E46     		mov	r6, r1
4925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTimeToWake;
4926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 645              		.loc 1 4926 0
 646 0006 174B     		ldr	r3, .L64
 647 0008 D3F81451 		ldr	r5, [r3, #276]
 648              	.LVL58:
4927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		when the task leaves the Blocked state. */
4933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 103


4935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#endif
4936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	as the same list item is used for both lists. */
4939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 649              		.loc 1 4939 0
 650 000c D3F80001 		ldr	r0, [r3, #256]
 651              	.LVL59:
 652 0010 0430     		adds	r0, r0, #4
 653 0012 FFF7FEFF 		bl	uxListRemove
 654              	.LVL60:
4940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	else
4946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
4949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
4952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 655              		.loc 1 4952 0
 656 0016 B4F1FF3F 		cmp	r4, #-1
 657 001a 07D1     		bne	.L60
 658              		.loc 1 4952 0 is_stmt 0 discriminator 1
 659 001c 36B1     		cbz	r6, .L60
4953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			indefinitely. */
4957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 660              		.loc 1 4957 0 is_stmt 1
 661 001e 1148     		ldr	r0, .L64
 662 0020 D0F80011 		ldr	r1, [r0, #256]
 663 0024 0431     		adds	r1, r1, #4
 664 0026 FFF7FEFF 		bl	vListInsertEnd
 665              	.LVL61:
 666 002a 70BD     		pop	{r4, r5, r6, pc}
 667              	.LVL62:
 668              	.L60:
4958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
4959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		else
4960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
4961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			kernel will manage it correctly. */
4964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 669              		.loc 1 4964 0
 670 002c 2C44     		add	r4, r4, r5
 671              	.LVL63:
4965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 672              		.loc 1 4967 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 104


 673 002e 0D4B     		ldr	r3, .L64
 674 0030 D3F80031 		ldr	r3, [r3, #256]
 675 0034 5C60     		str	r4, [r3, #4]
4968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 676              		.loc 1 4969 0
 677 0036 A542     		cmp	r5, r4
 678 0038 08D9     		bls	.L62
4970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				list. */
4973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 679              		.loc 1 4973 0
 680 003a 0A4B     		ldr	r3, .L64
 681 003c D3F8F800 		ldr	r0, [r3, #248]
 682 0040 D3F80011 		ldr	r1, [r3, #256]
 683 0044 0431     		adds	r1, r1, #4
 684 0046 FFF7FEFF 		bl	vListInsert
 685              	.LVL64:
 686 004a 70BD     		pop	{r4, r5, r6, pc}
 687              	.LVL65:
 688              	.L62:
4974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
4975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			else
4976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
4977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				is used. */
4979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 689              		.loc 1 4979 0
 690 004c 054D     		ldr	r5, .L64
 691              	.LVL66:
 692 004e A86A     		ldr	r0, [r5, #40]
 693 0050 D5F80011 		ldr	r1, [r5, #256]
 694 0054 0431     		adds	r1, r1, #4
 695 0056 FFF7FEFF 		bl	vListInsert
 696              	.LVL67:
4980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
4981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				needs to be updated too. */
4984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 697              		.loc 1 4984 0
 698 005a EB6A     		ldr	r3, [r5, #44]
 699 005c 9C42     		cmp	r4, r3
 700 005e 00D2     		bcs	.L59
4985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
4986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 701              		.loc 1 4986 0
 702 0060 EC62     		str	r4, [r5, #44]
 703              	.L59:
 704 0062 70BD     		pop	{r4, r5, r6, pc}
 705              	.LVL68:
 706              	.L65:
 707              		.align	2
 708              	.L64:
 709 0064 00000000 		.word	.LANCHOR0
 710              		.cfi_endproc
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 105


 711              	.LFE184:
 712              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 713              		.section	.text.xTaskCreate,"ax",%progbits
 714              		.align	2
 715              		.global	xTaskCreate
 716              		.thumb
 717              		.thumb_func
 718              		.type	xTaskCreate, %function
 719              	xTaskCreate:
 720              	.LFB136:
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxNewTCB;
 721              		.loc 1 738 0
 722              		.cfi_startproc
 723              		@ args = 8, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL69:
 726 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 727              		.cfi_def_cfa_offset 28
 728              		.cfi_offset 4, -28
 729              		.cfi_offset 5, -24
 730              		.cfi_offset 6, -20
 731              		.cfi_offset 7, -16
 732              		.cfi_offset 8, -12
 733              		.cfi_offset 9, -8
 734              		.cfi_offset 14, -4
 735 0004 85B0     		sub	sp, sp, #20
 736              		.cfi_def_cfa_offset 48
 737 0006 0646     		mov	r6, r0
 738 0008 0F46     		mov	r7, r1
 739 000a 1546     		mov	r5, r2
 740 000c 9846     		mov	r8, r3
 741              	.LBB97:
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 742              		.loc 1 772 0
 743 000e 9000     		lsls	r0, r2, #2
 744              	.LVL70:
 745 0010 FFF7FEFF 		bl	pvPortMalloc
 746              	.LVL71:
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 747              		.loc 1 774 0
 748 0014 60B1     		cbz	r0, .L70
 749 0016 8146     		mov	r9, r0
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 750              		.loc 1 777 0
 751 0018 6020     		movs	r0, #96
 752              	.LVL72:
 753 001a FFF7FEFF 		bl	pvPortMalloc
 754              	.LVL73:
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 755              		.loc 1 779 0
 756 001e 0446     		mov	r4, r0
 757 0020 10B1     		cbz	r0, .L68
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 758              		.loc 1 782 0
 759 0022 C0F83090 		str	r9, [r0, #48]
 760 0026 04E0     		b	.L67
 761              	.L68:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 106


 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 762              		.loc 1 788 0
 763 0028 4846     		mov	r0, r9
 764              	.LVL74:
 765 002a FFF7FEFF 		bl	vPortFree
 766              	.LVL75:
 767 002e 00E0     		b	.L67
 768              	.LVL76:
 769              	.L70:
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 770              		.loc 1 793 0
 771 0030 0024     		movs	r4, #0
 772              	.LVL77:
 773              	.L67:
 774              	.LBE97:
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 775              		.loc 1 798 0
 776 0032 8CB1     		cbz	r4, .L71
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 777              		.loc 1 808 0
 778 0034 0023     		movs	r3, #0
 779 0036 0393     		str	r3, [sp, #12]
 780 0038 0294     		str	r4, [sp, #8]
 781 003a 0D9B     		ldr	r3, [sp, #52]
 782 003c 0193     		str	r3, [sp, #4]
 783 003e 0C9B     		ldr	r3, [sp, #48]
 784 0040 0093     		str	r3, [sp]
 785 0042 4346     		mov	r3, r8
 786 0044 2A46     		mov	r2, r5
 787 0046 3946     		mov	r1, r7
 788 0048 3046     		mov	r0, r6
 789 004a FFF7FEFF 		bl	prvInitialiseNewTask
 790              	.LVL78:
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdPASS;
 791              		.loc 1 809 0
 792 004e 2046     		mov	r0, r4
 793 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 794              	.LVL79:
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 795              		.loc 1 810 0
 796 0054 0120     		movs	r0, #1
 797 0056 01E0     		b	.L69
 798              	.LVL80:
 799              	.L71:
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 800              		.loc 1 814 0
 801 0058 4FF0FF30 		mov	r0, #-1
 802              	.L69:
 803              	.LVL81:
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 804              		.loc 1 818 0
 805 005c 05B0     		add	sp, sp, #20
 806              		.cfi_def_cfa_offset 28
 807              		@ sp needed
 808 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 809              		.cfi_endproc
 810              	.LFE136:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 107


 811              		.size	xTaskCreate, .-xTaskCreate
 812 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 813              		.align	2
 814              		.global	vTaskDelete
 815              		.thumb
 816              		.thumb_func
 817              		.type	vTaskDelete, %function
 818              	vTaskDelete:
 819              	.LFB139:
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 820              		.loc 1 1113 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              	.LVL82:
 825 0000 70B5     		push	{r4, r5, r6, lr}
 826              		.cfi_def_cfa_offset 16
 827              		.cfi_offset 4, -16
 828              		.cfi_offset 5, -12
 829              		.cfi_offset 6, -8
 830              		.cfi_offset 14, -4
 831 0002 0446     		mov	r4, r0
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 832              		.loc 1 1116 0
 833 0004 FFF7FEFF 		bl	vPortEnterCritical
 834              	.LVL83:
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 835              		.loc 1 1120 0
 836 0008 14B9     		cbnz	r4, .L74
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 837              		.loc 1 1120 0 is_stmt 0 discriminator 1
 838 000a 274B     		ldr	r3, .L82
 839 000c D3F80041 		ldr	r4, [r3, #256]
 840              	.LVL84:
 841              	.L74:
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 842              		.loc 1 1123 0 is_stmt 1 discriminator 4
 843 0010 261D     		adds	r6, r4, #4
 844 0012 3046     		mov	r0, r6
 845 0014 FFF7FEFF 		bl	uxListRemove
 846              	.LVL85:
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 847              		.loc 1 1133 0 discriminator 4
 848 0018 A36A     		ldr	r3, [r4, #40]
 849 001a 1BB1     		cbz	r3, .L75
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 850              		.loc 1 1135 0
 851 001c 04F11800 		add	r0, r4, #24
 852 0020 FFF7FEFF 		bl	uxListRemove
 853              	.LVL86:
 854              	.L75:
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 855              		.loc 1 1146 0
 856 0024 204B     		ldr	r3, .L82
 857 0026 D3F80821 		ldr	r2, [r3, #264]
 858 002a 0132     		adds	r2, r2, #1
 859 002c C3F80821 		str	r2, [r3, #264]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 108


1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 860              		.loc 1 1148 0
 861 0030 D3F80031 		ldr	r3, [r3, #256]
 862 0034 9C42     		cmp	r4, r3
 863 0036 0BD1     		bne	.L76
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 864              		.loc 1 1155 0
 865 0038 1B4D     		ldr	r5, .L82
 866 003a 3146     		mov	r1, r6
 867 003c 05F1E400 		add	r0, r5, #228
 868 0040 FFF7FEFF 		bl	vListInsertEnd
 869              	.LVL87:
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 870              		.loc 1 1160 0
 871 0044 D5F81031 		ldr	r3, [r5, #272]
 872 0048 0133     		adds	r3, r3, #1
 873 004a C5F81031 		str	r3, [r5, #272]
 874 004e 0AE0     		b	.L77
 875              	.L76:
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 876              		.loc 1 1171 0
 877 0050 154A     		ldr	r2, .L82
 878 0052 D2F8FC30 		ldr	r3, [r2, #252]
 879 0056 013B     		subs	r3, r3, #1
 880 0058 C2F8FC30 		str	r3, [r2, #252]
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 881              		.loc 1 1172 0
 882 005c 2046     		mov	r0, r4
 883 005e FFF7FEFF 		bl	prvDeleteTCB
 884              	.LVL88:
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 885              		.loc 1 1176 0
 886 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 887              	.LVL89:
 888              	.L77:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 889              		.loc 1 1181 0
 890 0066 FFF7FEFF 		bl	vPortExitCritical
 891              	.LVL90:
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 892              		.loc 1 1185 0
 893 006a 0F4B     		ldr	r3, .L82
 894 006c D3F80431 		ldr	r3, [r3, #260]
 895 0070 CBB1     		cbz	r3, .L73
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 896              		.loc 1 1187 0
 897 0072 0D4B     		ldr	r3, .L82
 898 0074 D3F80031 		ldr	r3, [r3, #256]
 899 0078 9C42     		cmp	r4, r3
 900 007a 14D1     		bne	.L73
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
 901              		.loc 1 1189 0
 902 007c 0A4B     		ldr	r3, .L82
 903 007e D3F81831 		ldr	r3, [r3, #280]
 904 0082 43B1     		cbz	r3, .L79
 905              	.LBB98:
 906              	.LBB99:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 109


 907              		.loc 2 156 0
 908              		.syntax unified
 909              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 910 0084 4FF02003 			mov r3, #32												
 911 0088 83F31188 		msr basepri, r3											
 912 008c BFF36F8F 		isb														
 913 0090 BFF34F8F 		dsb														
 914              	
 915              	@ 0 "" 2
 916              	.LVL91:
 917              		.thumb
 918              		.syntax unified
 919              	.L80:
 920 0094 FEE7     		b	.L80
 921              	.L79:
 922              	.LBE99:
 923              	.LBE98:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 924              		.loc 1 1190 0
 925 0096 4FF08052 		mov	r2, #268435456
 926 009a 044B     		ldr	r3, .L82+4
 927 009c 1A60     		str	r2, [r3]
 928              		.syntax unified
 929              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 930 009e BFF34F8F 		dsb
 931              	@ 0 "" 2
 932              	@ 1190 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 933 00a2 BFF36F8F 		isb
 934              	@ 0 "" 2
 935              		.thumb
 936              		.syntax unified
 937              	.L73:
 938 00a6 70BD     		pop	{r4, r5, r6, pc}
 939              	.LVL92:
 940              	.L83:
 941              		.align	2
 942              	.L82:
 943 00a8 00000000 		.word	.LANCHOR0
 944 00ac 04ED00E0 		.word	-536810236
 945              		.cfi_endproc
 946              	.LFE139:
 947              		.size	vTaskDelete, .-vTaskDelete
 948              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 949              		.align	2
 950              		.global	uxTaskPriorityGet
 951              		.thumb
 952              		.thumb_func
 953              		.type	uxTaskPriorityGet, %function
 954              	uxTaskPriorityGet:
 955              	.LFB142:
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 956              		.loc 1 1405 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL93:
 961 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 110


 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 4, -8
 964              		.cfi_offset 14, -4
 965 0002 0446     		mov	r4, r0
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 966              		.loc 1 1409 0
 967 0004 FFF7FEFF 		bl	vPortEnterCritical
 968              	.LVL94:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 969              		.loc 1 1413 0
 970 0008 14B9     		cbnz	r4, .L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 971              		.loc 1 1413 0 is_stmt 0 discriminator 1
 972 000a 044B     		ldr	r3, .L87
 973 000c D3F80041 		ldr	r4, [r3, #256]
 974              	.LVL95:
 975              	.L85:
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 976              		.loc 1 1414 0 is_stmt 1 discriminator 4
 977 0010 E46A     		ldr	r4, [r4, #44]
 978              	.LVL96:
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 979              		.loc 1 1416 0 discriminator 4
 980 0012 FFF7FEFF 		bl	vPortExitCritical
 981              	.LVL97:
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 982              		.loc 1 1419 0 discriminator 4
 983 0016 2046     		mov	r0, r4
 984 0018 10BD     		pop	{r4, pc}
 985              	.LVL98:
 986              	.L88:
 987 001a 00BF     		.align	2
 988              	.L87:
 989 001c 00000000 		.word	.LANCHOR0
 990              		.cfi_endproc
 991              	.LFE142:
 992              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 993              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 994              		.align	2
 995              		.global	uxTaskPriorityGetFromISR
 996              		.thumb
 997              		.thumb_func
 998              		.type	uxTaskPriorityGetFromISR, %function
 999              	uxTaskPriorityGetFromISR:
 1000              	.LFB143:
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1001              		.loc 1 1427 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL99:
 1006 0000 10B5     		push	{r4, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
 1010 0002 0446     		mov	r4, r0
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 111


 1011              		.loc 1 1447 0
 1012 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1013              	.LVL100:
 1014              	.LBB100:
 1015              	.LBB101:
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1016              		.loc 2 172 0
 1017              		.syntax unified
 1018              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1019 0008 EFF31183 			mrs r3, basepri											
 1020 000c 4FF02002 		mov r2, #32												
 1021 0010 82F31188 		msr basepri, r2											
 1022 0014 BFF36F8F 		isb														
 1023 0018 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.LBE101:
 1029              	.LBE100:
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1030              		.loc 1 1453 0
 1031 001c 14B9     		cbnz	r4, .L90
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1032              		.loc 1 1453 0 is_stmt 0 discriminator 1
 1033 001e 034A     		ldr	r2, .L92
 1034 0020 D2F80041 		ldr	r4, [r2, #256]
 1035              	.LVL101:
 1036              	.L90:
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1037              		.loc 1 1454 0 is_stmt 1 discriminator 4
 1038 0024 E06A     		ldr	r0, [r4, #44]
 1039              	.LVL102:
 1040              	.LBB102:
 1041              	.LBB103:
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	isb														\n" \
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		"	dsb														\n" \
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 112


 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	);
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	warnings. */
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** {
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	__asm volatile
 1042              		.loc 2 190 0 discriminator 4
 1043              		.syntax unified
 1044              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1045 0026 83F31188 			msr basepri, r3	
 1046              	@ 0 "" 2
 1047              	.LVL103:
 1048              		.thumb
 1049              		.syntax unified
 1050              	.LBE103:
 1051              	.LBE102:
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1052              		.loc 1 1459 0 discriminator 4
 1053 002a 10BD     		pop	{r4, pc}
 1054              	.LVL104:
 1055              	.L93:
 1056              		.align	2
 1057              	.L92:
 1058 002c 00000000 		.word	.LANCHOR0
 1059              		.cfi_endproc
 1060              	.LFE143:
 1061              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 1062              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1063              		.align	2
 1064              		.global	vTaskPrioritySet
 1065              		.thumb
 1066              		.thumb_func
 1067              		.type	vTaskPrioritySet, %function
 1068              	vTaskPrioritySet:
 1069              	.LFB144:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1070              		.loc 1 1467 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 0, uses_anonymous_args = 0
 1074              	.LVL105:
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1075              		.loc 1 1472 0
 1076 0000 0629     		cmp	r1, #6
 1077 0002 08D9     		bls	.L95
 1078              	.LBB104:
 1079              	.LBB105:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1080              		.loc 2 156 0
 1081              		.syntax unified
 1082              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1083 0004 4FF02003 			mov r3, #32												
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 113


 1084 0008 83F31188 		msr basepri, r3											
 1085 000c BFF36F8F 		isb														
 1086 0010 BFF34F8F 		dsb														
 1087              	
 1088              	@ 0 "" 2
 1089              	.LVL106:
 1090              		.thumb
 1091              		.syntax unified
 1092              	.L96:
 1093 0014 FEE7     		b	.L96
 1094              	.L95:
 1095              	.LBE105:
 1096              	.LBE104:
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 1097              		.loc 1 1467 0
 1098 0016 70B5     		push	{r4, r5, r6, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 6, -8
 1103              		.cfi_offset 14, -4
 1104 0018 0446     		mov	r4, r0
 1105 001a 0D46     		mov	r5, r1
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1106              		.loc 1 1475 0
 1107 001c 0629     		cmp	r1, #6
 1108 001e 00D9     		bls	.L97
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1109              		.loc 1 1477 0
 1110 0020 0625     		movs	r5, #6
 1111              	.L97:
 1112              	.LVL107:
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1113              		.loc 1 1484 0
 1114 0022 FFF7FEFF 		bl	vPortEnterCritical
 1115              	.LVL108:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1116              		.loc 1 1488 0
 1117 0026 14B9     		cbnz	r4, .L98
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1118              		.loc 1 1488 0 is_stmt 0 discriminator 1
 1119 0028 294B     		ldr	r3, .L112
 1120 002a D3F80041 		ldr	r4, [r3, #256]
 1121              	.LVL109:
 1122              	.L98:
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 1123              		.loc 1 1498 0 is_stmt 1 discriminator 4
 1124 002e E36A     		ldr	r3, [r4, #44]
 1125              	.LVL110:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1126              		.loc 1 1502 0 discriminator 4
 1127 0030 9D42     		cmp	r5, r3
 1128 0032 4AD0     		beq	.L99
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1129              		.loc 1 1506 0
 1130 0034 0CD9     		bls	.L100
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 114


 1131              		.loc 1 1508 0
 1132 0036 264A     		ldr	r2, .L112
 1133 0038 D2F80021 		ldr	r2, [r2, #256]
 1134 003c 9442     		cmp	r4, r2
 1135 003e 0ED0     		beq	.L107
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1136              		.loc 1 1513 0
 1137 0040 234A     		ldr	r2, .L112
 1138 0042 D2F80021 		ldr	r2, [r2, #256]
 1139 0046 D26A     		ldr	r2, [r2, #44]
 1140 0048 9542     		cmp	r5, r2
 1141 004a 0AD2     		bcs	.L108
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1142              		.loc 1 1470 0
 1143 004c 0026     		movs	r6, #0
 1144 004e 0BE0     		b	.L101
 1145              	.L100:
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1146              		.loc 1 1529 0
 1147 0050 1F4A     		ldr	r2, .L112
 1148 0052 D2F80021 		ldr	r2, [r2, #256]
 1149 0056 9442     		cmp	r4, r2
 1150 0058 05D0     		beq	.L109
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1151              		.loc 1 1470 0
 1152 005a 0026     		movs	r6, #0
 1153 005c 04E0     		b	.L101
 1154              	.L107:
 1155 005e 0026     		movs	r6, #0
 1156 0060 02E0     		b	.L101
 1157              	.L108:
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1158              		.loc 1 1515 0
 1159 0062 0126     		movs	r6, #1
 1160 0064 00E0     		b	.L101
 1161              	.L109:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1162              		.loc 1 1534 0
 1163 0066 0126     		movs	r6, #1
 1164              	.L101:
 1165              	.LVL111:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1166              		.loc 1 1566 0
 1167 0068 E562     		str	r5, [r4, #44]
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1168              		.loc 1 1572 0
 1169 006a A269     		ldr	r2, [r4, #24]
 1170 006c 002A     		cmp	r2, #0
 1171 006e 02DB     		blt	.L102
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1172              		.loc 1 1574 0
 1173 0070 C5F10705 		rsb	r5, r5, #7
 1174              	.LVL112:
 1175 0074 A561     		str	r5, [r4, #24]
 1176              	.L102:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1177              		.loc 1 1585 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 115


 1178 0076 6169     		ldr	r1, [r4, #20]
 1179 0078 03EB8303 		add	r3, r3, r3, lsl #2
 1180              	.LVL113:
 1181 007c 9A00     		lsls	r2, r3, #2
 1182 007e 154B     		ldr	r3, .L112+4
 1183 0080 1A44     		add	r2, r2, r3
 1184 0082 9142     		cmp	r1, r2
 1185 0084 01D1     		bne	.L110
 1186 0086 0123     		movs	r3, #1
 1187 0088 00E0     		b	.L103
 1188              	.L110:
 1189 008a 0023     		movs	r3, #0
 1190              	.L103:
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1191              		.loc 1 1585 0 is_stmt 0 discriminator 4
 1192 008c A3B1     		cbz	r3, .L104
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1193              		.loc 1 1590 0 is_stmt 1
 1194 008e 251D     		adds	r5, r4, #4
 1195 0090 2846     		mov	r0, r5
 1196 0092 FFF7FEFF 		bl	uxListRemove
 1197              	.LVL114:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1198              		.loc 1 1601 0
 1199 0096 E36A     		ldr	r3, [r4, #44]
 1200 0098 0D4A     		ldr	r2, .L112
 1201 009a D2F80C21 		ldr	r2, [r2, #268]
 1202 009e 9342     		cmp	r3, r2
 1203 00a0 02D9     		bls	.L105
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1204              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1205 00a2 0B4A     		ldr	r2, .L112
 1206 00a4 C2F80C31 		str	r3, [r2, #268]
 1207              	.L105:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1208              		.loc 1 1601 0 discriminator 3
 1209 00a8 03EB8303 		add	r3, r3, r3, lsl #2
 1210 00ac 9A00     		lsls	r2, r3, #2
 1211 00ae 2946     		mov	r1, r5
 1212 00b0 0848     		ldr	r0, .L112+4
 1213 00b2 1044     		add	r0, r0, r2
 1214 00b4 FFF7FEFF 		bl	vListInsertEnd
 1215              	.LVL115:
 1216              	.L104:
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1217              		.loc 1 1608 0 is_stmt 1
 1218 00b8 3EB1     		cbz	r6, .L99
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1219              		.loc 1 1610 0
 1220 00ba 4FF08052 		mov	r2, #268435456
 1221 00be 064B     		ldr	r3, .L112+8
 1222 00c0 1A60     		str	r2, [r3]
 1223              		.syntax unified
 1224              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1225 00c2 BFF34F8F 		dsb
 1226              	@ 0 "" 2
 1227              	@ 1610 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 116


 1228 00c6 BFF36F8F 		isb
 1229              	@ 0 "" 2
 1230              	.LVL116:
 1231              		.thumb
 1232              		.syntax unified
 1233              	.L99:
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1234              		.loc 1 1622 0
 1235 00ca FFF7FEFF 		bl	vPortExitCritical
 1236              	.LVL117:
 1237 00ce 70BD     		pop	{r4, r5, r6, pc}
 1238              	.LVL118:
 1239              	.L113:
 1240              		.align	2
 1241              	.L112:
 1242 00d0 00000000 		.word	.LANCHOR0
 1243 00d4 30000000 		.word	.LANCHOR0+48
 1244 00d8 04ED00E0 		.word	-536810236
 1245              		.cfi_endproc
 1246              	.LFE144:
 1247              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1248              		.section	.text.vTaskResume,"ax",%progbits
 1249              		.align	2
 1250              		.global	vTaskResume
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	vTaskResume, %function
 1254              	vTaskResume:
 1255              	.LFB147:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1256              		.loc 1 1778 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              	.LVL119:
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1261              		.loc 1 1782 0
 1262 0000 40B9     		cbnz	r0, .L115
 1263              	.LBB106:
 1264              	.LBB107:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1265              		.loc 2 156 0
 1266              		.syntax unified
 1267              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1268 0002 4FF02003 			mov r3, #32												
 1269 0006 83F31188 		msr basepri, r3											
 1270 000a BFF36F8F 		isb														
 1271 000e BFF34F8F 		dsb														
 1272              	
 1273              	@ 0 "" 2
 1274              	.LVL120:
 1275              		.thumb
 1276              		.syntax unified
 1277              	.L116:
 1278 0012 FEE7     		b	.L116
 1279              	.L115:
 1280              	.LBE107:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 117


 1281              	.LBE106:
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1282              		.loc 1 1778 0
 1283 0014 70B5     		push	{r4, r5, r6, lr}
 1284              		.cfi_def_cfa_offset 16
 1285              		.cfi_offset 4, -16
 1286              		.cfi_offset 5, -12
 1287              		.cfi_offset 6, -8
 1288              		.cfi_offset 14, -4
 1289 0016 0446     		mov	r4, r0
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1290              		.loc 1 1786 0
 1291 0018 88B3     		cbz	r0, .L114
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1292              		.loc 1 1786 0 is_stmt 0 discriminator 1
 1293 001a 194B     		ldr	r3, .L121
 1294 001c D3F80031 		ldr	r3, [r3, #256]
 1295 0020 9842     		cmp	r0, r3
 1296 0022 2CD0     		beq	.L114
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1297              		.loc 1 1788 0 is_stmt 1
 1298 0024 FFF7FEFF 		bl	vPortEnterCritical
 1299              	.LVL121:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1300              		.loc 1 1790 0
 1301 0028 2046     		mov	r0, r4
 1302 002a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1303              	.LVL122:
 1304 002e 20B3     		cbz	r0, .L118
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1305              		.loc 1 1796 0
 1306 0030 261D     		adds	r6, r4, #4
 1307 0032 3046     		mov	r0, r6
 1308 0034 FFF7FEFF 		bl	uxListRemove
 1309              	.LVL123:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1310              		.loc 1 1797 0
 1311 0038 E36A     		ldr	r3, [r4, #44]
 1312 003a 114A     		ldr	r2, .L121
 1313 003c D2F80C21 		ldr	r2, [r2, #268]
 1314 0040 9342     		cmp	r3, r2
 1315 0042 02D9     		bls	.L119
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1316              		.loc 1 1797 0 is_stmt 0 discriminator 1
 1317 0044 0E4A     		ldr	r2, .L121
 1318 0046 C2F80C31 		str	r3, [r2, #268]
 1319              	.L119:
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1320              		.loc 1 1797 0 discriminator 3
 1321 004a 0D4D     		ldr	r5, .L121
 1322 004c 05F13000 		add	r0, r5, #48
 1323 0050 03EB8303 		add	r3, r3, r3, lsl #2
 1324 0054 9A00     		lsls	r2, r3, #2
 1325 0056 3146     		mov	r1, r6
 1326 0058 1044     		add	r0, r0, r2
 1327 005a FFF7FEFF 		bl	vListInsertEnd
 1328              	.LVL124:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 118


1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1329              		.loc 1 1800 0 is_stmt 1 discriminator 3
 1330 005e E26A     		ldr	r2, [r4, #44]
 1331 0060 D5F80031 		ldr	r3, [r5, #256]
 1332 0064 DB6A     		ldr	r3, [r3, #44]
 1333 0066 9A42     		cmp	r2, r3
 1334 0068 07D3     		bcc	.L118
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1335              		.loc 1 1805 0
 1336 006a 4FF08052 		mov	r2, #268435456
 1337 006e 054B     		ldr	r3, .L121+4
 1338 0070 1A60     		str	r2, [r3]
 1339              		.syntax unified
 1340              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1341 0072 BFF34F8F 		dsb
 1342              	@ 0 "" 2
 1343              	@ 1805 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 1344 0076 BFF36F8F 		isb
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L118:
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1349              		.loc 1 1817 0
 1350 007a FFF7FEFF 		bl	vPortExitCritical
 1351              	.LVL125:
 1352              	.L114:
 1353 007e 70BD     		pop	{r4, r5, r6, pc}
 1354              	.LVL126:
 1355              	.L122:
 1356              		.align	2
 1357              	.L121:
 1358 0080 00000000 		.word	.LANCHOR0
 1359 0084 04ED00E0 		.word	-536810236
 1360              		.cfi_endproc
 1361              	.LFE147:
 1362              		.size	vTaskResume, .-vTaskResume
 1363              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1364              		.align	2
 1365              		.global	xTaskResumeFromISR
 1366              		.thumb
 1367              		.thumb_func
 1368              		.type	xTaskResumeFromISR, %function
 1369              	xTaskResumeFromISR:
 1370              	.LFB148:
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1371              		.loc 1 1832 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              	.LVL127:
 1376 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1377              		.cfi_def_cfa_offset 24
 1378              		.cfi_offset 3, -24
 1379              		.cfi_offset 4, -20
 1380              		.cfi_offset 5, -16
 1381              		.cfi_offset 6, -12
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 119


 1382              		.cfi_offset 7, -8
 1383              		.cfi_offset 14, -4
 1384              	.LVL128:
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1385              		.loc 1 1837 0
 1386 0002 40B9     		cbnz	r0, .L124
 1387              	.LBB108:
 1388              	.LBB109:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1389              		.loc 2 156 0
 1390              		.syntax unified
 1391              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1392 0004 4FF02003 			mov r3, #32												
 1393 0008 83F31188 		msr basepri, r3											
 1394 000c BFF36F8F 		isb														
 1395 0010 BFF34F8F 		dsb														
 1396              	
 1397              	@ 0 "" 2
 1398              	.LVL129:
 1399              		.thumb
 1400              		.syntax unified
 1401              	.L125:
 1402 0014 FEE7     		b	.L125
 1403              	.L124:
 1404 0016 0446     		mov	r4, r0
 1405              	.LBE109:
 1406              	.LBE108:
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1407              		.loc 1 1855 0
 1408 0018 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1409              	.LVL130:
 1410              	.LBB110:
 1411              	.LBB111:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1412              		.loc 2 172 0
 1413              		.syntax unified
 1414              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1415 001c EFF31187 			mrs r7, basepri											
 1416 0020 4FF02003 		mov r3, #32												
 1417 0024 83F31188 		msr basepri, r3											
 1418 0028 BFF36F8F 		isb														
 1419 002c BFF34F8F 		dsb														
 1420              	
 1421              	@ 0 "" 2
 1422              		.thumb
 1423              		.syntax unified
 1424              	.LBE111:
 1425              	.LBE110:
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 1426              		.loc 1 1859 0
 1427 0030 2046     		mov	r0, r4
 1428 0032 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1429              	.LVL131:
 1430 0036 50B3     		cbz	r0, .L130
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1431              		.loc 1 1864 0
 1432 0038 174B     		ldr	r3, .L133
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 120


 1433 003a D3F81831 		ldr	r3, [r3, #280]
 1434 003e FBB9     		cbnz	r3, .L127
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1435              		.loc 1 1868 0
 1436 0040 E26A     		ldr	r2, [r4, #44]
 1437 0042 154B     		ldr	r3, .L133
 1438 0044 D3F80031 		ldr	r3, [r3, #256]
 1439 0048 DB6A     		ldr	r3, [r3, #44]
 1440 004a 9A42     		cmp	r2, r3
 1441 004c 01D2     		bcs	.L131
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1442              		.loc 1 1833 0
 1443 004e 0025     		movs	r5, #0
 1444 0050 00E0     		b	.L128
 1445              	.L131:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1446              		.loc 1 1870 0
 1447 0052 0125     		movs	r5, #1
 1448              	.L128:
 1449              	.LVL132:
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1450              		.loc 1 1877 0
 1451 0054 261D     		adds	r6, r4, #4
 1452 0056 3046     		mov	r0, r6
 1453 0058 FFF7FEFF 		bl	uxListRemove
 1454              	.LVL133:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1455              		.loc 1 1878 0
 1456 005c E36A     		ldr	r3, [r4, #44]
 1457 005e 0E4A     		ldr	r2, .L133
 1458 0060 D2F80C21 		ldr	r2, [r2, #268]
 1459 0064 9342     		cmp	r3, r2
 1460 0066 02D9     		bls	.L129
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1461              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1462 0068 0B4A     		ldr	r2, .L133
 1463 006a C2F80C31 		str	r3, [r2, #268]
 1464              	.L129:
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1465              		.loc 1 1878 0 discriminator 3
 1466 006e 03EB8303 		add	r3, r3, r3, lsl #2
 1467 0072 9A00     		lsls	r2, r3, #2
 1468 0074 3146     		mov	r1, r6
 1469 0076 0948     		ldr	r0, .L133+4
 1470 0078 1044     		add	r0, r0, r2
 1471 007a FFF7FEFF 		bl	vListInsertEnd
 1472              	.LVL134:
 1473 007e 07E0     		b	.L126
 1474              	.LVL135:
 1475              	.L127:
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1476              		.loc 1 1885 0 is_stmt 1
 1477 0080 04F11801 		add	r1, r4, #24
 1478 0084 0648     		ldr	r0, .L133+8
 1479 0086 FFF7FEFF 		bl	vListInsertEnd
 1480              	.LVL136:
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 121


 1481              		.loc 1 1833 0
 1482 008a 0025     		movs	r5, #0
 1483 008c 00E0     		b	.L126
 1484              	.L130:
 1485 008e 0025     		movs	r5, #0
 1486              	.LVL137:
 1487              	.L126:
 1488              	.LBB112:
 1489              	.LBB113:
 1490              		.loc 2 190 0
 1491              		.syntax unified
 1492              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1493 0090 87F31188 			msr basepri, r7	
 1494              	@ 0 "" 2
 1495              	.LVL138:
 1496              		.thumb
 1497              		.syntax unified
 1498              	.LBE113:
 1499              	.LBE112:
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1500              		.loc 1 1896 0
 1501 0094 2846     		mov	r0, r5
 1502 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1503              	.LVL139:
 1504              	.L134:
 1505              		.align	2
 1506              	.L133:
 1507 0098 00000000 		.word	.LANCHOR0
 1508 009c 30000000 		.word	.LANCHOR0+48
 1509 00a0 14000000 		.word	.LANCHOR0+20
 1510              		.cfi_endproc
 1511              	.LFE148:
 1512              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1513              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1514              		.align	2
 1515              		.global	vTaskStartScheduler
 1516              		.thumb
 1517              		.thumb_func
 1518              		.type	vTaskStartScheduler, %function
 1519              	vTaskStartScheduler:
 1520              	.LFB149:
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 1521              		.loc 1 1902 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 0
 1524              		@ frame_needed = 0, uses_anonymous_args = 0
 1525 0000 00B5     		push	{lr}
 1526              		.cfi_def_cfa_offset 4
 1527              		.cfi_offset 14, -4
 1528 0002 83B0     		sub	sp, sp, #12
 1529              		.cfi_def_cfa_offset 16
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 								configIDLE_TASK_NAME,
 1530              		.loc 1 1935 0
 1531 0004 194B     		ldr	r3, .L141
 1532 0006 0193     		str	r3, [sp, #4]
 1533 0008 0023     		movs	r3, #0
 1534 000a 0093     		str	r3, [sp]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 122


 1535 000c 8022     		movs	r2, #128
 1536 000e 1849     		ldr	r1, .L141+4
 1537 0010 1848     		ldr	r0, .L141+8
 1538 0012 FFF7FEFF 		bl	xTaskCreate
 1539              	.LVL140:
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1540              		.loc 1 1946 0
 1541 0016 0128     		cmp	r0, #1
 1542 0018 01D1     		bne	.L136
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1543              		.loc 1 1948 0
 1544 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1545              	.LVL141:
 1546              	.L136:
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1547              		.loc 1 1957 0
 1548 001e 0128     		cmp	r0, #1
 1549 0020 14D1     		bne	.L137
 1550              	.LBB114:
 1551              	.LBB115:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1552              		.loc 2 156 0
 1553              		.syntax unified
 1554              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1555 0022 4FF02003 			mov r3, #32												
 1556 0026 83F31188 		msr basepri, r3											
 1557 002a BFF36F8F 		isb														
 1558 002e BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              		.thumb
 1562              		.syntax unified
 1563              	.LBE115:
 1564              	.LBE114:
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1565              		.loc 1 1983 0
 1566 0032 114B     		ldr	r3, .L141+12
 1567 0034 4FF0FF32 		mov	r2, #-1
 1568 0038 DA62     		str	r2, [r3, #44]
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1569              		.loc 1 1984 0
 1570 003a 0122     		movs	r2, #1
 1571 003c C3F80421 		str	r2, [r3, #260]
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1572              		.loc 1 1985 0
 1573 0040 0022     		movs	r2, #0
 1574 0042 C3F81421 		str	r2, [r3, #276]
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1575              		.loc 1 1997 0
 1576 0046 FFF7FEFF 		bl	xPortStartScheduler
 1577              	.LVL142:
 1578 004a 0BE0     		b	.L135
 1579              	.LVL143:
 1580              	.L137:
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1581              		.loc 1 2012 0
 1582 004c B0F1FF3F 		cmp	r0, #-1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 123


 1583 0050 08D1     		bne	.L135
 1584              	.LBB116:
 1585              	.LBB117:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1586              		.loc 2 156 0
 1587              		.syntax unified
 1588              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1589 0052 4FF02003 			mov r3, #32												
 1590 0056 83F31188 		msr basepri, r3											
 1591 005a BFF36F8F 		isb														
 1592 005e BFF34F8F 		dsb														
 1593              	
 1594              	@ 0 "" 2
 1595              	.LVL144:
 1596              		.thumb
 1597              		.syntax unified
 1598              	.L139:
 1599 0062 FEE7     		b	.L139
 1600              	.LVL145:
 1601              	.L135:
 1602              	.LBE117:
 1603              	.LBE116:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1604              		.loc 1 2018 0
 1605 0064 03B0     		add	sp, sp, #12
 1606              		.cfi_def_cfa_offset 4
 1607              		@ sp needed
 1608 0066 5DF804FB 		ldr	pc, [sp], #4
 1609              	.L142:
 1610 006a 00BF     		.align	2
 1611              	.L141:
 1612 006c 1C010000 		.word	.LANCHOR0+284
 1613 0070 00000000 		.word	.LC0
 1614 0074 00000000 		.word	prvIdleTask
 1615 0078 00000000 		.word	.LANCHOR0
 1616              		.cfi_endproc
 1617              	.LFE149:
 1618              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1619              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1620              		.align	2
 1621              		.global	vTaskEndScheduler
 1622              		.thumb
 1623              		.thumb_func
 1624              		.type	vTaskEndScheduler, %function
 1625              	vTaskEndScheduler:
 1626              	.LFB150:
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1627              		.loc 1 2022 0
 1628              		.cfi_startproc
 1629              		@ args = 0, pretend = 0, frame = 0
 1630              		@ frame_needed = 0, uses_anonymous_args = 0
 1631 0000 08B5     		push	{r3, lr}
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 3, -8
 1634              		.cfi_offset 14, -4
 1635              	.LBB118:
 1636              	.LBB119:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 124


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1637              		.loc 2 156 0
 1638              		.syntax unified
 1639              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1640 0002 4FF02003 			mov r3, #32												
 1641 0006 83F31188 		msr basepri, r3											
 1642 000a BFF36F8F 		isb														
 1643 000e BFF34F8F 		dsb														
 1644              	
 1645              	@ 0 "" 2
 1646              		.thumb
 1647              		.syntax unified
 1648              	.LBE119:
 1649              	.LBE118:
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	vPortEndScheduler();
 1650              		.loc 1 2027 0
 1651 0012 0022     		movs	r2, #0
 1652 0014 024B     		ldr	r3, .L145
 1653 0016 C3F80421 		str	r2, [r3, #260]
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1654              		.loc 1 2028 0
 1655 001a FFF7FEFF 		bl	vPortEndScheduler
 1656              	.LVL146:
 1657 001e 08BD     		pop	{r3, pc}
 1658              	.L146:
 1659              		.align	2
 1660              	.L145:
 1661 0020 00000000 		.word	.LANCHOR0
 1662              		.cfi_endproc
 1663              	.LFE150:
 1664              		.size	vTaskEndScheduler, .-vTaskEndScheduler
 1665              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1666              		.align	2
 1667              		.global	vTaskSuspendAll
 1668              		.thumb
 1669              		.thumb_func
 1670              		.type	vTaskSuspendAll, %function
 1671              	vTaskSuspendAll:
 1672              	.LFB151:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1673              		.loc 1 2033 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              		@ link register save eliminated.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1678              		.loc 1 2038 0
 1679 0000 034A     		ldr	r2, .L148
 1680 0002 D2F81831 		ldr	r3, [r2, #280]
 1681 0006 0133     		adds	r3, r3, #1
 1682 0008 C2F81831 		str	r3, [r2, #280]
 1683 000c 7047     		bx	lr
 1684              	.L149:
 1685 000e 00BF     		.align	2
 1686              	.L148:
 1687 0010 00000000 		.word	.LANCHOR0
 1688              		.cfi_endproc
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 125


 1689              	.LFE151:
 1690              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1691              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1692              		.align	2
 1693              		.global	xTaskGetTickCount
 1694              		.thumb
 1695              		.thumb_func
 1696              		.type	xTaskGetTickCount, %function
 1697              	xTaskGetTickCount:
 1698              	.LFB153:
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xTicks;
 1699              		.loc 1 2216 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703              		@ link register save eliminated.
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1704              		.loc 1 2222 0
 1705 0000 014B     		ldr	r3, .L151
 1706 0002 D3F81401 		ldr	r0, [r3, #276]
 1707              	.LVL147:
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1708              		.loc 1 2227 0
 1709 0006 7047     		bx	lr
 1710              	.L152:
 1711              		.align	2
 1712              	.L151:
 1713 0008 00000000 		.word	.LANCHOR0
 1714              		.cfi_endproc
 1715              	.LFE153:
 1716              		.size	xTaskGetTickCount, .-xTaskGetTickCount
 1717              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1718              		.align	2
 1719              		.global	xTaskGetTickCountFromISR
 1720              		.thumb
 1721              		.thumb_func
 1722              		.type	xTaskGetTickCountFromISR, %function
 1723              	xTaskGetTickCountFromISR:
 1724              	.LFB154:
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t xReturn;
 1725              		.loc 1 2231 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729 0000 08B5     		push	{r3, lr}
 1730              		.cfi_def_cfa_offset 8
 1731              		.cfi_offset 3, -8
 1732              		.cfi_offset 14, -4
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1733              		.loc 1 2249 0
 1734 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1735              	.LVL148:
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 1736              		.loc 1 2253 0
 1737 0006 024B     		ldr	r3, .L155
 1738 0008 D3F81401 		ldr	r0, [r3, #276]
 1739              	.LVL149:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 126


2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1740              		.loc 1 2258 0
 1741 000c 08BD     		pop	{r3, pc}
 1742              	.L156:
 1743 000e 00BF     		.align	2
 1744              	.L155:
 1745 0010 00000000 		.word	.LANCHOR0
 1746              		.cfi_endproc
 1747              	.LFE154:
 1748              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1749              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1750              		.align	2
 1751              		.global	uxTaskGetNumberOfTasks
 1752              		.thumb
 1753              		.thumb_func
 1754              		.type	uxTaskGetNumberOfTasks, %function
 1755              	uxTaskGetNumberOfTasks:
 1756              	.LFB155:
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1757              		.loc 1 2262 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 0, uses_anonymous_args = 0
 1761              		@ link register save eliminated.
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 1762              		.loc 1 2265 0
 1763 0000 014B     		ldr	r3, .L158
 1764 0002 D3F8FC00 		ldr	r0, [r3, #252]
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1765              		.loc 1 2266 0
 1766 0006 7047     		bx	lr
 1767              	.L159:
 1768              		.align	2
 1769              	.L158:
 1770 0008 00000000 		.word	.LANCHOR0
 1771              		.cfi_endproc
 1772              	.LFE155:
 1773              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1774              		.section	.text.pcTaskGetName,"ax",%progbits
 1775              		.align	2
 1776              		.global	pcTaskGetName
 1777              		.thumb
 1778              		.thumb_func
 1779              		.type	pcTaskGetName, %function
 1780              	pcTaskGetName:
 1781              	.LFB156:
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB;
 1782              		.loc 1 2270 0
 1783              		.cfi_startproc
 1784              		@ args = 0, pretend = 0, frame = 0
 1785              		@ frame_needed = 0, uses_anonymous_args = 0
 1786              		@ link register save eliminated.
 1787              	.LVL150:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1788              		.loc 1 2275 0
 1789 0000 0346     		mov	r3, r0
 1790 0002 10B9     		cbnz	r0, .L161
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 127


2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTCB );
 1791              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1792 0004 074B     		ldr	r3, .L164
 1793 0006 D3F80031 		ldr	r3, [r3, #256]
 1794              	.LVL151:
 1795              	.L161:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1796              		.loc 1 2276 0 is_stmt 1 discriminator 4
 1797 000a 43B9     		cbnz	r3, .L162
 1798              	.LBB120:
 1799              	.LBB121:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1800              		.loc 2 156 0
 1801              		.syntax unified
 1802              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1803 000c 4FF02003 			mov r3, #32												
 1804 0010 83F31188 		msr basepri, r3											
 1805 0014 BFF36F8F 		isb														
 1806 0018 BFF34F8F 		dsb														
 1807              	
 1808              	@ 0 "" 2
 1809              	.LVL152:
 1810              		.thumb
 1811              		.syntax unified
 1812              	.L163:
 1813 001c FEE7     		b	.L163
 1814              	.LVL153:
 1815              	.L162:
 1816              	.LBE121:
 1817              	.LBE120:
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 1818              		.loc 1 2278 0
 1819 001e 03F13400 		add	r0, r3, #52
 1820 0022 7047     		bx	lr
 1821              	.L165:
 1822              		.align	2
 1823              	.L164:
 1824 0024 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE156:
 1827              		.size	pcTaskGetName, .-pcTaskGetName
 1828              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1829              		.align	2
 1830              		.global	xTaskIncrementTick
 1831              		.thumb
 1832              		.thumb_func
 1833              		.type	xTaskIncrementTick, %function
 1834              	xTaskIncrementTick:
 1835              	.LFB157:
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t * pxTCB;
 1836              		.loc 1 2590 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1841              		.cfi_def_cfa_offset 24
 1842              		.cfi_offset 4, -24
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 128


 1843              		.cfi_offset 5, -20
 1844              		.cfi_offset 6, -16
 1845              		.cfi_offset 7, -12
 1846              		.cfi_offset 8, -8
 1847              		.cfi_offset 14, -4
 1848              	.LVL154:
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 1849              		.loc 1 2599 0
 1850 0004 3C4B     		ldr	r3, .L186
 1851 0006 D3F81831 		ldr	r3, [r3, #280]
 1852 000a 002B     		cmp	r3, #0
 1853 000c 65D1     		bne	.L167
 1854              	.LBB122:
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1855              		.loc 1 2603 0
 1856 000e 3A4B     		ldr	r3, .L186
 1857 0010 D3F81441 		ldr	r4, [r3, #276]
 1858 0014 0134     		adds	r4, r4, #1
 1859              	.LVL155:
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1860              		.loc 1 2607 0
 1861 0016 C3F81441 		str	r4, [r3, #276]
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1862              		.loc 1 2609 0
 1863 001a CCB9     		cbnz	r4, .L168
 1864              	.LBB123:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1865              		.loc 1 2611 0
 1866 001c 9B6A     		ldr	r3, [r3, #40]
 1867 001e 1B68     		ldr	r3, [r3]
 1868 0020 43B1     		cbz	r3, .L169
 1869              	.LBB124:
 1870              	.LBB125:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 1871              		.loc 2 156 0
 1872              		.syntax unified
 1873              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 1874 0022 4FF02003 			mov r3, #32												
 1875 0026 83F31188 		msr basepri, r3											
 1876 002a BFF36F8F 		isb														
 1877 002e BFF34F8F 		dsb														
 1878              	
 1879              	@ 0 "" 2
 1880              	.LVL156:
 1881              		.thumb
 1882              		.syntax unified
 1883              	.L170:
 1884 0032 FEE7     		b	.L170
 1885              	.L169:
 1886              	.LBE125:
 1887              	.LBE124:
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 1888              		.loc 1 2611 0 discriminator 2
 1889 0034 304B     		ldr	r3, .L186
 1890 0036 9A6A     		ldr	r2, [r3, #40]
 1891              	.LVL157:
 1892 0038 D3F8F810 		ldr	r1, [r3, #248]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 129


 1893 003c 9962     		str	r1, [r3, #40]
 1894 003e C3F8F820 		str	r2, [r3, #248]
 1895 0042 D3F82021 		ldr	r2, [r3, #288]
 1896              	.LVL158:
 1897 0046 0132     		adds	r2, r2, #1
 1898 0048 C3F82021 		str	r2, [r3, #288]
 1899              	.LVL159:
 1900 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1901              	.LVL160:
 1902              	.L168:
 1903              	.LBE123:
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 1904              		.loc 1 2622 0
 1905 0050 294B     		ldr	r3, .L186
 1906 0052 DB6A     		ldr	r3, [r3, #44]
 1907 0054 9C42     		cmp	r4, r3
 1908 0056 03D2     		bcs	.L181
 1909              	.LBE122:
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1910              		.loc 1 2593 0
 1911 0058 0026     		movs	r6, #0
 1912 005a 45E0     		b	.L172
 1913              	.LVL161:
 1914              	.L183:
 1915              	.LBB126:
2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						}
 1916              		.loc 1 2688 0
 1917 005c 0126     		movs	r6, #1
 1918              	.LVL162:
 1919 005e 00E0     		b	.L171
 1920              	.LVL163:
 1921              	.L181:
 1922 0060 0026     		movs	r6, #0
 1923              	.LVL164:
 1924              	.L171:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1925              		.loc 1 2626 0
 1926 0062 254B     		ldr	r3, .L186
 1927 0064 9B6A     		ldr	r3, [r3, #40]
 1928 0066 1B68     		ldr	r3, [r3]
 1929 0068 0BB9     		cbnz	r3, .L182
 1930 006a 0123     		movs	r3, #1
 1931 006c 00E0     		b	.L173
 1932              	.L182:
 1933 006e 0023     		movs	r3, #0
 1934              	.L173:
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 1935              		.loc 1 2626 0 is_stmt 0 discriminator 4
 1936 0070 23B1     		cbz	r3, .L174
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 1937              		.loc 1 2633 0 is_stmt 1
 1938 0072 4FF0FF32 		mov	r2, #-1
 1939 0076 204B     		ldr	r3, .L186
 1940 0078 DA62     		str	r2, [r3, #44]
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 1941              		.loc 1 2634 0
 1942 007a 35E0     		b	.L172
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 130


 1943              	.L174:
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1944              		.loc 1 2642 0
 1945 007c 1E4B     		ldr	r3, .L186
 1946 007e 9B6A     		ldr	r3, [r3, #40]
 1947 0080 DB68     		ldr	r3, [r3, #12]
 1948 0082 DD68     		ldr	r5, [r3, #12]
 1949              	.LVL165:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1950              		.loc 1 2643 0
 1951 0084 6B68     		ldr	r3, [r5, #4]
 1952              	.LVL166:
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1953              		.loc 1 2645 0
 1954 0086 9C42     		cmp	r4, r3
 1955 0088 02D2     		bcs	.L175
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						break;
 1956              		.loc 1 2652 0
 1957 008a 1B4A     		ldr	r2, .L186
 1958 008c D362     		str	r3, [r2, #44]
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1959              		.loc 1 2653 0
 1960 008e 2BE0     		b	.L172
 1961              	.L175:
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1962              		.loc 1 2661 0
 1963 0090 05F10408 		add	r8, r5, #4
 1964 0094 4046     		mov	r0, r8
 1965 0096 FFF7FEFF 		bl	uxListRemove
 1966              	.LVL167:
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 1967              		.loc 1 2665 0
 1968 009a AB6A     		ldr	r3, [r5, #40]
 1969 009c 1BB1     		cbz	r3, .L176
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 1970              		.loc 1 2667 0
 1971 009e 05F11800 		add	r0, r5, #24
 1972 00a2 FFF7FEFF 		bl	uxListRemove
 1973              	.LVL168:
 1974              	.L176:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1975              		.loc 1 2676 0
 1976 00a6 EB6A     		ldr	r3, [r5, #44]
 1977 00a8 134A     		ldr	r2, .L186
 1978 00aa D2F80C21 		ldr	r2, [r2, #268]
 1979 00ae 9342     		cmp	r3, r2
 1980 00b0 02D9     		bls	.L177
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1981              		.loc 1 2676 0 is_stmt 0 discriminator 1
 1982 00b2 114A     		ldr	r2, .L186
 1983 00b4 C2F80C31 		str	r3, [r2, #268]
 1984              	.L177:
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 1985              		.loc 1 2676 0 discriminator 3
 1986 00b8 0F4F     		ldr	r7, .L186
 1987 00ba 07F13000 		add	r0, r7, #48
 1988 00be 03EB8303 		add	r3, r3, r3, lsl #2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 131


 1989 00c2 9A00     		lsls	r2, r3, #2
 1990 00c4 4146     		mov	r1, r8
 1991 00c6 1044     		add	r0, r0, r2
 1992 00c8 FFF7FEFF 		bl	vListInsertEnd
 1993              	.LVL169:
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 						{
 1994              		.loc 1 2686 0 is_stmt 1 discriminator 3
 1995 00cc EA6A     		ldr	r2, [r5, #44]
 1996 00ce D7F80031 		ldr	r3, [r7, #256]
 1997 00d2 DB6A     		ldr	r3, [r3, #44]
 1998 00d4 9A42     		cmp	r2, r3
 1999 00d6 C1D2     		bcs	.L183
 2000 00d8 C3E7     		b	.L171
 2001              	.LVL170:
 2002              	.L167:
 2003              	.LBE126:
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2004              		.loc 1 2733 0
 2005 00da 074A     		ldr	r2, .L186
 2006 00dc D2F82431 		ldr	r3, [r2, #292]
 2007 00e0 0133     		adds	r3, r3, #1
 2008 00e2 C2F82431 		str	r3, [r2, #292]
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2009              		.loc 1 2593 0
 2010 00e6 0026     		movs	r6, #0
 2011              	.LVL171:
 2012              	.L172:
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2013              		.loc 1 2746 0
 2014 00e8 034B     		ldr	r3, .L186
 2015 00ea D3F82831 		ldr	r3, [r3, #296]
 2016 00ee 03B1     		cbz	r3, .L180
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2017              		.loc 1 2748 0
 2018 00f0 0126     		movs	r6, #1
 2019              	.LVL172:
 2020              	.L180:
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2021              		.loc 1 2758 0
 2022 00f2 3046     		mov	r0, r6
 2023 00f4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2024              	.LVL173:
 2025              	.L187:
 2026              		.align	2
 2027              	.L186:
 2028 00f8 00000000 		.word	.LANCHOR0
 2029              		.cfi_endproc
 2030              	.LFE157:
 2031              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 2032              		.section	.text.xTaskResumeAll,"ax",%progbits
 2033              		.align	2
 2034              		.global	xTaskResumeAll
 2035              		.thumb
 2036              		.thumb_func
 2037              		.type	xTaskResumeAll, %function
 2038              	xTaskResumeAll:
 2039              	.LFB152:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 132


2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2040              		.loc 1 2106 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 0
 2043              		@ frame_needed = 0, uses_anonymous_args = 0
 2044              	.LVL174:
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2045              		.loc 1 2112 0
 2046 0000 394B     		ldr	r3, .L204
 2047 0002 D3F81831 		ldr	r3, [r3, #280]
 2048 0006 43B9     		cbnz	r3, .L189
 2049              	.LBB127:
 2050              	.LBB128:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2051              		.loc 2 156 0
 2052              		.syntax unified
 2053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2054 0008 4FF02003 			mov r3, #32												
 2055 000c 83F31188 		msr basepri, r3											
 2056 0010 BFF36F8F 		isb														
 2057 0014 BFF34F8F 		dsb														
 2058              	
 2059              	@ 0 "" 2
 2060              	.LVL175:
 2061              		.thumb
 2062              		.syntax unified
 2063              	.L190:
 2064 0018 FEE7     		b	.L190
 2065              	.L189:
 2066              	.LBE128:
 2067              	.LBE127:
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxTCB = NULL;
 2068              		.loc 1 2106 0
 2069 001a 70B5     		push	{r4, r5, r6, lr}
 2070              		.cfi_def_cfa_offset 16
 2071              		.cfi_offset 4, -16
 2072              		.cfi_offset 5, -12
 2073              		.cfi_offset 6, -8
 2074              		.cfi_offset 14, -4
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2075              		.loc 1 2119 0
 2076 001c FFF7FEFF 		bl	vPortEnterCritical
 2077              	.LVL176:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2078              		.loc 1 2121 0
 2079 0020 314B     		ldr	r3, .L204
 2080 0022 D3F81821 		ldr	r2, [r3, #280]
 2081 0026 013A     		subs	r2, r2, #1
 2082 0028 C3F81821 		str	r2, [r3, #280]
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2083              		.loc 1 2123 0
 2084 002c D3F81831 		ldr	r3, [r3, #280]
 2085 0030 002B     		cmp	r3, #0
 2086 0032 52D1     		bne	.L200
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2087              		.loc 1 2125 0
 2088 0034 2C4B     		ldr	r3, .L204
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 133


 2089 0036 D3F8FC30 		ldr	r3, [r3, #252]
 2090 003a 3BBB     		cbnz	r3, .L201
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2091              		.loc 1 2108 0
 2092 003c 0024     		movs	r4, #0
 2093 003e 4FE0     		b	.L191
 2094              	.LVL177:
 2095              	.L195:
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2096              		.loc 1 2131 0
 2097 0040 294D     		ldr	r5, .L204
 2098 0042 2B6A     		ldr	r3, [r5, #32]
 2099 0044 DC68     		ldr	r4, [r3, #12]
 2100              	.LVL178:
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2101              		.loc 1 2132 0
 2102 0046 04F11800 		add	r0, r4, #24
 2103 004a FFF7FEFF 		bl	uxListRemove
 2104              	.LVL179:
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2105              		.loc 1 2133 0
 2106 004e 261D     		adds	r6, r4, #4
 2107 0050 3046     		mov	r0, r6
 2108 0052 FFF7FEFF 		bl	uxListRemove
 2109              	.LVL180:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2110              		.loc 1 2134 0
 2111 0056 E36A     		ldr	r3, [r4, #44]
 2112 0058 D5F80C21 		ldr	r2, [r5, #268]
 2113 005c 9342     		cmp	r3, r2
 2114 005e 01D9     		bls	.L193
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2115              		.loc 1 2134 0 is_stmt 0 discriminator 1
 2116 0060 C5F80C31 		str	r3, [r5, #268]
 2117              	.L193:
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2118              		.loc 1 2134 0 discriminator 3
 2119 0064 204D     		ldr	r5, .L204
 2120 0066 05F13000 		add	r0, r5, #48
 2121 006a 03EB8303 		add	r3, r3, r3, lsl #2
 2122 006e 9A00     		lsls	r2, r3, #2
 2123 0070 3146     		mov	r1, r6
 2124 0072 1044     		add	r0, r0, r2
 2125 0074 FFF7FEFF 		bl	vListInsertEnd
 2126              	.LVL181:
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2127              		.loc 1 2138 0 is_stmt 1 discriminator 3
 2128 0078 E26A     		ldr	r2, [r4, #44]
 2129 007a D5F80031 		ldr	r3, [r5, #256]
 2130 007e DB6A     		ldr	r3, [r3, #44]
 2131 0080 9A42     		cmp	r2, r3
 2132 0082 04D3     		bcc	.L192
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2133              		.loc 1 2140 0
 2134 0084 0122     		movs	r2, #1
 2135 0086 C5F82821 		str	r2, [r5, #296]
 2136 008a 00E0     		b	.L192
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 134


 2137              	.LVL182:
 2138              	.L201:
 2139 008c 0024     		movs	r4, #0
 2140              	.LVL183:
 2141              	.L192:
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2142              		.loc 1 2129 0
 2143 008e 164B     		ldr	r3, .L204
 2144 0090 5B69     		ldr	r3, [r3, #20]
 2145 0092 002B     		cmp	r3, #0
 2146 0094 D4D1     		bne	.L195
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2147              		.loc 1 2148 0
 2148 0096 0CB1     		cbz	r4, .L196
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2149              		.loc 1 2156 0
 2150 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2151              	.LVL184:
 2152              	.L196:
 2153              	.LBB129:
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2154              		.loc 1 2164 0
 2155 009c 124B     		ldr	r3, .L204
 2156 009e D3F82441 		ldr	r4, [r3, #292]
 2157              	.LVL185:
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 2158              		.loc 1 2166 0
 2159 00a2 64B1     		cbz	r4, .L197
 2160              	.L199:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							{
 2161              		.loc 1 2170 0
 2162 00a4 FFF7FEFF 		bl	xTaskIncrementTick
 2163              	.LVL186:
 2164 00a8 18B1     		cbz	r0, .L198
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 							}
 2165              		.loc 1 2172 0
 2166 00aa 0122     		movs	r2, #1
 2167 00ac 0E4B     		ldr	r3, .L204
 2168 00ae C3F82821 		str	r2, [r3, #296]
 2169              	.L198:
 2170              	.LVL187:
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2171              		.loc 1 2179 0
 2172 00b2 013C     		subs	r4, r4, #1
 2173              	.LVL188:
 2174 00b4 F6D1     		bne	.L199
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2175              		.loc 1 2181 0
 2176 00b6 0022     		movs	r2, #0
 2177 00b8 0B4B     		ldr	r3, .L204
 2178 00ba C3F82421 		str	r2, [r3, #292]
 2179              	.L197:
 2180              	.LBE129:
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2181              		.loc 1 2189 0
 2182 00be 0A4B     		ldr	r3, .L204
 2183 00c0 D3F82831 		ldr	r3, [r3, #296]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 135


 2184 00c4 5BB1     		cbz	r3, .L202
 2185              	.LVL189:
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2186              		.loc 1 2196 0
 2187 00c6 4FF08052 		mov	r2, #268435456
 2188 00ca 084B     		ldr	r3, .L204+4
 2189 00cc 1A60     		str	r2, [r3]
 2190              		.syntax unified
 2191              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2192 00ce BFF34F8F 		dsb
 2193              	@ 0 "" 2
 2194              	@ 2196 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2195 00d2 BFF36F8F 		isb
 2196              	@ 0 "" 2
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 2197              		.loc 1 2193 0
 2198              		.thumb
 2199              		.syntax unified
 2200 00d6 0124     		movs	r4, #1
 2201              	.LVL190:
 2202 00d8 02E0     		b	.L191
 2203              	.LVL191:
 2204              	.L200:
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2205              		.loc 1 2108 0
 2206 00da 0024     		movs	r4, #0
 2207 00dc 00E0     		b	.L191
 2208              	.LVL192:
 2209              	.L202:
 2210 00de 0024     		movs	r4, #0
 2211              	.LVL193:
 2212              	.L191:
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2213              		.loc 1 2209 0
 2214 00e0 FFF7FEFF 		bl	vPortExitCritical
 2215              	.LVL194:
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 2216              		.loc 1 2212 0
 2217 00e4 2046     		mov	r0, r4
 2218 00e6 70BD     		pop	{r4, r5, r6, pc}
 2219              	.LVL195:
 2220              	.L205:
 2221              		.align	2
 2222              	.L204:
 2223 00e8 00000000 		.word	.LANCHOR0
 2224 00ec 04ED00E0 		.word	-536810236
 2225              		.cfi_endproc
 2226              	.LFE152:
 2227              		.size	xTaskResumeAll, .-xTaskResumeAll
 2228              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2229              		.align	2
 2230              		.global	vTaskDelayUntil
 2231              		.thumb
 2232              		.thumb_func
 2233              		.type	vTaskDelayUntil, %function
 2234              	vTaskDelayUntil:
 2235              	.LFB140:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 136


1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TickType_t xTimeToWake;
 2236              		.loc 1 1205 0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
 2240              	.LVL196:
 2241 0000 38B5     		push	{r3, r4, r5, lr}
 2242              		.cfi_def_cfa_offset 16
 2243              		.cfi_offset 3, -16
 2244              		.cfi_offset 4, -12
 2245              		.cfi_offset 5, -8
 2246              		.cfi_offset 14, -4
 2247              	.LVL197:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2248              		.loc 1 1209 0
 2249 0002 40B9     		cbnz	r0, .L207
 2250              	.LBB130:
 2251              	.LBB131:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2252              		.loc 2 156 0
 2253              		.syntax unified
 2254              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2255 0004 4FF02003 			mov r3, #32												
 2256 0008 83F31188 		msr basepri, r3											
 2257 000c BFF36F8F 		isb														
 2258 0010 BFF34F8F 		dsb														
 2259              	
 2260              	@ 0 "" 2
 2261              	.LVL198:
 2262              		.thumb
 2263              		.syntax unified
 2264              	.L208:
 2265 0014 FEE7     		b	.L208
 2266              	.L207:
 2267 0016 0546     		mov	r5, r0
 2268              	.LBE131:
 2269              	.LBE130:
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2270              		.loc 1 1210 0
 2271 0018 41B9     		cbnz	r1, .L209
 2272              	.LBB132:
 2273              	.LBB133:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2274              		.loc 2 156 0
 2275              		.syntax unified
 2276              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2277 001a 4FF02003 			mov r3, #32												
 2278 001e 83F31188 		msr basepri, r3											
 2279 0022 BFF36F8F 		isb														
 2280 0026 BFF34F8F 		dsb														
 2281              	
 2282              	@ 0 "" 2
 2283              	.LVL199:
 2284              		.thumb
 2285              		.syntax unified
 2286              	.L210:
 2287 002a FEE7     		b	.L210
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 137


 2288              	.L209:
 2289              	.LBE133:
 2290              	.LBE132:
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2291              		.loc 1 1211 0
 2292 002c 1D4B     		ldr	r3, .L222
 2293 002e D3F81831 		ldr	r3, [r3, #280]
 2294 0032 43B1     		cbz	r3, .L211
 2295              	.LBB134:
 2296              	.LBB135:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2297              		.loc 2 156 0
 2298              		.syntax unified
 2299              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2300 0034 4FF02003 			mov r3, #32												
 2301 0038 83F31188 		msr basepri, r3											
 2302 003c BFF36F8F 		isb														
 2303 0040 BFF34F8F 		dsb														
 2304              	
 2305              	@ 0 "" 2
 2306              	.LVL200:
 2307              		.thumb
 2308              		.syntax unified
 2309              	.L212:
 2310 0044 FEE7     		b	.L212
 2311              	.L211:
 2312 0046 0C46     		mov	r4, r1
 2313              	.LBE135:
 2314              	.LBE134:
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2315              		.loc 1 1213 0
 2316 0048 FFF7FEFF 		bl	vTaskSuspendAll
 2317              	.LVL201:
 2318              	.LBB136:
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2319              		.loc 1 1217 0
 2320 004c 154B     		ldr	r3, .L222
 2321 004e D3F81401 		ldr	r0, [r3, #276]
 2322              	.LVL202:
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2323              		.loc 1 1220 0
 2324 0052 2A68     		ldr	r2, [r5]
 2325 0054 A318     		adds	r3, r4, r2
 2326              	.LVL203:
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2327              		.loc 1 1222 0
 2328 0056 9042     		cmp	r0, r2
 2329 0058 05D2     		bcs	.L213
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2330              		.loc 1 1229 0
 2331 005a 9A42     		cmp	r2, r3
 2332 005c 09D9     		bls	.L217
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2333              		.loc 1 1229 0 is_stmt 0 discriminator 1
 2334 005e 9842     		cmp	r0, r3
 2335 0060 09D3     		bcc	.L218
 2336              	.LBE136:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 138


1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2337              		.loc 1 1207 0 is_stmt 1
 2338 0062 0022     		movs	r2, #0
 2339 0064 0CE0     		b	.L214
 2340              	.L213:
 2341              	.LBB137:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2342              		.loc 1 1243 0
 2343 0066 9A42     		cmp	r2, r3
 2344 0068 07D8     		bhi	.L219
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2345              		.loc 1 1243 0 is_stmt 0 discriminator 1
 2346 006a 9842     		cmp	r0, r3
 2347 006c 07D3     		bcc	.L220
 2348              	.LBE137:
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2349              		.loc 1 1207 0 is_stmt 1
 2350 006e 0022     		movs	r2, #0
 2351 0070 06E0     		b	.L214
 2352              	.L217:
 2353 0072 0022     		movs	r2, #0
 2354 0074 04E0     		b	.L214
 2355              	.L218:
 2356              	.LBB138:
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2357              		.loc 1 1231 0
 2358 0076 0122     		movs	r2, #1
 2359 0078 02E0     		b	.L214
 2360              	.L219:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2361              		.loc 1 1245 0
 2362 007a 0122     		movs	r2, #1
 2363 007c 00E0     		b	.L214
 2364              	.L220:
 2365 007e 0122     		movs	r2, #1
 2366              	.L214:
 2367              	.LVL204:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2368              		.loc 1 1254 0
 2369 0080 2B60     		str	r3, [r5]
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2370              		.loc 1 1256 0
 2371 0082 1AB1     		cbz	r2, .L215
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2372              		.loc 1 1262 0
 2373 0084 0021     		movs	r1, #0
 2374 0086 181A     		subs	r0, r3, r0
 2375              	.LVL205:
 2376 0088 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2377              	.LVL206:
 2378              	.L215:
 2379              	.LBE138:
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2380              		.loc 1 1269 0
 2381 008c FFF7FEFF 		bl	xTaskResumeAll
 2382              	.LVL207:
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 139


 2383              		.loc 1 1273 0
 2384 0090 38B9     		cbnz	r0, .L206
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2385              		.loc 1 1275 0
 2386 0092 4FF08052 		mov	r2, #268435456
 2387 0096 044B     		ldr	r3, .L222+4
 2388 0098 1A60     		str	r2, [r3]
 2389              		.syntax unified
 2390              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2391 009a BFF34F8F 		dsb
 2392              	@ 0 "" 2
 2393              	@ 1275 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2394 009e BFF36F8F 		isb
 2395              	@ 0 "" 2
 2396              		.thumb
 2397              		.syntax unified
 2398              	.L206:
 2399 00a2 38BD     		pop	{r3, r4, r5, pc}
 2400              	.LVL208:
 2401              	.L223:
 2402              		.align	2
 2403              	.L222:
 2404 00a4 00000000 		.word	.LANCHOR0
 2405 00a8 04ED00E0 		.word	-536810236
 2406              		.cfi_endproc
 2407              	.LFE140:
 2408              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2409              		.section	.text.vTaskDelay,"ax",%progbits
 2410              		.align	2
 2411              		.global	vTaskDelay
 2412              		.thumb
 2413              		.thumb_func
 2414              		.type	vTaskDelay, %function
 2415              	vTaskDelay:
 2416              	.LFB141:
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2417              		.loc 1 1289 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 0
 2420              		@ frame_needed = 0, uses_anonymous_args = 0
 2421              	.LVL209:
 2422 0000 10B5     		push	{r4, lr}
 2423              		.cfi_def_cfa_offset 8
 2424              		.cfi_offset 4, -8
 2425              		.cfi_offset 14, -4
 2426              	.LVL210:
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2427              		.loc 1 1293 0
 2428 0002 B0B1     		cbz	r0, .L229
 2429 0004 0446     		mov	r4, r0
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskSuspendAll();
 2430              		.loc 1 1295 0
 2431 0006 104B     		ldr	r3, .L231
 2432 0008 D3F81831 		ldr	r3, [r3, #280]
 2433 000c 43B1     		cbz	r3, .L226
 2434              	.LBB139:
 2435              	.LBB140:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 140


 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2436              		.loc 2 156 0
 2437              		.syntax unified
 2438              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2439 000e 4FF02003 			mov r3, #32												
 2440 0012 83F31188 		msr basepri, r3											
 2441 0016 BFF36F8F 		isb														
 2442 001a BFF34F8F 		dsb														
 2443              	
 2444              	@ 0 "" 2
 2445              	.LVL211:
 2446              		.thumb
 2447              		.syntax unified
 2448              	.L227:
 2449 001e FEE7     		b	.L227
 2450              	.L226:
 2451              	.LBE140:
 2452              	.LBE139:
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2453              		.loc 1 1296 0
 2454 0020 FFF7FEFF 		bl	vTaskSuspendAll
 2455              	.LVL212:
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2456              		.loc 1 1307 0
 2457 0024 0021     		movs	r1, #0
 2458 0026 2046     		mov	r0, r4
 2459 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2460              	.LVL213:
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2461              		.loc 1 1309 0
 2462 002c FFF7FEFF 		bl	xTaskResumeAll
 2463              	.LVL214:
 2464 0030 00E0     		b	.L225
 2465              	.LVL215:
 2466              	.L229:
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2467              		.loc 1 1290 0
 2468 0032 0020     		movs	r0, #0
 2469              	.LVL216:
 2470              	.L225:
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2471              		.loc 1 1318 0
 2472 0034 38B9     		cbnz	r0, .L224
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2473              		.loc 1 1320 0
 2474 0036 4FF08052 		mov	r2, #268435456
 2475 003a 044B     		ldr	r3, .L231+4
 2476 003c 1A60     		str	r2, [r3]
 2477              		.syntax unified
 2478              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2479 003e BFF34F8F 		dsb
 2480              	@ 0 "" 2
 2481              	@ 1320 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2482 0042 BFF36F8F 		isb
 2483              	@ 0 "" 2
 2484              		.thumb
 2485              		.syntax unified
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 141


 2486              	.L224:
 2487 0046 10BD     		pop	{r4, pc}
 2488              	.L232:
 2489              		.align	2
 2490              	.L231:
 2491 0048 00000000 		.word	.LANCHOR0
 2492 004c 04ED00E0 		.word	-536810236
 2493              		.cfi_endproc
 2494              	.LFE141:
 2495              		.size	vTaskDelay, .-vTaskDelay
 2496              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2497              		.align	2
 2498              		.global	vTaskSwitchContext
 2499              		.thumb
 2500              		.thumb_func
 2501              		.type	vTaskSwitchContext, %function
 2502              	vTaskSwitchContext:
 2503              	.LFB158:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2504              		.loc 1 2852 0
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 0
 2507              		@ frame_needed = 0, uses_anonymous_args = 0
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 2508              		.loc 1 2853 0
 2509 0000 304B     		ldr	r3, .L244
 2510 0002 D3F81831 		ldr	r3, [r3, #280]
 2511 0006 23B1     		cbz	r3, .L234
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 2512              		.loc 1 2857 0
 2513 0008 0122     		movs	r2, #1
 2514 000a 2E4B     		ldr	r3, .L244
 2515 000c C3F82821 		str	r2, [r3, #296]
 2516 0010 7047     		bx	lr
 2517              	.L234:
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2518              		.loc 1 2852 0
 2519 0012 10B5     		push	{r4, lr}
 2520              		.cfi_def_cfa_offset 8
 2521              		.cfi_offset 4, -8
 2522              		.cfi_offset 14, -4
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2523              		.loc 1 2861 0
 2524 0014 2B4B     		ldr	r3, .L244
 2525 0016 0022     		movs	r2, #0
 2526 0018 C3F82821 		str	r2, [r3, #296]
 2527              	.LBB141:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2528              		.loc 1 2893 0
 2529 001c D3F80031 		ldr	r3, [r3, #256]
 2530 0020 1B6B     		ldr	r3, [r3, #48]
 2531              	.LVL217:
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2532              		.loc 1 2896 0
 2533 0022 1A68     		ldr	r2, [r3]
 2534 0024 B2F1A53F 		cmp	r2, #-1515870811
 2535 0028 0BD1     		bne	.L236
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 142


2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2536              		.loc 1 2897 0 discriminator 1
 2537 002a 5A68     		ldr	r2, [r3, #4]
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 1 ] != ulCheckValue ) ||												\
 2538              		.loc 1 2896 0 discriminator 1
 2539 002c B2F1A53F 		cmp	r2, #-1515870811
 2540 0030 07D1     		bne	.L236
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2541              		.loc 1 2898 0
 2542 0032 9A68     		ldr	r2, [r3, #8]
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 2 ] != ulCheckValue ) ||												\
 2543              		.loc 1 2897 0
 2544 0034 B2F1A53F 		cmp	r2, #-1515870811
 2545 0038 03D1     		bne	.L236
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{																								\
 2546              		.loc 1 2899 0
 2547 003a DB68     		ldr	r3, [r3, #12]
 2548              	.LVL218:
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				( pulStack[ 3 ] != ulCheckValue ) )												\
 2549              		.loc 1 2898 0
 2550 003c B3F1A53F 		cmp	r3, #-1515870811
 2551 0040 07D0     		beq	.L237
 2552              	.L236:
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}																								\
 2553              		.loc 1 2901 0
 2554 0042 204B     		ldr	r3, .L244
 2555 0044 D3F80001 		ldr	r0, [r3, #256]
 2556 0048 D3F80011 		ldr	r1, [r3, #256]
 2557 004c 3431     		adds	r1, r1, #52
 2558 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2559              	.LVL219:
 2560              	.L237:
 2561              	.LBE141:
 2562              	.LBB142:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2563              		.loc 1 2907 0
 2564 0052 1C4B     		ldr	r3, .L244
 2565 0054 D3F80C31 		ldr	r3, [r3, #268]
 2566              	.LVL220:
 2567 0058 0AE0     		b	.L238
 2568              	.L241:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2569              		.loc 1 2907 0 is_stmt 0 discriminator 5
 2570 005a 43B9     		cbnz	r3, .L239
 2571              	.LBB143:
 2572              	.LBB144:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2573              		.loc 2 156 0 is_stmt 1
 2574              		.syntax unified
 2575              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2576 005c 4FF02003 			mov r3, #32												
 2577 0060 83F31188 		msr basepri, r3											
 2578 0064 BFF36F8F 		isb														
 2579 0068 BFF34F8F 		dsb														
 2580              	
 2581              	@ 0 "" 2
 2582              	.LVL221:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 143


 2583              		.thumb
 2584              		.syntax unified
 2585              	.L240:
 2586 006c FEE7     		b	.L240
 2587              	.LVL222:
 2588              	.L239:
 2589              	.LBE144:
 2590              	.LBE143:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2591              		.loc 1 2907 0 discriminator 3
 2592 006e 013B     		subs	r3, r3, #1
 2593              	.LVL223:
 2594              	.L238:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2595              		.loc 1 2907 0 is_stmt 0 discriminator 4
 2596 0070 03EB8301 		add	r1, r3, r3, lsl #2
 2597 0074 8A00     		lsls	r2, r1, #2
 2598 0076 1349     		ldr	r1, .L244
 2599 0078 0A44     		add	r2, r2, r1
 2600 007a 126B     		ldr	r2, [r2, #48]
 2601 007c 002A     		cmp	r2, #0
 2602 007e ECD0     		beq	.L241
 2603              	.LVL224:
 2604              	.LBB145:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2605              		.loc 1 2907 0 discriminator 6
 2606 0080 0846     		mov	r0, r1
 2607 0082 9900     		lsls	r1, r3, #2
 2608 0084 CC18     		adds	r4, r1, r3
 2609 0086 A200     		lsls	r2, r4, #2
 2610 0088 0244     		add	r2, r2, r0
 2611 008a 546B     		ldr	r4, [r2, #52]
 2612 008c 6468     		ldr	r4, [r4, #4]
 2613 008e 5463     		str	r4, [r2, #52]
 2614 0090 3030     		adds	r0, r0, #48
 2615 0092 1944     		add	r1, r1, r3
 2616 0094 8A00     		lsls	r2, r1, #2
 2617 0096 0832     		adds	r2, r2, #8
 2618 0098 0244     		add	r2, r2, r0
 2619 009a 9442     		cmp	r4, r2
 2620 009c 06D1     		bne	.L242
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2621              		.loc 1 2907 0 discriminator 7
 2622 009e 6068     		ldr	r0, [r4, #4]
 2623 00a0 03EB8301 		add	r1, r3, r3, lsl #2
 2624 00a4 8A00     		lsls	r2, r1, #2
 2625 00a6 0749     		ldr	r1, .L244
 2626 00a8 0A44     		add	r2, r2, r1
 2627 00aa 5063     		str	r0, [r2, #52]
 2628              	.L242:
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2629              		.loc 1 2907 0 discriminator 9
 2630 00ac 0549     		ldr	r1, .L244
 2631 00ae 03EB8300 		add	r0, r3, r3, lsl #2
 2632 00b2 8200     		lsls	r2, r0, #2
 2633 00b4 0A44     		add	r2, r2, r1
 2634 00b6 526B     		ldr	r2, [r2, #52]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 144


 2635 00b8 D268     		ldr	r2, [r2, #12]
 2636 00ba C1F80021 		str	r2, [r1, #256]
 2637              	.LBE145:
 2638 00be C1F80C31 		str	r3, [r1, #268]
 2639 00c2 10BD     		pop	{r4, pc}
 2640              	.L245:
 2641              		.align	2
 2642              	.L244:
 2643 00c4 00000000 		.word	.LANCHOR0
 2644              	.LBE142:
 2645              		.cfi_endproc
 2646              	.LFE158:
 2647              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2648              		.section	.text.vTaskSuspend,"ax",%progbits
 2649              		.align	2
 2650              		.global	vTaskSuspend
 2651              		.thumb
 2652              		.thumb_func
 2653              		.type	vTaskSuspend, %function
 2654              	vTaskSuspend:
 2655              	.LFB145:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 2656              		.loc 1 1631 0 is_stmt 1
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
 2659              		@ frame_needed = 0, uses_anonymous_args = 0
 2660              	.LVL225:
 2661 0000 38B5     		push	{r3, r4, r5, lr}
 2662              		.cfi_def_cfa_offset 16
 2663              		.cfi_offset 3, -16
 2664              		.cfi_offset 4, -12
 2665              		.cfi_offset 5, -8
 2666              		.cfi_offset 14, -4
 2667 0002 0446     		mov	r4, r0
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2668              		.loc 1 1634 0
 2669 0004 FFF7FEFF 		bl	vPortEnterCritical
 2670              	.LVL226:
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2671              		.loc 1 1638 0
 2672 0008 14B9     		cbnz	r4, .L247
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2673              		.loc 1 1638 0 is_stmt 0 discriminator 1
 2674 000a 294B     		ldr	r3, .L257
 2675 000c D3F80041 		ldr	r4, [r3, #256]
 2676              	.LVL227:
 2677              	.L247:
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2678              		.loc 1 1644 0 is_stmt 1 discriminator 4
 2679 0010 251D     		adds	r5, r4, #4
 2680 0012 2846     		mov	r0, r5
 2681 0014 FFF7FEFF 		bl	uxListRemove
 2682              	.LVL228:
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2683              		.loc 1 1654 0 discriminator 4
 2684 0018 A36A     		ldr	r3, [r4, #40]
 2685 001a 1BB1     		cbz	r3, .L248
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 145


1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2686              		.loc 1 1656 0
 2687 001c 04F11800 		add	r0, r4, #24
 2688 0020 FFF7FEFF 		bl	uxListRemove
 2689              	.LVL229:
 2690              	.L248:
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2691              		.loc 1 1663 0
 2692 0024 2946     		mov	r1, r5
 2693 0026 2248     		ldr	r0, .L257
 2694 0028 FFF7FEFF 		bl	vListInsertEnd
 2695              	.LVL230:
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2696              		.loc 1 1667 0
 2697 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 2698 0030 DBB2     		uxtb	r3, r3
 2699 0032 012B     		cmp	r3, #1
 2700 0034 02D1     		bne	.L249
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2701              		.loc 1 1671 0
 2702 0036 0023     		movs	r3, #0
 2703 0038 84F85C30 		strb	r3, [r4, #92]
 2704              	.L249:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2705              		.loc 1 1676 0
 2706 003c FFF7FEFF 		bl	vPortExitCritical
 2707              	.LVL231:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2708              		.loc 1 1678 0
 2709 0040 1B4B     		ldr	r3, .L257
 2710 0042 D3F80431 		ldr	r3, [r3, #260]
 2711 0046 2BB1     		cbz	r3, .L250
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2712              		.loc 1 1682 0
 2713 0048 FFF7FEFF 		bl	vPortEnterCritical
 2714              	.LVL232:
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2715              		.loc 1 1684 0
 2716 004c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2717              	.LVL233:
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 2718              		.loc 1 1686 0
 2719 0050 FFF7FEFF 		bl	vPortExitCritical
 2720              	.LVL234:
 2721              	.L250:
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 2722              		.loc 1 1693 0
 2723 0054 164B     		ldr	r3, .L257
 2724 0056 D3F80031 		ldr	r3, [r3, #256]
 2725 005a 9C42     		cmp	r4, r3
 2726 005c 26D1     		bne	.L246
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 2727              		.loc 1 1695 0
 2728 005e 144B     		ldr	r3, .L257
 2729 0060 D3F80431 		ldr	r3, [r3, #260]
 2730 0064 ABB1     		cbz	r3, .L252
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				portYIELD_WITHIN_API();
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 146


 2731              		.loc 1 1698 0
 2732 0066 124B     		ldr	r3, .L257
 2733 0068 D3F81831 		ldr	r3, [r3, #280]
 2734 006c 43B1     		cbz	r3, .L253
 2735              	.LBB146:
 2736              	.LBB147:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2737              		.loc 2 156 0
 2738              		.syntax unified
 2739              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2740 006e 4FF02003 			mov r3, #32												
 2741 0072 83F31188 		msr basepri, r3											
 2742 0076 BFF36F8F 		isb														
 2743 007a BFF34F8F 		dsb														
 2744              	
 2745              	@ 0 "" 2
 2746              	.LVL235:
 2747              		.thumb
 2748              		.syntax unified
 2749              	.L254:
 2750 007e FEE7     		b	.L254
 2751              	.L253:
 2752              	.LBE147:
 2753              	.LBE146:
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 2754              		.loc 1 1699 0
 2755 0080 4FF08052 		mov	r2, #268435456
 2756 0084 0B4B     		ldr	r3, .L257+4
 2757 0086 1A60     		str	r2, [r3]
 2758              		.syntax unified
 2759              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2760 0088 BFF34F8F 		dsb
 2761              	@ 0 "" 2
 2762              	@ 1699 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 2763 008c BFF36F8F 		isb
 2764              	@ 0 "" 2
 2765              		.thumb
 2766              		.syntax unified
 2767 0090 38BD     		pop	{r3, r4, r5, pc}
 2768              	.LVL236:
 2769              	.L252:
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 2770              		.loc 1 1706 0
 2771 0092 074B     		ldr	r3, .L257
 2772 0094 1A68     		ldr	r2, [r3]
 2773 0096 D3F8FC30 		ldr	r3, [r3, #252]
 2774 009a 9A42     		cmp	r2, r3
 2775 009c 04D1     		bne	.L255
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 2776              		.loc 1 1712 0
 2777 009e 0022     		movs	r2, #0
 2778 00a0 034B     		ldr	r3, .L257
 2779 00a2 C3F80021 		str	r2, [r3, #256]
 2780 00a6 38BD     		pop	{r3, r4, r5, pc}
 2781              	.LVL237:
 2782              	.L255:
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 147


 2783              		.loc 1 1716 0
 2784 00a8 FFF7FEFF 		bl	vTaskSwitchContext
 2785              	.LVL238:
 2786              	.L246:
 2787 00ac 38BD     		pop	{r3, r4, r5, pc}
 2788              	.LVL239:
 2789              	.L258:
 2790 00ae 00BF     		.align	2
 2791              	.L257:
 2792 00b0 00000000 		.word	.LANCHOR0
 2793 00b4 04ED00E0 		.word	-536810236
 2794              		.cfi_endproc
 2795              	.LFE145:
 2796              		.size	vTaskSuspend, .-vTaskSuspend
 2797              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2798              		.align	2
 2799              		.global	vTaskPlaceOnEventList
 2800              		.thumb
 2801              		.thumb_func
 2802              		.type	vTaskPlaceOnEventList, %function
 2803              	vTaskPlaceOnEventList:
 2804              	.LFB159:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2805              		.loc 1 2922 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 0
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              	.LVL240:
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2810              		.loc 1 2923 0
 2811 0000 40B9     		cbnz	r0, .L260
 2812              	.LBB148:
 2813              	.LBB149:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2814              		.loc 2 156 0
 2815              		.syntax unified
 2816              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2817 0002 4FF02003 			mov r3, #32												
 2818 0006 83F31188 		msr basepri, r3											
 2819 000a BFF36F8F 		isb														
 2820 000e BFF34F8F 		dsb														
 2821              	
 2822              	@ 0 "" 2
 2823              	.LVL241:
 2824              		.thumb
 2825              		.syntax unified
 2826              	.L261:
 2827 0012 FEE7     		b	.L261
 2828              	.L260:
 2829              	.LBE149:
 2830              	.LBE148:
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2831              		.loc 1 2922 0
 2832 0014 10B5     		push	{r4, lr}
 2833              		.cfi_def_cfa_offset 8
 2834              		.cfi_offset 4, -8
 2835              		.cfi_offset 14, -4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 148


 2836 0016 0C46     		mov	r4, r1
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2837              		.loc 1 2932 0
 2838 0018 054B     		ldr	r3, .L263
 2839 001a D3F80011 		ldr	r1, [r3, #256]
 2840              	.LVL242:
 2841 001e 1831     		adds	r1, r1, #24
 2842 0020 FFF7FEFF 		bl	vListInsert
 2843              	.LVL243:
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2844              		.loc 1 2934 0
 2845 0024 0121     		movs	r1, #1
 2846 0026 2046     		mov	r0, r4
 2847 0028 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2848              	.LVL244:
 2849 002c 10BD     		pop	{r4, pc}
 2850              	.LVL245:
 2851              	.L264:
 2852 002e 00BF     		.align	2
 2853              	.L263:
 2854 0030 00000000 		.word	.LANCHOR0
 2855              		.cfi_endproc
 2856              	.LFE159:
 2857              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2858              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2859              		.align	2
 2860              		.global	vTaskPlaceOnUnorderedEventList
 2861              		.thumb
 2862              		.thumb_func
 2863              		.type	vTaskPlaceOnUnorderedEventList, %function
 2864              	vTaskPlaceOnUnorderedEventList:
 2865              	.LFB160:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2866              		.loc 1 2939 0
 2867              		.cfi_startproc
 2868              		@ args = 0, pretend = 0, frame = 0
 2869              		@ frame_needed = 0, uses_anonymous_args = 0
 2870              	.LVL246:
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2871              		.loc 1 2940 0
 2872 0000 40B9     		cbnz	r0, .L266
 2873              	.LBB150:
 2874              	.LBB151:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2875              		.loc 2 156 0
 2876              		.syntax unified
 2877              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2878 0002 4FF02003 			mov r3, #32												
 2879 0006 83F31188 		msr basepri, r3											
 2880 000a BFF36F8F 		isb														
 2881 000e BFF34F8F 		dsb														
 2882              	
 2883              	@ 0 "" 2
 2884              	.LVL247:
 2885              		.thumb
 2886              		.syntax unified
 2887              	.L267:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 149


 2888 0012 FEE7     		b	.L267
 2889              	.L266:
 2890 0014 0346     		mov	r3, r0
 2891              	.LBE151:
 2892              	.LBE150:
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2893              		.loc 1 2944 0
 2894 0016 1048     		ldr	r0, .L271
 2895              	.LVL248:
 2896 0018 D0F81801 		ldr	r0, [r0, #280]
 2897 001c 40B9     		cbnz	r0, .L268
 2898              	.LBB152:
 2899              	.LBB153:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2900              		.loc 2 156 0
 2901              		.syntax unified
 2902              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2903 001e 4FF02003 			mov r3, #32												
 2904 0022 83F31188 		msr basepri, r3											
 2905 0026 BFF36F8F 		isb														
 2906 002a BFF34F8F 		dsb														
 2907              	
 2908              	@ 0 "" 2
 2909              	.LVL249:
 2910              		.thumb
 2911              		.syntax unified
 2912              	.L269:
 2913 002e FEE7     		b	.L269
 2914              	.LVL250:
 2915              	.L268:
 2916              	.LBE153:
 2917              	.LBE152:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxEventList );
 2918              		.loc 1 2939 0
 2919 0030 10B5     		push	{r4, lr}
 2920              		.cfi_def_cfa_offset 8
 2921              		.cfi_offset 4, -8
 2922              		.cfi_offset 14, -4
 2923 0032 1846     		mov	r0, r3
 2924 0034 1446     		mov	r4, r2
 2925 0036 0B46     		mov	r3, r1
 2926              	.LVL251:
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2927              		.loc 1 2949 0
 2928 0038 074A     		ldr	r2, .L271
 2929              	.LVL252:
 2930 003a D2F80011 		ldr	r1, [r2, #256]
 2931              	.LVL253:
 2932 003e 43F00043 		orr	r3, r3, #-2147483648
 2933              	.LVL254:
 2934 0042 8B61     		str	r3, [r1, #24]
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2935              		.loc 1 2956 0
 2936 0044 D2F80011 		ldr	r1, [r2, #256]
 2937 0048 1831     		adds	r1, r1, #24
 2938 004a FFF7FEFF 		bl	vListInsertEnd
 2939              	.LVL255:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 150


2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 2940              		.loc 1 2958 0
 2941 004e 0121     		movs	r1, #1
 2942 0050 2046     		mov	r0, r4
 2943 0052 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2944              	.LVL256:
 2945 0056 10BD     		pop	{r4, pc}
 2946              	.LVL257:
 2947              	.L272:
 2948              		.align	2
 2949              	.L271:
 2950 0058 00000000 		.word	.LANCHOR0
 2951              		.cfi_endproc
 2952              	.LFE160:
 2953              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2954              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2955              		.align	2
 2956              		.global	vTaskPlaceOnEventListRestricted
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	vTaskPlaceOnEventListRestricted, %function
 2960              	vTaskPlaceOnEventListRestricted:
 2961              	.LFB161:
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		configASSERT( pxEventList );
 2962              		.loc 1 2965 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
 2967 0000 38B5     		push	{r3, r4, r5, lr}
 2968              		.cfi_def_cfa_offset 16
 2969              		.cfi_offset 3, -16
 2970              		.cfi_offset 4, -12
 2971              		.cfi_offset 5, -8
 2972              		.cfi_offset 14, -4
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2973              		.loc 1 2966 0
 2974 0002 40B9     		cbnz	r0, .L274
 2975              	.LBB154:
 2976              	.LBB155:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 2977              		.loc 2 156 0
 2978              		.syntax unified
 2979              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 2980 0004 4FF02003 			mov r3, #32												
 2981 0008 83F31188 		msr basepri, r3											
 2982 000c BFF36F8F 		isb														
 2983 0010 BFF34F8F 		dsb														
 2984              	
 2985              	@ 0 "" 2
 2986              	.LVL259:
 2987              		.thumb
 2988              		.syntax unified
 2989              	.L275:
 2990 0014 FEE7     		b	.L275
 2991              	.L274:
 2992 0016 0C46     		mov	r4, r1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 151


 2993 0018 1546     		mov	r5, r2
 2994              	.LBE155:
 2995              	.LBE154:
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 2996              		.loc 1 2978 0
 2997 001a 074A     		ldr	r2, .L279
 2998              	.LVL260:
 2999 001c D2F80011 		ldr	r1, [r2, #256]
 3000              	.LVL261:
 3001 0020 1831     		adds	r1, r1, #24
 3002 0022 FFF7FEFF 		bl	vListInsertEnd
 3003              	.LVL262:
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3004              		.loc 1 2983 0
 3005 0026 0DB1     		cbz	r5, .L276
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3006              		.loc 1 2985 0
 3007 0028 4FF0FF34 		mov	r4, #-1
 3008              	.LVL263:
 3009              	.L276:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3010              		.loc 1 2989 0
 3011 002c 2946     		mov	r1, r5
 3012 002e 2046     		mov	r0, r4
 3013 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3014              	.LVL264:
 3015 0034 38BD     		pop	{r3, r4, r5, pc}
 3016              	.LVL265:
 3017              	.L280:
 3018 0036 00BF     		.align	2
 3019              	.L279:
 3020 0038 00000000 		.word	.LANCHOR0
 3021              		.cfi_endproc
 3022              	.LFE161:
 3023              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 3024              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3025              		.align	2
 3026              		.global	xTaskRemoveFromEventList
 3027              		.thumb
 3028              		.thumb_func
 3029              		.type	xTaskRemoveFromEventList, %function
 3030              	xTaskRemoveFromEventList:
 3031              	.LFB162:
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3032              		.loc 1 2996 0
 3033              		.cfi_startproc
 3034              		@ args = 0, pretend = 0, frame = 0
 3035              		@ frame_needed = 0, uses_anonymous_args = 0
 3036              	.LVL266:
 3037 0000 38B5     		push	{r3, r4, r5, lr}
 3038              		.cfi_def_cfa_offset 16
 3039              		.cfi_offset 3, -16
 3040              		.cfi_offset 4, -12
 3041              		.cfi_offset 5, -8
 3042              		.cfi_offset 14, -4
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3043              		.loc 1 3013 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 152


 3044 0002 C368     		ldr	r3, [r0, #12]
 3045 0004 DC68     		ldr	r4, [r3, #12]
 3046              	.LVL267:
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3047              		.loc 1 3014 0
 3048 0006 44B9     		cbnz	r4, .L282
 3049              	.LBB156:
 3050              	.LBB157:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3051              		.loc 2 156 0
 3052              		.syntax unified
 3053              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3054 0008 4FF02003 			mov r3, #32												
 3055 000c 83F31188 		msr basepri, r3											
 3056 0010 BFF36F8F 		isb														
 3057 0014 BFF34F8F 		dsb														
 3058              	
 3059              	@ 0 "" 2
 3060              	.LVL268:
 3061              		.thumb
 3062              		.syntax unified
 3063              	.L283:
 3064 0018 FEE7     		b	.L283
 3065              	.L282:
 3066              	.LBE157:
 3067              	.LBE156:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3068              		.loc 1 3015 0
 3069 001a 04F11805 		add	r5, r4, #24
 3070 001e 2846     		mov	r0, r5
 3071              	.LVL269:
 3072 0020 FFF7FEFF 		bl	uxListRemove
 3073              	.LVL270:
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3074              		.loc 1 3017 0
 3075 0024 154B     		ldr	r3, .L290
 3076 0026 D3F81831 		ldr	r3, [r3, #280]
 3077 002a ABB9     		cbnz	r3, .L284
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3078              		.loc 1 3019 0
 3079 002c 251D     		adds	r5, r4, #4
 3080 002e 2846     		mov	r0, r5
 3081 0030 FFF7FEFF 		bl	uxListRemove
 3082              	.LVL271:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3083              		.loc 1 3020 0
 3084 0034 E36A     		ldr	r3, [r4, #44]
 3085 0036 114A     		ldr	r2, .L290
 3086 0038 D2F80C21 		ldr	r2, [r2, #268]
 3087 003c 9342     		cmp	r3, r2
 3088 003e 02D9     		bls	.L285
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3089              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3090 0040 0E4A     		ldr	r2, .L290
 3091 0042 C2F80C31 		str	r3, [r2, #268]
 3092              	.L285:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 153


 3093              		.loc 1 3020 0 discriminator 3
 3094 0046 03EB8303 		add	r3, r3, r3, lsl #2
 3095 004a 9A00     		lsls	r2, r3, #2
 3096 004c 2946     		mov	r1, r5
 3097 004e 0C48     		ldr	r0, .L290+4
 3098 0050 1044     		add	r0, r0, r2
 3099 0052 FFF7FEFF 		bl	vListInsertEnd
 3100              	.LVL272:
 3101 0056 03E0     		b	.L286
 3102              	.L284:
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3103              		.loc 1 3026 0 is_stmt 1
 3104 0058 2946     		mov	r1, r5
 3105 005a 0A48     		ldr	r0, .L290+8
 3106 005c FFF7FEFF 		bl	vListInsertEnd
 3107              	.LVL273:
 3108              	.L286:
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3109              		.loc 1 3029 0
 3110 0060 E26A     		ldr	r2, [r4, #44]
 3111 0062 064B     		ldr	r3, .L290
 3112 0064 D3F80031 		ldr	r3, [r3, #256]
 3113 0068 DB6A     		ldr	r3, [r3, #44]
 3114 006a 9A42     		cmp	r2, r3
 3115 006c 04D9     		bls	.L288
 3116              	.LVL274:
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3117              		.loc 1 3038 0
 3118 006e 0120     		movs	r0, #1
 3119 0070 024B     		ldr	r3, .L290
 3120 0072 C3F82801 		str	r0, [r3, #296]
 3121 0076 38BD     		pop	{r3, r4, r5, pc}
 3122              	.LVL275:
 3123              	.L288:
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3124              		.loc 1 3042 0
 3125 0078 0020     		movs	r0, #0
 3126              	.LVL276:
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3127              		.loc 1 3060 0
 3128 007a 38BD     		pop	{r3, r4, r5, pc}
 3129              	.LVL277:
 3130              	.L291:
 3131              		.align	2
 3132              	.L290:
 3133 007c 00000000 		.word	.LANCHOR0
 3134 0080 30000000 		.word	.LANCHOR0+48
 3135 0084 14000000 		.word	.LANCHOR0+20
 3136              		.cfi_endproc
 3137              	.LFE162:
 3138              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 3139              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3140              		.align	2
 3141              		.global	vTaskRemoveFromUnorderedEventList
 3142              		.thumb
 3143              		.thumb_func
 3144              		.type	vTaskRemoveFromUnorderedEventList, %function
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 154


 3145              	vTaskRemoveFromUnorderedEventList:
 3146              	.LFB163:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3147              		.loc 1 3064 0
 3148              		.cfi_startproc
 3149              		@ args = 0, pretend = 0, frame = 0
 3150              		@ frame_needed = 0, uses_anonymous_args = 0
 3151              	.LVL278:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3152              		.loc 1 3069 0
 3153 0000 1F4B     		ldr	r3, .L300
 3154 0002 D3F81831 		ldr	r3, [r3, #280]
 3155 0006 43B9     		cbnz	r3, .L293
 3156              	.LBB158:
 3157              	.LBB159:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3158              		.loc 2 156 0
 3159              		.syntax unified
 3160              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3161 0008 4FF02003 			mov r3, #32												
 3162 000c 83F31188 		msr basepri, r3											
 3163 0010 BFF36F8F 		isb														
 3164 0014 BFF34F8F 		dsb														
 3165              	
 3166              	@ 0 "" 2
 3167              	.LVL279:
 3168              		.thumb
 3169              		.syntax unified
 3170              	.L294:
 3171 0018 FEE7     		b	.L294
 3172              	.L293:
 3173              	.LBE159:
 3174              	.LBE158:
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3175              		.loc 1 3064 0
 3176 001a 70B5     		push	{r4, r5, r6, lr}
 3177              		.cfi_def_cfa_offset 16
 3178              		.cfi_offset 4, -16
 3179              		.cfi_offset 5, -12
 3180              		.cfi_offset 6, -8
 3181              		.cfi_offset 14, -4
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3182              		.loc 1 3072 0
 3183 001c 41F00043 		orr	r3, r1, #-2147483648
 3184 0020 0360     		str	r3, [r0]
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3185              		.loc 1 3076 0
 3186 0022 C468     		ldr	r4, [r0, #12]
 3187              	.LVL280:
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3188              		.loc 1 3077 0
 3189 0024 44B9     		cbnz	r4, .L295
 3190              	.LBB160:
 3191              	.LBB161:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3192              		.loc 2 156 0
 3193              		.syntax unified
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 155


 3194              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3195 0026 4FF02003 			mov r3, #32												
 3196 002a 83F31188 		msr basepri, r3											
 3197 002e BFF36F8F 		isb														
 3198 0032 BFF34F8F 		dsb														
 3199              	
 3200              	@ 0 "" 2
 3201              	.LVL281:
 3202              		.thumb
 3203              		.syntax unified
 3204              	.L296:
 3205 0036 FEE7     		b	.L296
 3206              	.L295:
 3207              	.LBE161:
 3208              	.LBE160:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3209              		.loc 1 3078 0
 3210 0038 FFF7FEFF 		bl	uxListRemove
 3211              	.LVL282:
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3212              		.loc 1 3083 0
 3213 003c 261D     		adds	r6, r4, #4
 3214 003e 3046     		mov	r0, r6
 3215 0040 FFF7FEFF 		bl	uxListRemove
 3216              	.LVL283:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3217              		.loc 1 3084 0
 3218 0044 E36A     		ldr	r3, [r4, #44]
 3219 0046 0E4A     		ldr	r2, .L300
 3220 0048 D2F80C21 		ldr	r2, [r2, #268]
 3221 004c 9342     		cmp	r3, r2
 3222 004e 02D9     		bls	.L297
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3223              		.loc 1 3084 0 is_stmt 0 discriminator 1
 3224 0050 0B4A     		ldr	r2, .L300
 3225 0052 C2F80C31 		str	r3, [r2, #268]
 3226              	.L297:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3227              		.loc 1 3084 0 discriminator 3
 3228 0056 0A4D     		ldr	r5, .L300
 3229 0058 05F13000 		add	r0, r5, #48
 3230 005c 03EB8303 		add	r3, r3, r3, lsl #2
 3231 0060 9A00     		lsls	r2, r3, #2
 3232 0062 3146     		mov	r1, r6
 3233 0064 1044     		add	r0, r0, r2
 3234 0066 FFF7FEFF 		bl	vListInsertEnd
 3235              	.LVL284:
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3236              		.loc 1 3086 0 is_stmt 1 discriminator 3
 3237 006a E26A     		ldr	r2, [r4, #44]
 3238 006c D5F80031 		ldr	r3, [r5, #256]
 3239 0070 DB6A     		ldr	r3, [r3, #44]
 3240 0072 9A42     		cmp	r2, r3
 3241 0074 02D9     		bls	.L292
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3242              		.loc 1 3092 0
 3243 0076 0122     		movs	r2, #1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 156


 3244 0078 C5F82821 		str	r2, [r5, #296]
 3245              	.L292:
 3246 007c 70BD     		pop	{r4, r5, r6, pc}
 3247              	.LVL285:
 3248              	.L301:
 3249 007e 00BF     		.align	2
 3250              	.L300:
 3251 0080 00000000 		.word	.LANCHOR0
 3252              		.cfi_endproc
 3253              	.LFE163:
 3254              		.size	vTaskRemoveFromUnorderedEventList, .-vTaskRemoveFromUnorderedEventList
 3255              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3256              		.align	2
 3257              		.global	vTaskSetTimeOutState
 3258              		.thumb
 3259              		.thumb_func
 3260              		.type	vTaskSetTimeOutState, %function
 3261              	vTaskSetTimeOutState:
 3262              	.LFB164:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3263              		.loc 1 3098 0
 3264              		.cfi_startproc
 3265              		@ args = 0, pretend = 0, frame = 0
 3266              		@ frame_needed = 0, uses_anonymous_args = 0
 3267              	.LVL286:
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	taskENTER_CRITICAL();
 3268              		.loc 1 3099 0
 3269 0000 40B9     		cbnz	r0, .L303
 3270              	.LBB162:
 3271              	.LBB163:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3272              		.loc 2 156 0
 3273              		.syntax unified
 3274              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3275 0002 4FF02003 			mov r3, #32												
 3276 0006 83F31188 		msr basepri, r3											
 3277 000a BFF36F8F 		isb														
 3278 000e BFF34F8F 		dsb														
 3279              	
 3280              	@ 0 "" 2
 3281              	.LVL287:
 3282              		.thumb
 3283              		.syntax unified
 3284              	.L304:
 3285 0012 FEE7     		b	.L304
 3286              	.L303:
 3287              	.LBE163:
 3288              	.LBE162:
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3289              		.loc 1 3098 0
 3290 0014 10B5     		push	{r4, lr}
 3291              		.cfi_def_cfa_offset 8
 3292              		.cfi_offset 4, -8
 3293              		.cfi_offset 14, -4
 3294 0016 0446     		mov	r4, r0
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3295              		.loc 1 3100 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 157


 3296 0018 FFF7FEFF 		bl	vPortEnterCritical
 3297              	.LVL288:
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3298              		.loc 1 3102 0
 3299 001c 044B     		ldr	r3, .L306
 3300 001e D3F82021 		ldr	r2, [r3, #288]
 3301 0022 2260     		str	r2, [r4]
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	}
 3302              		.loc 1 3103 0
 3303 0024 D3F81431 		ldr	r3, [r3, #276]
 3304 0028 6360     		str	r3, [r4, #4]
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3305              		.loc 1 3105 0
 3306 002a FFF7FEFF 		bl	vPortExitCritical
 3307              	.LVL289:
 3308 002e 10BD     		pop	{r4, pc}
 3309              	.LVL290:
 3310              	.L307:
 3311              		.align	2
 3312              	.L306:
 3313 0030 00000000 		.word	.LANCHOR0
 3314              		.cfi_endproc
 3315              	.LFE164:
 3316              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3317              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3318              		.align	2
 3319              		.global	vTaskInternalSetTimeOutState
 3320              		.thumb
 3321              		.thumb_func
 3322              		.type	vTaskInternalSetTimeOutState, %function
 3323              	vTaskInternalSetTimeOutState:
 3324              	.LFB165:
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3325              		.loc 1 3110 0
 3326              		.cfi_startproc
 3327              		@ args = 0, pretend = 0, frame = 0
 3328              		@ frame_needed = 0, uses_anonymous_args = 0
 3329              		@ link register save eliminated.
 3330              	.LVL291:
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3331              		.loc 1 3112 0
 3332 0000 034B     		ldr	r3, .L309
 3333 0002 D3F82021 		ldr	r2, [r3, #288]
 3334 0006 0260     		str	r2, [r0]
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3335              		.loc 1 3113 0
 3336 0008 D3F81431 		ldr	r3, [r3, #276]
 3337 000c 4360     		str	r3, [r0, #4]
 3338 000e 7047     		bx	lr
 3339              	.L310:
 3340              		.align	2
 3341              	.L309:
 3342 0010 00000000 		.word	.LANCHOR0
 3343              		.cfi_endproc
 3344              	.LFE165:
 3345              		.size	vTaskInternalSetTimeOutState, .-vTaskInternalSetTimeOutState
 3346              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 158


 3347              		.align	2
 3348              		.global	xTaskCheckForTimeOut
 3349              		.thumb
 3350              		.thumb_func
 3351              		.type	xTaskCheckForTimeOut, %function
 3352              	xTaskCheckForTimeOut:
 3353              	.LFB166:
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** BaseType_t xReturn;
 3354              		.loc 1 3118 0
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 0
 3357              		@ frame_needed = 0, uses_anonymous_args = 0
 3358              	.LVL292:
 3359 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3360              		.cfi_def_cfa_offset 24
 3361              		.cfi_offset 3, -24
 3362              		.cfi_offset 4, -20
 3363              		.cfi_offset 5, -16
 3364              		.cfi_offset 6, -12
 3365              		.cfi_offset 7, -8
 3366              		.cfi_offset 14, -4
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3367              		.loc 1 3121 0
 3368 0002 40B9     		cbnz	r0, .L312
 3369              	.LBB164:
 3370              	.LBB165:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3371              		.loc 2 156 0
 3372              		.syntax unified
 3373              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3374 0004 4FF02003 			mov r3, #32												
 3375 0008 83F31188 		msr basepri, r3											
 3376 000c BFF36F8F 		isb														
 3377 0010 BFF34F8F 		dsb														
 3378              	
 3379              	@ 0 "" 2
 3380              	.LVL293:
 3381              		.thumb
 3382              		.syntax unified
 3383              	.L313:
 3384 0014 FEE7     		b	.L313
 3385              	.L312:
 3386 0016 0546     		mov	r5, r0
 3387              	.LBE165:
 3388              	.LBE164:
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3389              		.loc 1 3122 0
 3390 0018 41B9     		cbnz	r1, .L314
 3391              	.LBB166:
 3392              	.LBB167:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3393              		.loc 2 156 0
 3394              		.syntax unified
 3395              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3396 001a 4FF02003 			mov r3, #32												
 3397 001e 83F31188 		msr basepri, r3											
 3398 0022 BFF36F8F 		isb														
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 159


 3399 0026 BFF34F8F 		dsb														
 3400              	
 3401              	@ 0 "" 2
 3402              	.LVL294:
 3403              		.thumb
 3404              		.syntax unified
 3405              	.L315:
 3406 002a FEE7     		b	.L315
 3407              	.L314:
 3408 002c 0C46     		mov	r4, r1
 3409              	.LBE167:
 3410              	.LBE166:
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	{
 3411              		.loc 1 3124 0
 3412 002e FFF7FEFF 		bl	vPortEnterCritical
 3413              	.LVL295:
 3414              	.LBB168:
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3415              		.loc 1 3127 0
 3416 0032 124B     		ldr	r3, .L322
 3417 0034 D3F81401 		ldr	r0, [r3, #276]
 3418              	.LVL296:
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3419              		.loc 1 3128 0
 3420 0038 6968     		ldr	r1, [r5, #4]
 3421 003a 421A     		subs	r2, r0, r1
 3422              	.LVL297:
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3423              		.loc 1 3142 0
 3424 003c 2368     		ldr	r3, [r4]
 3425 003e B3F1FF3F 		cmp	r3, #-1
 3426 0042 14D0     		beq	.L319
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3427              		.loc 1 3152 0
 3428 0044 2F68     		ldr	r7, [r5]
 3429 0046 0D4E     		ldr	r6, .L322
 3430 0048 D6F82061 		ldr	r6, [r6, #288]
 3431 004c B742     		cmp	r7, r6
 3432 004e 01D0     		beq	.L317
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3433              		.loc 1 3152 0 is_stmt 0 discriminator 1
 3434 0050 8842     		cmp	r0, r1
 3435 0052 0ED2     		bcs	.L320
 3436              	.L317:
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3437              		.loc 1 3161 0 is_stmt 1
 3438 0054 9A42     		cmp	r2, r3
 3439 0056 06D2     		bcs	.L318
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3440              		.loc 1 3164 0
 3441 0058 9B1A     		subs	r3, r3, r2
 3442 005a 2360     		str	r3, [r4]
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdFALSE;
 3443              		.loc 1 3165 0
 3444 005c 2846     		mov	r0, r5
 3445              	.LVL298:
 3446 005e FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 160


 3447              	.LVL299:
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3448              		.loc 1 3166 0
 3449 0062 0024     		movs	r4, #0
 3450              	.LVL300:
 3451 0064 06E0     		b	.L316
 3452              	.LVL301:
 3453              	.L318:
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			xReturn = pdTRUE;
 3454              		.loc 1 3170 0
 3455 0066 0023     		movs	r3, #0
 3456 0068 2360     		str	r3, [r4]
 3457              	.LVL302:
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3458              		.loc 1 3171 0
 3459 006a 0124     		movs	r4, #1
 3460              	.LVL303:
 3461 006c 02E0     		b	.L316
 3462              	.LVL304:
 3463              	.L319:
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3464              		.loc 1 3147 0
 3465 006e 0024     		movs	r4, #0
 3466              	.LVL305:
 3467 0070 00E0     		b	.L316
 3468              	.LVL306:
 3469              	.L320:
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3470              		.loc 1 3159 0
 3471 0072 0124     		movs	r4, #1
 3472              	.LVL307:
 3473              	.L316:
 3474              	.LBE168:
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3475              		.loc 1 3174 0
 3476 0074 FFF7FEFF 		bl	vPortExitCritical
 3477              	.LVL308:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3478              		.loc 1 3177 0
 3479 0078 2046     		mov	r0, r4
 3480 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3481              	.LVL309:
 3482              	.L323:
 3483              		.align	2
 3484              	.L322:
 3485 007c 00000000 		.word	.LANCHOR0
 3486              		.cfi_endproc
 3487              	.LFE166:
 3488              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3489              		.section	.text.vTaskMissedYield,"ax",%progbits
 3490              		.align	2
 3491              		.global	vTaskMissedYield
 3492              		.thumb
 3493              		.thumb_func
 3494              		.type	vTaskMissedYield, %function
 3495              	vTaskMissedYield:
 3496              	.LFB167:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 161


3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3497              		.loc 1 3181 0
 3498              		.cfi_startproc
 3499              		@ args = 0, pretend = 0, frame = 0
 3500              		@ frame_needed = 0, uses_anonymous_args = 0
 3501              		@ link register save eliminated.
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** }
 3502              		.loc 1 3182 0
 3503 0000 0122     		movs	r2, #1
 3504 0002 024B     		ldr	r3, .L325
 3505 0004 C3F82821 		str	r2, [r3, #296]
 3506 0008 7047     		bx	lr
 3507              	.L326:
 3508 000a 00BF     		.align	2
 3509              	.L325:
 3510 000c 00000000 		.word	.LANCHOR0
 3511              		.cfi_endproc
 3512              	.LFE167:
 3513              		.size	vTaskMissedYield, .-vTaskMissedYield
 3514              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3515              		.align	2
 3516              		.global	vTaskSetThreadLocalStoragePointer
 3517              		.thumb
 3518              		.thumb_func
 3519              		.type	vTaskSetThreadLocalStoragePointer, %function
 3520              	vTaskSetThreadLocalStoragePointer:
 3521              	.LFB169:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 3522              		.loc 1 3395 0
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 0
 3525              		@ frame_needed = 0, uses_anonymous_args = 0
 3526              		@ link register save eliminated.
 3527              	.LVL310:
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3528              		.loc 1 3398 0
 3529 0000 0429     		cmp	r1, #4
 3530 0002 07DC     		bgt	.L327
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3531              		.loc 1 3400 0
 3532 0004 10B9     		cbnz	r0, .L329
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3533              		.loc 1 3400 0 is_stmt 0 discriminator 1
 3534 0006 044B     		ldr	r3, .L330
 3535 0008 D3F80001 		ldr	r0, [r3, #256]
 3536              	.LVL311:
 3537              	.L329:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3538              		.loc 1 3401 0 is_stmt 1 discriminator 4
 3539 000c 1031     		adds	r1, r1, #16
 3540              	.LVL312:
 3541 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3542              	.LVL313:
 3543 0012 4A60     		str	r2, [r1, #4]
 3544              	.LVL314:
 3545              	.L327:
 3546 0014 7047     		bx	lr
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 162


 3547              	.L331:
 3548 0016 00BF     		.align	2
 3549              	.L330:
 3550 0018 00000000 		.word	.LANCHOR0
 3551              		.cfi_endproc
 3552              	.LFE169:
 3553              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3554              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3555              		.align	2
 3556              		.global	pvTaskGetThreadLocalStoragePointer
 3557              		.thumb
 3558              		.thumb_func
 3559              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3560              	pvTaskGetThreadLocalStoragePointer:
 3561              	.LFB170:
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	void *pvReturn = NULL;
 3562              		.loc 1 3411 0
 3563              		.cfi_startproc
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 3567              	.LVL315:
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3568              		.loc 1 3415 0
 3569 0000 0429     		cmp	r1, #4
 3570 0002 08DC     		bgt	.L335
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3571              		.loc 1 3417 0
 3572 0004 10B9     		cbnz	r0, .L334
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3573              		.loc 1 3417 0 is_stmt 0 discriminator 1
 3574 0006 054B     		ldr	r3, .L336
 3575 0008 D3F80001 		ldr	r0, [r3, #256]
 3576              	.LVL316:
 3577              	.L334:
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3578              		.loc 1 3418 0 is_stmt 1 discriminator 4
 3579 000c 1031     		adds	r1, r1, #16
 3580              	.LVL317:
 3581 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3582              	.LVL318:
 3583 0012 4068     		ldr	r0, [r0, #4]
 3584              	.LVL319:
 3585 0014 7047     		bx	lr
 3586              	.LVL320:
 3587              	.L335:
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3588              		.loc 1 3422 0
 3589 0016 0020     		movs	r0, #0
 3590              	.LVL321:
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3591              		.loc 1 3426 0
 3592 0018 7047     		bx	lr
 3593              	.L337:
 3594 001a 00BF     		.align	2
 3595              	.L336:
 3596 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 163


 3597              		.cfi_endproc
 3598              	.LFE170:
 3599              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3600              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3601              		.align	2
 3602              		.global	xTaskGetCurrentTaskHandle
 3603              		.thumb
 3604              		.thumb_func
 3605              		.type	xTaskGetCurrentTaskHandle, %function
 3606              	xTaskGetCurrentTaskHandle:
 3607              	.LFB175:
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TaskHandle_t xReturn;
 3608              		.loc 1 3768 0
 3609              		.cfi_startproc
 3610              		@ args = 0, pretend = 0, frame = 0
 3611              		@ frame_needed = 0, uses_anonymous_args = 0
 3612              		@ link register save eliminated.
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3613              		.loc 1 3774 0
 3614 0000 014B     		ldr	r3, .L339
 3615 0002 D3F80001 		ldr	r0, [r3, #256]
 3616              	.LVL322:
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3617              		.loc 1 3777 0
 3618 0006 7047     		bx	lr
 3619              	.L340:
 3620              		.align	2
 3621              	.L339:
 3622 0008 00000000 		.word	.LANCHOR0
 3623              		.cfi_endproc
 3624              	.LFE175:
 3625              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3626              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3627              		.align	2
 3628              		.global	xTaskGetSchedulerState
 3629              		.thumb
 3630              		.thumb_func
 3631              		.type	xTaskGetSchedulerState, %function
 3632              	xTaskGetSchedulerState:
 3633              	.LFB176:
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3634              		.loc 1 3785 0
 3635              		.cfi_startproc
 3636              		@ args = 0, pretend = 0, frame = 0
 3637              		@ frame_needed = 0, uses_anonymous_args = 0
 3638              		@ link register save eliminated.
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3639              		.loc 1 3788 0
 3640 0000 064B     		ldr	r3, .L345
 3641 0002 D3F80431 		ldr	r3, [r3, #260]
 3642 0006 2BB1     		cbz	r3, .L343
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3643              		.loc 1 3794 0
 3644 0008 044B     		ldr	r3, .L345
 3645 000a D3F81831 		ldr	r3, [r3, #280]
 3646 000e 1BB9     		cbnz	r3, .L344
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 164


 3647              		.loc 1 3796 0
 3648 0010 0220     		movs	r0, #2
 3649 0012 7047     		bx	lr
 3650              	.L343:
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3651              		.loc 1 3790 0
 3652 0014 0120     		movs	r0, #1
 3653 0016 7047     		bx	lr
 3654              	.L344:
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3655              		.loc 1 3800 0
 3656 0018 0020     		movs	r0, #0
 3657              	.LVL323:
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3658              		.loc 1 3805 0
 3659 001a 7047     		bx	lr
 3660              	.L346:
 3661              		.align	2
 3662              	.L345:
 3663 001c 00000000 		.word	.LANCHOR0
 3664              		.cfi_endproc
 3665              	.LFE176:
 3666              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3667              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3668              		.align	2
 3669              		.global	uxTaskResetEventItemValue
 3670              		.thumb
 3671              		.thumb_func
 3672              		.type	uxTaskResetEventItemValue, %function
 3673              	uxTaskResetEventItemValue:
 3674              	.LFB177:
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** TickType_t uxReturn;
 3675              		.loc 1 4394 0
 3676              		.cfi_startproc
 3677              		@ args = 0, pretend = 0, frame = 0
 3678              		@ frame_needed = 0, uses_anonymous_args = 0
 3679              		@ link register save eliminated.
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3680              		.loc 1 4397 0
 3681 0000 064B     		ldr	r3, .L348
 3682 0002 D3F80021 		ldr	r2, [r3, #256]
 3683 0006 9069     		ldr	r0, [r2, #24]
 3684              	.LVL324:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3685              		.loc 1 4401 0
 3686 0008 D3F80021 		ldr	r2, [r3, #256]
 3687 000c D3F80031 		ldr	r3, [r3, #256]
 3688 0010 DB6A     		ldr	r3, [r3, #44]
 3689 0012 C3F10703 		rsb	r3, r3, #7
 3690 0016 9361     		str	r3, [r2, #24]
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** /*-----------------------------------------------------------*/
 3691              		.loc 1 4404 0
 3692 0018 7047     		bx	lr
 3693              	.L349:
 3694 001a 00BF     		.align	2
 3695              	.L348:
 3696 001c 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 165


 3697              		.cfi_endproc
 3698              	.LFE177:
 3699              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3700              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3701              		.align	2
 3702              		.global	ulTaskNotifyTake
 3703              		.thumb
 3704              		.thumb_func
 3705              		.type	ulTaskNotifyTake, %function
 3706              	ulTaskNotifyTake:
 3707              	.LFB178:
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint32_t ulReturn;
 3708              		.loc 1 4427 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              	.LVL325:
 3713 0000 38B5     		push	{r3, r4, r5, lr}
 3714              		.cfi_def_cfa_offset 16
 3715              		.cfi_offset 3, -16
 3716              		.cfi_offset 4, -12
 3717              		.cfi_offset 5, -8
 3718              		.cfi_offset 14, -4
 3719 0002 0546     		mov	r5, r0
 3720 0004 0C46     		mov	r4, r1
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3721              		.loc 1 4430 0
 3722 0006 FFF7FEFF 		bl	vPortEnterCritical
 3723              	.LVL326:
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3724              		.loc 1 4433 0
 3725 000a 1B4B     		ldr	r3, .L355
 3726 000c D3F80031 		ldr	r3, [r3, #256]
 3727 0010 9B6D     		ldr	r3, [r3, #88]
 3728 0012 93B9     		cbnz	r3, .L351
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3729              		.loc 1 4436 0
 3730 0014 184B     		ldr	r3, .L355
 3731 0016 D3F80031 		ldr	r3, [r3, #256]
 3732 001a 0122     		movs	r2, #1
 3733 001c 83F85C20 		strb	r2, [r3, #92]
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3734              		.loc 1 4438 0
 3735 0020 5CB1     		cbz	r4, .L351
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3736              		.loc 1 4440 0
 3737 0022 1146     		mov	r1, r2
 3738 0024 2046     		mov	r0, r4
 3739 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3740              	.LVL327:
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3741              		.loc 1 4447 0
 3742 002a 4FF08052 		mov	r2, #268435456
 3743 002e 134B     		ldr	r3, .L355+4
 3744 0030 1A60     		str	r2, [r3]
 3745              		.syntax unified
 3746              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 166


 3747 0032 BFF34F8F 		dsb
 3748              	@ 0 "" 2
 3749              	@ 4447 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3750 0036 BFF36F8F 		isb
 3751              	@ 0 "" 2
 3752              		.thumb
 3753              		.syntax unified
 3754              	.L351:
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3755              		.loc 1 4459 0
 3756 003a FFF7FEFF 		bl	vPortExitCritical
 3757              	.LVL328:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3758              		.loc 1 4461 0
 3759 003e FFF7FEFF 		bl	vPortEnterCritical
 3760              	.LVL329:
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3761              		.loc 1 4464 0
 3762 0042 0D4B     		ldr	r3, .L355
 3763 0044 D3F80031 		ldr	r3, [r3, #256]
 3764 0048 9C6D     		ldr	r4, [r3, #88]
 3765              	.LVL330:
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3766              		.loc 1 4466 0
 3767 004a 5CB1     		cbz	r4, .L352
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3768              		.loc 1 4468 0
 3769 004c 2DB1     		cbz	r5, .L353
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3770              		.loc 1 4470 0
 3771 004e 0A4B     		ldr	r3, .L355
 3772 0050 D3F80031 		ldr	r3, [r3, #256]
 3773 0054 0022     		movs	r2, #0
 3774 0056 9A65     		str	r2, [r3, #88]
 3775 0058 04E0     		b	.L352
 3776              	.L353:
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3777              		.loc 1 4474 0
 3778 005a 074B     		ldr	r3, .L355
 3779 005c D3F80031 		ldr	r3, [r3, #256]
 3780 0060 621E     		subs	r2, r4, #1
 3781 0062 9A65     		str	r2, [r3, #88]
 3782              	.L352:
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3783              		.loc 1 4482 0
 3784 0064 044B     		ldr	r3, .L355
 3785 0066 D3F80031 		ldr	r3, [r3, #256]
 3786 006a 0022     		movs	r2, #0
 3787 006c 83F85C20 		strb	r2, [r3, #92]
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3788              		.loc 1 4484 0
 3789 0070 FFF7FEFF 		bl	vPortExitCritical
 3790              	.LVL331:
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3791              		.loc 1 4487 0
 3792 0074 2046     		mov	r0, r4
 3793 0076 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 167


 3794              	.LVL332:
 3795              	.L356:
 3796              		.align	2
 3797              	.L355:
 3798 0078 00000000 		.word	.LANCHOR0
 3799 007c 04ED00E0 		.word	-536810236
 3800              		.cfi_endproc
 3801              	.LFE178:
 3802              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3803              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3804              		.align	2
 3805              		.global	xTaskNotifyWait
 3806              		.thumb
 3807              		.thumb_func
 3808              		.type	xTaskNotifyWait, %function
 3809              	xTaskNotifyWait:
 3810              	.LFB179:
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	BaseType_t xReturn;
 3811              		.loc 1 4495 0
 3812              		.cfi_startproc
 3813              		@ args = 0, pretend = 0, frame = 0
 3814              		@ frame_needed = 0, uses_anonymous_args = 0
 3815              	.LVL333:
 3816 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3817              		.cfi_def_cfa_offset 24
 3818              		.cfi_offset 3, -24
 3819              		.cfi_offset 4, -20
 3820              		.cfi_offset 5, -16
 3821              		.cfi_offset 6, -12
 3822              		.cfi_offset 7, -8
 3823              		.cfi_offset 14, -4
 3824 0002 0746     		mov	r7, r0
 3825 0004 0D46     		mov	r5, r1
 3826 0006 1446     		mov	r4, r2
 3827 0008 1E46     		mov	r6, r3
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3828              		.loc 1 4498 0
 3829 000a FFF7FEFF 		bl	vPortEnterCritical
 3830              	.LVL334:
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3831              		.loc 1 4501 0
 3832 000e 234B     		ldr	r3, .L363
 3833 0010 D3F80031 		ldr	r3, [r3, #256]
 3834 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3835 0018 DBB2     		uxtb	r3, r3
 3836 001a 022B     		cmp	r3, #2
 3837 001c 18D0     		beq	.L358
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3838              		.loc 1 4506 0
 3839 001e 1F4B     		ldr	r3, .L363
 3840 0020 D3F80021 		ldr	r2, [r3, #256]
 3841 0024 906D     		ldr	r0, [r2, #88]
 3842 0026 20EA0700 		bic	r0, r0, r7
 3843 002a 9065     		str	r0, [r2, #88]
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3844              		.loc 1 4509 0
 3845 002c D3F80031 		ldr	r3, [r3, #256]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 168


 3846 0030 0122     		movs	r2, #1
 3847 0032 83F85C20 		strb	r2, [r3, #92]
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 3848              		.loc 1 4511 0
 3849 0036 5EB1     		cbz	r6, .L358
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3850              		.loc 1 4513 0
 3851 0038 1146     		mov	r1, r2
 3852 003a 3046     		mov	r0, r6
 3853 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3854              	.LVL335:
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 3855              		.loc 1 4520 0
 3856 0040 4FF08052 		mov	r2, #268435456
 3857 0044 164B     		ldr	r3, .L363+4
 3858 0046 1A60     		str	r2, [r3]
 3859              		.syntax unified
 3860              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3861 0048 BFF34F8F 		dsb
 3862              	@ 0 "" 2
 3863              	@ 4520 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 3864 004c BFF36F8F 		isb
 3865              	@ 0 "" 2
 3866              		.thumb
 3867              		.syntax unified
 3868              	.L358:
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3869              		.loc 1 4532 0
 3870 0050 FFF7FEFF 		bl	vPortExitCritical
 3871              	.LVL336:
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3872              		.loc 1 4534 0
 3873 0054 FFF7FEFF 		bl	vPortEnterCritical
 3874              	.LVL337:
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3875              		.loc 1 4538 0
 3876 0058 24B1     		cbz	r4, .L359
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3877              		.loc 1 4542 0
 3878 005a 104B     		ldr	r3, .L363
 3879 005c D3F80031 		ldr	r3, [r3, #256]
 3880 0060 9B6D     		ldr	r3, [r3, #88]
 3881 0062 2360     		str	r3, [r4]
 3882              	.L359:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3883              		.loc 1 4549 0
 3884 0064 0D4B     		ldr	r3, .L363
 3885 0066 D3F80031 		ldr	r3, [r3, #256]
 3886 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3887 006e DBB2     		uxtb	r3, r3
 3888 0070 022B     		cmp	r3, #2
 3889 0072 08D1     		bne	.L361
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdTRUE;
 3890              		.loc 1 4558 0
 3891 0074 094B     		ldr	r3, .L363
 3892 0076 D3F80021 		ldr	r2, [r3, #256]
 3893 007a 936D     		ldr	r3, [r2, #88]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 169


 3894 007c 23EA0505 		bic	r5, r3, r5
 3895              	.LVL338:
 3896 0080 9565     		str	r5, [r2, #88]
 3897              	.LVL339:
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3898              		.loc 1 4559 0
 3899 0082 0124     		movs	r4, #1
 3900              	.LVL340:
 3901 0084 00E0     		b	.L360
 3902              	.LVL341:
 3903              	.L361:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3904              		.loc 1 4552 0
 3905 0086 0024     		movs	r4, #0
 3906              	.LVL342:
 3907              	.L360:
4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		}
 3908              		.loc 1 4562 0
 3909 0088 044B     		ldr	r3, .L363
 3910 008a D3F80031 		ldr	r3, [r3, #256]
 3911 008e 0022     		movs	r2, #0
 3912 0090 83F85C20 		strb	r2, [r3, #92]
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3913              		.loc 1 4564 0
 3914 0094 FFF7FEFF 		bl	vPortExitCritical
 3915              	.LVL343:
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3916              		.loc 1 4567 0
 3917 0098 2046     		mov	r0, r4
 3918 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3919              	.LVL344:
 3920              	.L364:
 3921              		.align	2
 3922              	.L363:
 3923 009c 00000000 		.word	.LANCHOR0
 3924 00a0 04ED00E0 		.word	-536810236
 3925              		.cfi_endproc
 3926              	.LFE179:
 3927              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3928              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3929              		.align	2
 3930              		.global	xTaskGenericNotify
 3931              		.thumb
 3932              		.thumb_func
 3933              		.type	xTaskGenericNotify, %function
 3934              	xTaskGenericNotify:
 3935              	.LFB180:
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 3936              		.loc 1 4575 0
 3937              		.cfi_startproc
 3938              		@ args = 0, pretend = 0, frame = 0
 3939              		@ frame_needed = 0, uses_anonymous_args = 0
 3940              	.LVL345:
 3941 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3942              		.cfi_def_cfa_offset 24
 3943              		.cfi_offset 3, -24
 3944              		.cfi_offset 4, -20
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 170


 3945              		.cfi_offset 5, -16
 3946              		.cfi_offset 6, -12
 3947              		.cfi_offset 7, -8
 3948              		.cfi_offset 14, -4
 3949              	.LVL346:
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3950              		.loc 1 4580 0
 3951 0002 40B9     		cbnz	r0, .L366
 3952              	.LBB169:
 3953              	.LBB170:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 3954              		.loc 2 156 0
 3955              		.syntax unified
 3956              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 3957 0004 4FF02003 			mov r3, #32												
 3958 0008 83F31188 		msr basepri, r3											
 3959 000c BFF36F8F 		isb														
 3960 0010 BFF34F8F 		dsb														
 3961              	
 3962              	@ 0 "" 2
 3963              	.LVL347:
 3964              		.thumb
 3965              		.syntax unified
 3966              	.L367:
 3967 0014 FEE7     		b	.L367
 3968              	.LVL348:
 3969              	.L366:
 3970 0016 0446     		mov	r4, r0
 3971 0018 1F46     		mov	r7, r3
 3972 001a 1546     		mov	r5, r2
 3973 001c 0E46     		mov	r6, r1
 3974              	.LVL349:
 3975              	.LBE170:
 3976              	.LBE169:
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 3977              		.loc 1 4583 0
 3978 001e FFF7FEFF 		bl	vPortEnterCritical
 3979              	.LVL350:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3980              		.loc 1 4585 0
 3981 0022 0FB1     		cbz	r7, .L368
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 3982              		.loc 1 4587 0
 3983 0024 A36D     		ldr	r3, [r4, #88]
 3984 0026 3B60     		str	r3, [r7]
 3985              	.L368:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3986              		.loc 1 4590 0
 3987 0028 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3988 002c DBB2     		uxtb	r3, r3
 3989              	.LVL351:
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 3990              		.loc 1 4592 0
 3991 002e 0222     		movs	r2, #2
 3992 0030 84F85C20 		strb	r2, [r4, #92]
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 3993              		.loc 1 4594 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 171


 3994 0034 6A1E     		subs	r2, r5, #1
 3995 0036 032A     		cmp	r2, #3
 3996 0038 15D8     		bhi	.L379
 3997 003a DFE802F0 		tbb	[pc, r2]
 3998              	.L371:
 3999 003e 02       		.byte	(.L370-.L371)/2
 4000 003f 07       		.byte	(.L372-.L371)/2
 4001 0040 0C       		.byte	(.L373-.L371)/2
 4002 0041 0F       		.byte	(.L374-.L371)/2
 4003              		.p2align 1
 4004              	.L370:
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4005              		.loc 1 4597 0
 4006 0042 A26D     		ldr	r2, [r4, #88]
 4007 0044 1643     		orrs	r6, r6, r2
 4008              	.LVL352:
 4009 0046 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4010              		.loc 1 4577 0
 4011 0048 0125     		movs	r5, #1
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4012              		.loc 1 4598 0
 4013 004a 0FE0     		b	.L369
 4014              	.LVL353:
 4015              	.L372:
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4016              		.loc 1 4601 0
 4017 004c A26D     		ldr	r2, [r4, #88]
 4018 004e 0132     		adds	r2, r2, #1
 4019 0050 A265     		str	r2, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4020              		.loc 1 4577 0
 4021 0052 0125     		movs	r5, #1
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4022              		.loc 1 4602 0
 4023 0054 0AE0     		b	.L369
 4024              	.L373:
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4025              		.loc 1 4605 0
 4026 0056 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4027              		.loc 1 4577 0
 4028 0058 0125     		movs	r5, #1
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4029              		.loc 1 4606 0
 4030 005a 07E0     		b	.L369
 4031              	.L374:
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4032              		.loc 1 4609 0
 4033 005c 022B     		cmp	r3, #2
 4034 005e 04D0     		beq	.L380
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4035              		.loc 1 4611 0
 4036 0060 A665     		str	r6, [r4, #88]
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4037              		.loc 1 4577 0
 4038 0062 0125     		movs	r5, #1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 172


 4039 0064 02E0     		b	.L369
 4040              	.L379:
 4041 0066 0125     		movs	r5, #1
 4042 0068 00E0     		b	.L369
 4043              	.L380:
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4044              		.loc 1 4616 0
 4045 006a 0025     		movs	r5, #0
 4046              	.LVL354:
 4047              	.L369:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4048              		.loc 1 4630 0
 4049 006c 012B     		cmp	r3, #1
 4050 006e 2ED1     		bne	.L375
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4051              		.loc 1 4632 0
 4052 0070 261D     		adds	r6, r4, #4
 4053 0072 3046     		mov	r0, r6
 4054 0074 FFF7FEFF 		bl	uxListRemove
 4055              	.LVL355:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4056              		.loc 1 4633 0
 4057 0078 E36A     		ldr	r3, [r4, #44]
 4058 007a 174A     		ldr	r2, .L382
 4059 007c D2F80C21 		ldr	r2, [r2, #268]
 4060 0080 9342     		cmp	r3, r2
 4061 0082 02D9     		bls	.L376
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4062              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4063 0084 144A     		ldr	r2, .L382
 4064 0086 C2F80C31 		str	r3, [r2, #268]
 4065              	.L376:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4066              		.loc 1 4633 0 discriminator 3
 4067 008a 03EB8303 		add	r3, r3, r3, lsl #2
 4068 008e 9A00     		lsls	r2, r3, #2
 4069 0090 3146     		mov	r1, r6
 4070 0092 1248     		ldr	r0, .L382+4
 4071 0094 1044     		add	r0, r0, r2
 4072 0096 FFF7FEFF 		bl	vListInsertEnd
 4073              	.LVL356:
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4074              		.loc 1 4636 0 is_stmt 1 discriminator 3
 4075 009a A36A     		ldr	r3, [r4, #40]
 4076 009c 43B1     		cbz	r3, .L377
 4077              	.LBB171:
 4078              	.LBB172:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4079              		.loc 2 156 0
 4080              		.syntax unified
 4081              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4082 009e 4FF02003 			mov r3, #32												
 4083 00a2 83F31188 		msr basepri, r3											
 4084 00a6 BFF36F8F 		isb														
 4085 00aa BFF34F8F 		dsb														
 4086              	
 4087              	@ 0 "" 2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 173


 4088              	.LVL357:
 4089              		.thumb
 4090              		.syntax unified
 4091              	.L378:
 4092 00ae FEE7     		b	.L378
 4093              	.L377:
 4094              	.LBE172:
 4095              	.LBE171:
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4096              		.loc 1 4654 0
 4097 00b0 E26A     		ldr	r2, [r4, #44]
 4098 00b2 094B     		ldr	r3, .L382
 4099 00b4 D3F80031 		ldr	r3, [r3, #256]
 4100 00b8 DB6A     		ldr	r3, [r3, #44]
 4101 00ba 9A42     		cmp	r2, r3
 4102 00bc 07D9     		bls	.L375
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4103              		.loc 1 4658 0
 4104 00be 4FF08052 		mov	r2, #268435456
 4105 00c2 074B     		ldr	r3, .L382+8
 4106 00c4 1A60     		str	r2, [r3]
 4107              		.syntax unified
 4108              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4109 00c6 BFF34F8F 		dsb
 4110              	@ 0 "" 2
 4111              	@ 4658 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source\tasks.c" 1
 4112 00ca BFF36F8F 		isb
 4113              	@ 0 "" 2
 4114              		.thumb
 4115              		.syntax unified
 4116              	.L375:
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4117              		.loc 1 4670 0
 4118 00ce FFF7FEFF 		bl	vPortExitCritical
 4119              	.LVL358:
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4120              		.loc 1 4673 0
 4121 00d2 2846     		mov	r0, r5
 4122 00d4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4123              	.LVL359:
 4124              	.L383:
 4125 00d6 00BF     		.align	2
 4126              	.L382:
 4127 00d8 00000000 		.word	.LANCHOR0
 4128 00dc 30000000 		.word	.LANCHOR0+48
 4129 00e0 04ED00E0 		.word	-536810236
 4130              		.cfi_endproc
 4131              	.LFE180:
 4132              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 4133              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4134              		.align	2
 4135              		.global	xTaskGenericNotifyFromISR
 4136              		.thumb
 4137              		.thumb_func
 4138              		.type	xTaskGenericNotifyFromISR, %function
 4139              	xTaskGenericNotifyFromISR:
 4140              	.LFB181:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 174


4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4141              		.loc 1 4681 0
 4142              		.cfi_startproc
 4143              		@ args = 4, pretend = 0, frame = 0
 4144              		@ frame_needed = 0, uses_anonymous_args = 0
 4145              	.LVL360:
 4146 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 4147              		.cfi_def_cfa_offset 32
 4148              		.cfi_offset 3, -32
 4149              		.cfi_offset 4, -28
 4150              		.cfi_offset 5, -24
 4151              		.cfi_offset 6, -20
 4152              		.cfi_offset 7, -16
 4153              		.cfi_offset 8, -12
 4154              		.cfi_offset 9, -8
 4155              		.cfi_offset 14, -4
 4156 0004 089E     		ldr	r6, [sp, #32]
 4157              	.LVL361:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4158              		.loc 1 4687 0
 4159 0006 40B9     		cbnz	r0, .L385
 4160              	.LBB173:
 4161              	.LBB174:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4162              		.loc 2 156 0
 4163              		.syntax unified
 4164              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4165 0008 4FF02003 			mov r3, #32												
 4166 000c 83F31188 		msr basepri, r3											
 4167 0010 BFF36F8F 		isb														
 4168 0014 BFF34F8F 		dsb														
 4169              	
 4170              	@ 0 "" 2
 4171              	.LVL362:
 4172              		.thumb
 4173              		.syntax unified
 4174              	.L386:
 4175 0018 FEE7     		b	.L386
 4176              	.LVL363:
 4177              	.L385:
 4178 001a 0446     		mov	r4, r0
 4179 001c 9946     		mov	r9, r3
 4180 001e 1546     		mov	r5, r2
 4181 0020 8846     		mov	r8, r1
 4182              	.LBE174:
 4183              	.LBE173:
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4184              		.loc 1 4705 0
 4185 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
 4186              	.LVL364:
 4187              	.LBB175:
 4188              	.LBB176:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4189              		.loc 2 172 0
 4190              		.syntax unified
 4191              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4192 0026 EFF31187 			mrs r7, basepri											
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 175


 4193 002a 4FF02003 		mov r3, #32												
 4194 002e 83F31188 		msr basepri, r3											
 4195 0032 BFF36F8F 		isb														
 4196 0036 BFF34F8F 		dsb														
 4197              	
 4198              	@ 0 "" 2
 4199              		.thumb
 4200              		.syntax unified
 4201              	.LBE176:
 4202              	.LBE175:
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4203              		.loc 1 4711 0
 4204 003a B9F1000F 		cmp	r9, #0
 4205 003e 02D0     		beq	.L387
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4206              		.loc 1 4713 0
 4207 0040 A36D     		ldr	r3, [r4, #88]
 4208 0042 C9F80030 		str	r3, [r9]
 4209              	.L387:
4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4210              		.loc 1 4716 0
 4211 0046 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4212 004a DBB2     		uxtb	r3, r3
 4213              	.LVL365:
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4214              		.loc 1 4717 0
 4215 004c 0222     		movs	r2, #2
 4216 004e 84F85C20 		strb	r2, [r4, #92]
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4217              		.loc 1 4719 0
 4218 0052 6A1E     		subs	r2, r5, #1
 4219 0054 032A     		cmp	r2, #3
 4220 0056 18D8     		bhi	.L401
 4221 0058 DFE802F0 		tbb	[pc, r2]
 4222              	.L390:
 4223 005c 02       		.byte	(.L389-.L390)/2
 4224 005d 08       		.byte	(.L391-.L390)/2
 4225 005e 0D       		.byte	(.L392-.L390)/2
 4226 005f 11       		.byte	(.L393-.L390)/2
 4227              		.p2align 1
 4228              	.L389:
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4229              		.loc 1 4722 0
 4230 0060 A26D     		ldr	r2, [r4, #88]
 4231 0062 42EA0802 		orr	r2, r2, r8
 4232 0066 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4233              		.loc 1 4684 0
 4234 0068 0125     		movs	r5, #1
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4235              		.loc 1 4723 0
 4236 006a 11E0     		b	.L388
 4237              	.L391:
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4238              		.loc 1 4726 0
 4239 006c A26D     		ldr	r2, [r4, #88]
 4240 006e 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 176


 4241 0070 A265     		str	r2, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4242              		.loc 1 4684 0
 4243 0072 0125     		movs	r5, #1
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4244              		.loc 1 4727 0
 4245 0074 0CE0     		b	.L388
 4246              	.L392:
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					break;
 4247              		.loc 1 4730 0
 4248 0076 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4249              		.loc 1 4684 0
 4250 007a 0125     		movs	r5, #1
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4251              		.loc 1 4731 0
 4252 007c 08E0     		b	.L388
 4253              	.L393:
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4254              		.loc 1 4734 0
 4255 007e 022B     		cmp	r3, #2
 4256 0080 05D0     		beq	.L402
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4257              		.loc 1 4736 0
 4258 0082 C4F85880 		str	r8, [r4, #88]
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4259              		.loc 1 4684 0
 4260 0086 0125     		movs	r5, #1
 4261 0088 02E0     		b	.L388
 4262              	.L401:
 4263 008a 0125     		movs	r5, #1
 4264 008c 00E0     		b	.L388
 4265              	.L402:
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4266              		.loc 1 4741 0
 4267 008e 0025     		movs	r5, #0
 4268              	.L388:
 4269              	.LVL366:
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4270              		.loc 1 4755 0
 4271 0090 012B     		cmp	r3, #1
 4272 0092 39D1     		bne	.L394
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4273              		.loc 1 4758 0
 4274 0094 A36A     		ldr	r3, [r4, #40]
 4275              	.LVL367:
 4276 0096 43B1     		cbz	r3, .L395
 4277              	.LBB177:
 4278              	.LBB178:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4279              		.loc 2 156 0
 4280              		.syntax unified
 4281              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4282 0098 4FF02003 			mov r3, #32												
 4283 009c 83F31188 		msr basepri, r3											
 4284 00a0 BFF36F8F 		isb														
 4285 00a4 BFF34F8F 		dsb														
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 177


 4286              	
 4287              	@ 0 "" 2
 4288              	.LVL368:
 4289              		.thumb
 4290              		.syntax unified
 4291              	.L396:
 4292 00a8 FEE7     		b	.L396
 4293              	.L395:
 4294              	.LBE178:
 4295              	.LBE177:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4296              		.loc 1 4760 0
 4297 00aa 1A4B     		ldr	r3, .L404
 4298 00ac D3F81831 		ldr	r3, [r3, #280]
 4299 00b0 B3B9     		cbnz	r3, .L397
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4300              		.loc 1 4762 0
 4301 00b2 04F10408 		add	r8, r4, #4
 4302              	.LVL369:
 4303 00b6 4046     		mov	r0, r8
 4304 00b8 FFF7FEFF 		bl	uxListRemove
 4305              	.LVL370:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4306              		.loc 1 4763 0
 4307 00bc E36A     		ldr	r3, [r4, #44]
 4308 00be 154A     		ldr	r2, .L404
 4309 00c0 D2F80C21 		ldr	r2, [r2, #268]
 4310 00c4 9342     		cmp	r3, r2
 4311 00c6 02D9     		bls	.L398
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4312              		.loc 1 4763 0 is_stmt 0 discriminator 1
 4313 00c8 124A     		ldr	r2, .L404
 4314 00ca C2F80C31 		str	r3, [r2, #268]
 4315              	.L398:
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4316              		.loc 1 4763 0 discriminator 3
 4317 00ce 03EB8303 		add	r3, r3, r3, lsl #2
 4318 00d2 9A00     		lsls	r2, r3, #2
 4319 00d4 4146     		mov	r1, r8
 4320 00d6 1048     		ldr	r0, .L404+4
 4321 00d8 1044     		add	r0, r0, r2
 4322 00da FFF7FEFF 		bl	vListInsertEnd
 4323              	.LVL371:
 4324 00de 04E0     		b	.L399
 4325              	.LVL372:
 4326              	.L397:
4769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4327              		.loc 1 4769 0 is_stmt 1
 4328 00e0 04F11801 		add	r1, r4, #24
 4329 00e4 0D48     		ldr	r0, .L404+8
 4330 00e6 FFF7FEFF 		bl	vListInsertEnd
 4331              	.LVL373:
 4332              	.L399:
4772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4333              		.loc 1 4772 0
 4334 00ea E26A     		ldr	r2, [r4, #44]
 4335 00ec 094B     		ldr	r3, .L404
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 178


 4336 00ee D3F80031 		ldr	r3, [r3, #256]
 4337 00f2 DB6A     		ldr	r3, [r3, #44]
 4338 00f4 9A42     		cmp	r2, r3
 4339 00f6 07D9     		bls	.L394
4776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4340              		.loc 1 4776 0
 4341 00f8 16B1     		cbz	r6, .L400
4778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4342              		.loc 1 4778 0
 4343 00fa 0123     		movs	r3, #1
 4344 00fc 3360     		str	r3, [r6]
 4345 00fe 03E0     		b	.L394
 4346              	.L400:
4785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4347              		.loc 1 4785 0
 4348 0100 0122     		movs	r2, #1
 4349 0102 044B     		ldr	r3, .L404
 4350 0104 C3F82821 		str	r2, [r3, #296]
 4351              	.L394:
 4352              	.LVL374:
 4353              	.LBB179:
 4354              	.LBB180:
 4355              		.loc 2 190 0
 4356              		.syntax unified
 4357              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4358 0108 87F31188 			msr basepri, r7	
 4359              	@ 0 "" 2
 4360              	.LVL375:
 4361              		.thumb
 4362              		.syntax unified
 4363              	.LBE180:
 4364              	.LBE179:
4797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4365              		.loc 1 4797 0
 4366 010c 2846     		mov	r0, r5
 4367 010e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4368              	.LVL376:
 4369              	.L405:
 4370 0112 00BF     		.align	2
 4371              	.L404:
 4372 0114 00000000 		.word	.LANCHOR0
 4373 0118 30000000 		.word	.LANCHOR0+48
 4374 011c 14000000 		.word	.LANCHOR0+20
 4375              		.cfi_endproc
 4376              	.LFE181:
 4377              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4378              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4379              		.align	2
 4380              		.global	vTaskNotifyGiveFromISR
 4381              		.thumb
 4382              		.thumb_func
 4383              		.type	vTaskNotifyGiveFromISR, %function
 4384              	vTaskNotifyGiveFromISR:
 4385              	.LFB182:
4805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t * pxTCB;
 4386              		.loc 1 4805 0
 4387              		.cfi_startproc
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 179


 4388              		@ args = 0, pretend = 0, frame = 0
 4389              		@ frame_needed = 0, uses_anonymous_args = 0
 4390              	.LVL377:
 4391 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4392              		.cfi_def_cfa_offset 24
 4393              		.cfi_offset 3, -24
 4394              		.cfi_offset 4, -20
 4395              		.cfi_offset 5, -16
 4396              		.cfi_offset 6, -12
 4397              		.cfi_offset 7, -8
 4398              		.cfi_offset 14, -4
4810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4399              		.loc 1 4810 0
 4400 0002 40B9     		cbnz	r0, .L407
 4401              	.LBB181:
 4402              	.LBB182:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4403              		.loc 2 156 0
 4404              		.syntax unified
 4405              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4406 0004 4FF02003 			mov r3, #32												
 4407 0008 83F31188 		msr basepri, r3											
 4408 000c BFF36F8F 		isb														
 4409 0010 BFF34F8F 		dsb														
 4410              	
 4411              	@ 0 "" 2
 4412              	.LVL378:
 4413              		.thumb
 4414              		.syntax unified
 4415              	.L408:
 4416 0014 FEE7     		b	.L408
 4417              	.L407:
 4418 0016 0446     		mov	r4, r0
 4419 0018 0D46     		mov	r5, r1
 4420              	.LBE182:
 4421              	.LBE181:
4828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4422              		.loc 1 4828 0
 4423 001a FFF7FEFF 		bl	vPortValidateInterruptPriority
 4424              	.LVL379:
 4425              	.LBB183:
 4426              	.LBB184:
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4427              		.loc 2 172 0
 4428              		.syntax unified
 4429              	@ 172 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4430 001e EFF31186 			mrs r6, basepri											
 4431 0022 4FF02003 		mov r3, #32												
 4432 0026 83F31188 		msr basepri, r3											
 4433 002a BFF36F8F 		isb														
 4434 002e BFF34F8F 		dsb														
 4435              	
 4436              	@ 0 "" 2
 4437              		.thumb
 4438              		.syntax unified
 4439              	.LBE184:
 4440              	.LBE183:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 180


4834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4441              		.loc 1 4834 0
 4442 0032 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4443 0036 DBB2     		uxtb	r3, r3
 4444              	.LVL380:
4835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4445              		.loc 1 4835 0
 4446 0038 0222     		movs	r2, #2
 4447 003a 84F85C20 		strb	r2, [r4, #92]
4839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4448              		.loc 1 4839 0
 4449 003e A26D     		ldr	r2, [r4, #88]
 4450 0040 0132     		adds	r2, r2, #1
 4451 0042 A265     		str	r2, [r4, #88]
4845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4452              		.loc 1 4845 0
 4453 0044 012B     		cmp	r3, #1
 4454 0046 38D1     		bne	.L409
4848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4455              		.loc 1 4848 0
 4456 0048 A36A     		ldr	r3, [r4, #40]
 4457              	.LVL381:
 4458 004a 43B1     		cbz	r3, .L410
 4459              	.LBB185:
 4460              	.LBB186:
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h **** 	(
 4461              		.loc 2 156 0
 4462              		.syntax unified
 4463              	@ 156 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4464 004c 4FF02003 			mov r3, #32												
 4465 0050 83F31188 		msr basepri, r3											
 4466 0054 BFF36F8F 		isb														
 4467 0058 BFF34F8F 		dsb														
 4468              	
 4469              	@ 0 "" 2
 4470              	.LVL382:
 4471              		.thumb
 4472              		.syntax unified
 4473              	.L411:
 4474 005c FEE7     		b	.L411
 4475              	.L410:
 4476              	.LBE186:
 4477              	.LBE185:
4850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4478              		.loc 1 4850 0
 4479 005e 184B     		ldr	r3, .L417
 4480 0060 D3F81831 		ldr	r3, [r3, #280]
 4481 0064 ABB9     		cbnz	r3, .L412
4852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4482              		.loc 1 4852 0
 4483 0066 271D     		adds	r7, r4, #4
 4484 0068 3846     		mov	r0, r7
 4485 006a FFF7FEFF 		bl	uxListRemove
 4486              	.LVL383:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4487              		.loc 1 4853 0
 4488 006e E36A     		ldr	r3, [r4, #44]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 181


 4489 0070 134A     		ldr	r2, .L417
 4490 0072 D2F80C21 		ldr	r2, [r2, #268]
 4491 0076 9342     		cmp	r3, r2
 4492 0078 02D9     		bls	.L413
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4493              		.loc 1 4853 0 is_stmt 0 discriminator 1
 4494 007a 114A     		ldr	r2, .L417
 4495 007c C2F80C31 		str	r3, [r2, #268]
 4496              	.L413:
4853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4497              		.loc 1 4853 0 discriminator 3
 4498 0080 03EB8303 		add	r3, r3, r3, lsl #2
 4499 0084 9A00     		lsls	r2, r3, #2
 4500 0086 3946     		mov	r1, r7
 4501 0088 0E48     		ldr	r0, .L417+4
 4502 008a 1044     		add	r0, r0, r2
 4503 008c FFF7FEFF 		bl	vListInsertEnd
 4504              	.LVL384:
 4505 0090 04E0     		b	.L414
 4506              	.L412:
4859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				}
 4507              		.loc 1 4859 0 is_stmt 1
 4508 0092 04F11801 		add	r1, r4, #24
 4509 0096 0C48     		ldr	r0, .L417+8
 4510 0098 FFF7FEFF 		bl	vListInsertEnd
 4511              	.LVL385:
 4512              	.L414:
4862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				{
 4513              		.loc 1 4862 0
 4514 009c E26A     		ldr	r2, [r4, #44]
 4515 009e 084B     		ldr	r3, .L417
 4516 00a0 D3F80031 		ldr	r3, [r3, #256]
 4517 00a4 DB6A     		ldr	r3, [r3, #44]
 4518 00a6 9A42     		cmp	r2, r3
 4519 00a8 07D9     		bls	.L409
4866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					{
 4520              		.loc 1 4866 0
 4521 00aa 15B1     		cbz	r5, .L415
4868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4522              		.loc 1 4868 0
 4523 00ac 0123     		movs	r3, #1
 4524 00ae 2B60     		str	r3, [r5]
 4525 00b0 03E0     		b	.L409
 4526              	.L415:
4875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 					}
 4527              		.loc 1 4875 0
 4528 00b2 0122     		movs	r2, #1
 4529 00b4 024B     		ldr	r3, .L417
 4530 00b6 C3F82821 		str	r2, [r3, #296]
 4531              	.L409:
 4532              	.LVL386:
 4533              	.LBB187:
 4534              	.LBB188:
 4535              		.loc 2 190 0
 4536              		.syntax unified
 4537              	@ 190 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/10.0.1/Source/portable/GCC/CM4F/portmacro.h" 1
 4538 00ba 86F31188 			msr basepri, r6	
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 182


 4539              	@ 0 "" 2
 4540              	.LVL387:
 4541              		.thumb
 4542              		.syntax unified
 4543 00be F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4544              	.LVL388:
 4545              	.L418:
 4546              		.align	2
 4547              	.L417:
 4548 00c0 00000000 		.word	.LANCHOR0
 4549 00c4 30000000 		.word	.LANCHOR0+48
 4550 00c8 14000000 		.word	.LANCHOR0+20
 4551              	.LBE188:
 4552              	.LBE187:
 4553              		.cfi_endproc
 4554              	.LFE182:
 4555              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4556              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4557              		.align	2
 4558              		.global	xTaskNotifyStateClear
 4559              		.thumb
 4560              		.thumb_func
 4561              		.type	xTaskNotifyStateClear, %function
 4562              	xTaskNotifyStateClear:
 4563              	.LFB183:
4894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 	TCB_t *pxTCB;
 4564              		.loc 1 4894 0
 4565              		.cfi_startproc
 4566              		@ args = 0, pretend = 0, frame = 0
 4567              		@ frame_needed = 0, uses_anonymous_args = 0
 4568              	.LVL389:
 4569 0000 10B5     		push	{r4, lr}
 4570              		.cfi_def_cfa_offset 8
 4571              		.cfi_offset 4, -8
 4572              		.cfi_offset 14, -4
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4573              		.loc 1 4900 0
 4574 0002 0446     		mov	r4, r0
 4575 0004 10B9     		cbnz	r0, .L420
4900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4576              		.loc 1 4900 0 is_stmt 0 discriminator 1
 4577 0006 0A4B     		ldr	r3, .L424
 4578 0008 D3F80041 		ldr	r4, [r3, #256]
 4579              	.LVL390:
 4580              	.L420:
4902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 		{
 4581              		.loc 1 4902 0 is_stmt 1 discriminator 4
 4582 000c FFF7FEFF 		bl	vPortEnterCritical
 4583              	.LVL391:
4904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			{
 4584              		.loc 1 4904 0 discriminator 4
 4585 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4586 0014 DBB2     		uxtb	r3, r3
 4587 0016 022B     		cmp	r3, #2
 4588 0018 04D1     		bne	.L422
4906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 				xReturn = pdPASS;
 4589              		.loc 1 4906 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 183


 4590 001a 0023     		movs	r3, #0
 4591 001c 84F85C30 		strb	r3, [r4, #92]
 4592              	.LVL392:
4907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4593              		.loc 1 4907 0
 4594 0020 0124     		movs	r4, #1
 4595              	.LVL393:
 4596 0022 00E0     		b	.L421
 4597              	.LVL394:
 4598              	.L422:
4911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 			}
 4599              		.loc 1 4911 0
 4600 0024 0024     		movs	r4, #0
 4601              	.LVL395:
 4602              	.L421:
4914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4603              		.loc 1 4914 0
 4604 0026 FFF7FEFF 		bl	vPortExitCritical
 4605              	.LVL396:
4917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\10.0.1\Source/tasks.c **** 
 4606              		.loc 1 4917 0
 4607 002a 2046     		mov	r0, r4
 4608 002c 10BD     		pop	{r4, pc}
 4609              	.LVL397:
 4610              	.L425:
 4611 002e 00BF     		.align	2
 4612              	.L424:
 4613 0030 00000000 		.word	.LANCHOR0
 4614              		.cfi_endproc
 4615              	.LFE183:
 4616              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4617              		.global	pxCurrentTCB
 4618              		.section	.rodata.str1.4,"aMS",%progbits,1
 4619              		.align	2
 4620              	.LC0:
 4621 0000 49444C45 		.ascii	"IDLE\000"
 4621      00
 4622              		.bss
 4623              		.align	2
 4624              		.set	.LANCHOR0,. + 0
 4625              		.type	xSuspendedTaskList, %object
 4626              		.size	xSuspendedTaskList, 20
 4627              	xSuspendedTaskList:
 4628 0000 00000000 		.space	20
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4628      00000000 
 4629              		.type	xPendingReadyList, %object
 4630              		.size	xPendingReadyList, 20
 4631              	xPendingReadyList:
 4632 0014 00000000 		.space	20
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4632      00000000 
 4633              		.type	pxDelayedTaskList, %object
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 184


 4634              		.size	pxDelayedTaskList, 4
 4635              	pxDelayedTaskList:
 4636 0028 00000000 		.space	4
 4637              		.type	xNextTaskUnblockTime, %object
 4638              		.size	xNextTaskUnblockTime, 4
 4639              	xNextTaskUnblockTime:
 4640 002c 00000000 		.space	4
 4641              		.type	pxReadyTasksLists, %object
 4642              		.size	pxReadyTasksLists, 140
 4643              	pxReadyTasksLists:
 4644 0030 00000000 		.space	140
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4644      00000000 
 4645              		.type	xDelayedTaskList1, %object
 4646              		.size	xDelayedTaskList1, 20
 4647              	xDelayedTaskList1:
 4648 00bc 00000000 		.space	20
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4648      00000000 
 4649              		.type	xDelayedTaskList2, %object
 4650              		.size	xDelayedTaskList2, 20
 4651              	xDelayedTaskList2:
 4652 00d0 00000000 		.space	20
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4652      00000000 
 4653              		.type	xTasksWaitingTermination, %object
 4654              		.size	xTasksWaitingTermination, 20
 4655              	xTasksWaitingTermination:
 4656 00e4 00000000 		.space	20
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4656      00000000 
 4657              		.type	pxOverflowDelayedTaskList, %object
 4658              		.size	pxOverflowDelayedTaskList, 4
 4659              	pxOverflowDelayedTaskList:
 4660 00f8 00000000 		.space	4
 4661              		.type	uxCurrentNumberOfTasks, %object
 4662              		.size	uxCurrentNumberOfTasks, 4
 4663              	uxCurrentNumberOfTasks:
 4664 00fc 00000000 		.space	4
 4665              		.type	pxCurrentTCB, %object
 4666              		.size	pxCurrentTCB, 4
 4667              	pxCurrentTCB:
 4668 0100 00000000 		.space	4
 4669              		.type	xSchedulerRunning, %object
 4670              		.size	xSchedulerRunning, 4
 4671              	xSchedulerRunning:
 4672 0104 00000000 		.space	4
 4673              		.type	uxTaskNumber, %object
 4674              		.size	uxTaskNumber, 4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 185


 4675              	uxTaskNumber:
 4676 0108 00000000 		.space	4
 4677              		.type	uxTopReadyPriority, %object
 4678              		.size	uxTopReadyPriority, 4
 4679              	uxTopReadyPriority:
 4680 010c 00000000 		.space	4
 4681              		.type	uxDeletedTasksWaitingCleanUp, %object
 4682              		.size	uxDeletedTasksWaitingCleanUp, 4
 4683              	uxDeletedTasksWaitingCleanUp:
 4684 0110 00000000 		.space	4
 4685              		.type	xTickCount, %object
 4686              		.size	xTickCount, 4
 4687              	xTickCount:
 4688 0114 00000000 		.space	4
 4689              		.type	uxSchedulerSuspended, %object
 4690              		.size	uxSchedulerSuspended, 4
 4691              	uxSchedulerSuspended:
 4692 0118 00000000 		.space	4
 4693              		.type	xIdleTaskHandle, %object
 4694              		.size	xIdleTaskHandle, 4
 4695              	xIdleTaskHandle:
 4696 011c 00000000 		.space	4
 4697              		.type	xNumOfOverflows, %object
 4698              		.size	xNumOfOverflows, 4
 4699              	xNumOfOverflows:
 4700 0120 00000000 		.space	4
 4701              		.type	uxPendedTicks, %object
 4702              		.size	uxPendedTicks, 4
 4703              	uxPendedTicks:
 4704 0124 00000000 		.space	4
 4705              		.type	xYieldPending, %object
 4706              		.size	xYieldPending, 4
 4707              	xYieldPending:
 4708 0128 00000000 		.space	4
 4709              		.text
 4710              	.Letext0:
 4711              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4712              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4713              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 4714              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/projdefs.h"
 4715              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/list.h"
 4716              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/task.h"
 4717              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4718              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/portable.h"
 4719              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 4720              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/10.0.1/Source/include/timers.h"
 4721              		.section	.debug_info,"",%progbits
 4722              	.Ldebug_info0:
 4723 0000 B0220000 		.4byte	0x22b0
 4724 0004 0400     		.2byte	0x4
 4725 0006 00000000 		.4byte	.Ldebug_abbrev0
 4726 000a 04       		.byte	0x4
 4727 000b 01       		.uleb128 0x1
 4728 000c A9080000 		.4byte	.LASF221
 4729 0010 0C       		.byte	0xc
 4730 0011 7A050000 		.4byte	.LASF222
 4731 0015 F5010000 		.4byte	.LASF223
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 186


 4732 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4733 001d 00000000 		.4byte	0
 4734 0021 00000000 		.4byte	.Ldebug_line0
 4735 0025 02       		.uleb128 0x2
 4736 0026 4D000000 		.4byte	.LASF4
 4737 002a 03       		.byte	0x3
 4738 002b D8       		.byte	0xd8
 4739 002c 30000000 		.4byte	0x30
 4740 0030 03       		.uleb128 0x3
 4741 0031 04       		.byte	0x4
 4742 0032 07       		.byte	0x7
 4743 0033 CD0B0000 		.4byte	.LASF0
 4744 0037 04       		.uleb128 0x4
 4745 0038 04       		.byte	0x4
 4746 0039 05       		.byte	0x5
 4747 003a 696E7400 		.ascii	"int\000"
 4748 003e 03       		.uleb128 0x3
 4749 003f 08       		.byte	0x8
 4750 0040 05       		.byte	0x5
 4751 0041 3D020000 		.4byte	.LASF1
 4752 0045 03       		.uleb128 0x3
 4753 0046 08       		.byte	0x8
 4754 0047 04       		.byte	0x4
 4755 0048 590B0000 		.4byte	.LASF2
 4756 004c 03       		.uleb128 0x3
 4757 004d 01       		.byte	0x1
 4758 004e 06       		.byte	0x6
 4759 004f CE000000 		.4byte	.LASF3
 4760 0053 02       		.uleb128 0x2
 4761 0054 DA000000 		.4byte	.LASF5
 4762 0058 04       		.byte	0x4
 4763 0059 1D       		.byte	0x1d
 4764 005a 5E000000 		.4byte	0x5e
 4765 005e 03       		.uleb128 0x3
 4766 005f 01       		.byte	0x1
 4767 0060 08       		.byte	0x8
 4768 0061 B8090000 		.4byte	.LASF6
 4769 0065 03       		.uleb128 0x3
 4770 0066 02       		.byte	0x2
 4771 0067 05       		.byte	0x5
 4772 0068 F2090000 		.4byte	.LASF7
 4773 006c 02       		.uleb128 0x2
 4774 006d DA0B0000 		.4byte	.LASF8
 4775 0071 04       		.byte	0x4
 4776 0072 2B       		.byte	0x2b
 4777 0073 77000000 		.4byte	0x77
 4778 0077 03       		.uleb128 0x3
 4779 0078 02       		.byte	0x2
 4780 0079 07       		.byte	0x7
 4781 007a 1A060000 		.4byte	.LASF9
 4782 007e 02       		.uleb128 0x2
 4783 007f 2D0C0000 		.4byte	.LASF10
 4784 0083 04       		.byte	0x4
 4785 0084 3F       		.byte	0x3f
 4786 0085 89000000 		.4byte	0x89
 4787 0089 03       		.uleb128 0x3
 4788 008a 04       		.byte	0x4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 187


 4789 008b 05       		.byte	0x5
 4790 008c 1C010000 		.4byte	.LASF11
 4791 0090 02       		.uleb128 0x2
 4792 0091 B7040000 		.4byte	.LASF12
 4793 0095 04       		.byte	0x4
 4794 0096 41       		.byte	0x41
 4795 0097 9B000000 		.4byte	0x9b
 4796 009b 03       		.uleb128 0x3
 4797 009c 04       		.byte	0x4
 4798 009d 07       		.byte	0x7
 4799 009e 68050000 		.4byte	.LASF13
 4800 00a2 03       		.uleb128 0x3
 4801 00a3 08       		.byte	0x8
 4802 00a4 07       		.byte	0x7
 4803 00a5 48010000 		.4byte	.LASF14
 4804 00a9 03       		.uleb128 0x3
 4805 00aa 04       		.byte	0x4
 4806 00ab 07       		.byte	0x7
 4807 00ac D90D0000 		.4byte	.LASF15
 4808 00b0 05       		.uleb128 0x5
 4809 00b1 04       		.byte	0x4
 4810 00b2 06       		.uleb128 0x6
 4811 00b3 04       		.byte	0x4
 4812 00b4 B8000000 		.4byte	0xb8
 4813 00b8 03       		.uleb128 0x3
 4814 00b9 01       		.byte	0x1
 4815 00ba 08       		.byte	0x8
 4816 00bb 840B0000 		.4byte	.LASF16
 4817 00bf 06       		.uleb128 0x6
 4818 00c0 04       		.byte	0x4
 4819 00c1 C5000000 		.4byte	0xc5
 4820 00c5 07       		.uleb128 0x7
 4821 00c6 B8000000 		.4byte	0xb8
 4822 00ca 02       		.uleb128 0x2
 4823 00cb A90D0000 		.4byte	.LASF17
 4824 00cf 05       		.byte	0x5
 4825 00d0 18       		.byte	0x18
 4826 00d1 53000000 		.4byte	0x53
 4827 00d5 02       		.uleb128 0x2
 4828 00d6 CA030000 		.4byte	.LASF18
 4829 00da 05       		.byte	0x5
 4830 00db 24       		.byte	0x24
 4831 00dc 6C000000 		.4byte	0x6c
 4832 00e0 02       		.uleb128 0x2
 4833 00e1 C7050000 		.4byte	.LASF19
 4834 00e5 05       		.byte	0x5
 4835 00e6 2C       		.byte	0x2c
 4836 00e7 7E000000 		.4byte	0x7e
 4837 00eb 02       		.uleb128 0x2
 4838 00ec 340B0000 		.4byte	.LASF20
 4839 00f0 05       		.byte	0x5
 4840 00f1 30       		.byte	0x30
 4841 00f2 90000000 		.4byte	0x90
 4842 00f6 08       		.uleb128 0x8
 4843 00f7 EB000000 		.4byte	0xeb
 4844 00fb 08       		.uleb128 0x8
 4845 00fc CA000000 		.4byte	0xca
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 188


 4846 0100 03       		.uleb128 0x3
 4847 0101 04       		.byte	0x4
 4848 0102 04       		.byte	0x4
 4849 0103 64090000 		.4byte	.LASF21
 4850 0107 03       		.uleb128 0x3
 4851 0108 08       		.byte	0x8
 4852 0109 04       		.byte	0x4
 4853 010a D3030000 		.4byte	.LASF22
 4854 010e 02       		.uleb128 0x2
 4855 010f 670A0000 		.4byte	.LASF23
 4856 0113 06       		.byte	0x6
 4857 0114 23       		.byte	0x23
 4858 0115 19010000 		.4byte	0x119
 4859 0119 06       		.uleb128 0x6
 4860 011a 04       		.byte	0x4
 4861 011b 1F010000 		.4byte	0x11f
 4862 011f 09       		.uleb128 0x9
 4863 0120 2A010000 		.4byte	0x12a
 4864 0124 0A       		.uleb128 0xa
 4865 0125 B0000000 		.4byte	0xb0
 4866 0129 00       		.byte	0
 4867 012a 02       		.uleb128 0x2
 4868 012b 2D060000 		.4byte	.LASF24
 4869 012f 02       		.byte	0x2
 4870 0130 37       		.byte	0x37
 4871 0131 EB000000 		.4byte	0xeb
 4872 0135 02       		.uleb128 0x2
 4873 0136 F0030000 		.4byte	.LASF25
 4874 013a 02       		.byte	0x2
 4875 013b 38       		.byte	0x38
 4876 013c 89000000 		.4byte	0x89
 4877 0140 02       		.uleb128 0x2
 4878 0141 BF0E0000 		.4byte	.LASF26
 4879 0145 02       		.byte	0x2
 4880 0146 39       		.byte	0x39
 4881 0147 9B000000 		.4byte	0x9b
 4882 014b 02       		.uleb128 0x2
 4883 014c 89030000 		.4byte	.LASF27
 4884 0150 02       		.byte	0x2
 4885 0151 3F       		.byte	0x3f
 4886 0152 EB000000 		.4byte	0xeb
 4887 0156 0B       		.uleb128 0xb
 4888 0157 B0000000 		.4byte	0xb0
 4889 015b 66010000 		.4byte	0x166
 4890 015f 0C       		.uleb128 0xc
 4891 0160 A9000000 		.4byte	0xa9
 4892 0164 04       		.byte	0x4
 4893 0165 00       		.byte	0
 4894 0166 0D       		.uleb128 0xd
 4895 0167 320E0000 		.4byte	.LASF34
 4896 016b 14       		.byte	0x14
 4897 016c 07       		.byte	0x7
 4898 016d 8B       		.byte	0x8b
 4899 016e AF010000 		.4byte	0x1af
 4900 0172 0E       		.uleb128 0xe
 4901 0173 C20B0000 		.4byte	.LASF28
 4902 0177 07       		.byte	0x7
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 189


 4903 0178 8E       		.byte	0x8e
 4904 0179 4B010000 		.4byte	0x14b
 4905 017d 00       		.byte	0
 4906 017e 0E       		.uleb128 0xe
 4907 017f E20D0000 		.4byte	.LASF29
 4908 0183 07       		.byte	0x7
 4909 0184 8F       		.byte	0x8f
 4910 0185 AF010000 		.4byte	0x1af
 4911 0189 04       		.byte	0x4
 4912 018a 0E       		.uleb128 0xe
 4913 018b 90080000 		.4byte	.LASF30
 4914 018f 07       		.byte	0x7
 4915 0190 90       		.byte	0x90
 4916 0191 AF010000 		.4byte	0x1af
 4917 0195 08       		.byte	0x8
 4918 0196 0E       		.uleb128 0xe
 4919 0197 F9040000 		.4byte	.LASF31
 4920 019b 07       		.byte	0x7
 4921 019c 91       		.byte	0x91
 4922 019d B0000000 		.4byte	0xb0
 4923 01a1 0C       		.byte	0xc
 4924 01a2 0E       		.uleb128 0xe
 4925 01a3 83090000 		.4byte	.LASF32
 4926 01a7 07       		.byte	0x7
 4927 01a8 92       		.byte	0x92
 4928 01a9 B0000000 		.4byte	0xb0
 4929 01ad 10       		.byte	0x10
 4930 01ae 00       		.byte	0
 4931 01af 06       		.uleb128 0x6
 4932 01b0 04       		.byte	0x4
 4933 01b1 66010000 		.4byte	0x166
 4934 01b5 02       		.uleb128 0x2
 4935 01b6 62080000 		.4byte	.LASF33
 4936 01ba 07       		.byte	0x7
 4937 01bb 95       		.byte	0x95
 4938 01bc 66010000 		.4byte	0x166
 4939 01c0 0D       		.uleb128 0xd
 4940 01c1 C1010000 		.4byte	.LASF35
 4941 01c5 0C       		.byte	0xc
 4942 01c6 07       		.byte	0x7
 4943 01c7 97       		.byte	0x97
 4944 01c8 F1010000 		.4byte	0x1f1
 4945 01cc 0E       		.uleb128 0xe
 4946 01cd C20B0000 		.4byte	.LASF28
 4947 01d1 07       		.byte	0x7
 4948 01d2 9A       		.byte	0x9a
 4949 01d3 4B010000 		.4byte	0x14b
 4950 01d7 00       		.byte	0
 4951 01d8 0E       		.uleb128 0xe
 4952 01d9 E20D0000 		.4byte	.LASF29
 4953 01dd 07       		.byte	0x7
 4954 01de 9B       		.byte	0x9b
 4955 01df AF010000 		.4byte	0x1af
 4956 01e3 04       		.byte	0x4
 4957 01e4 0E       		.uleb128 0xe
 4958 01e5 90080000 		.4byte	.LASF30
 4959 01e9 07       		.byte	0x7
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 190


 4960 01ea 9C       		.byte	0x9c
 4961 01eb AF010000 		.4byte	0x1af
 4962 01ef 08       		.byte	0x8
 4963 01f0 00       		.byte	0
 4964 01f1 02       		.uleb128 0x2
 4965 01f2 54000000 		.4byte	.LASF36
 4966 01f6 07       		.byte	0x7
 4967 01f7 9E       		.byte	0x9e
 4968 01f8 C0010000 		.4byte	0x1c0
 4969 01fc 0D       		.uleb128 0xd
 4970 01fd 760A0000 		.4byte	.LASF37
 4971 0201 14       		.byte	0x14
 4972 0202 07       		.byte	0x7
 4973 0203 A3       		.byte	0xa3
 4974 0204 2D020000 		.4byte	0x22d
 4975 0208 0E       		.uleb128 0xe
 4976 0209 58050000 		.4byte	.LASF38
 4977 020d 07       		.byte	0x7
 4978 020e A6       		.byte	0xa6
 4979 020f 2D020000 		.4byte	0x22d
 4980 0213 00       		.byte	0
 4981 0214 0E       		.uleb128 0xe
 4982 0215 88010000 		.4byte	.LASF39
 4983 0219 07       		.byte	0x7
 4984 021a A7       		.byte	0xa7
 4985 021b 32020000 		.4byte	0x232
 4986 021f 04       		.byte	0x4
 4987 0220 0E       		.uleb128 0xe
 4988 0221 90010000 		.4byte	.LASF40
 4989 0225 07       		.byte	0x7
 4990 0226 A8       		.byte	0xa8
 4991 0227 F1010000 		.4byte	0x1f1
 4992 022b 08       		.byte	0x8
 4993 022c 00       		.byte	0
 4994 022d 08       		.uleb128 0x8
 4995 022e 40010000 		.4byte	0x140
 4996 0232 06       		.uleb128 0x6
 4997 0233 04       		.byte	0x4
 4998 0234 B5010000 		.4byte	0x1b5
 4999 0238 02       		.uleb128 0x2
 5000 0239 BD0A0000 		.4byte	.LASF41
 5001 023d 07       		.byte	0x7
 5002 023e AA       		.byte	0xaa
 5003 023f FC010000 		.4byte	0x1fc
 5004 0243 02       		.uleb128 0x2
 5005 0244 74030000 		.4byte	.LASF42
 5006 0248 08       		.byte	0x8
 5007 0249 3D       		.byte	0x3d
 5008 024a B0000000 		.4byte	0xb0
 5009 024e 0F       		.uleb128 0xf
 5010 024f 01       		.byte	0x1
 5011 0250 5E000000 		.4byte	0x5e
 5012 0254 08       		.byte	0x8
 5013 0255 52       		.byte	0x52
 5014 0256 79020000 		.4byte	0x279
 5015 025a 10       		.uleb128 0x10
 5016 025b CF0D0000 		.4byte	.LASF43
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 191


 5017 025f 00       		.byte	0
 5018 0260 10       		.uleb128 0x10
 5019 0261 F10B0000 		.4byte	.LASF44
 5020 0265 01       		.byte	0x1
 5021 0266 10       		.uleb128 0x10
 5022 0267 3E070000 		.4byte	.LASF45
 5023 026b 02       		.byte	0x2
 5024 026c 10       		.uleb128 0x10
 5025 026d 06080000 		.4byte	.LASF46
 5026 0271 03       		.byte	0x3
 5027 0272 10       		.uleb128 0x10
 5028 0273 840D0000 		.4byte	.LASF47
 5029 0277 04       		.byte	0x4
 5030 0278 00       		.byte	0
 5031 0279 02       		.uleb128 0x2
 5032 027a 4B020000 		.4byte	.LASF48
 5033 027e 08       		.byte	0x8
 5034 027f 58       		.byte	0x58
 5035 0280 4E020000 		.4byte	0x24e
 5036 0284 0D       		.uleb128 0xd
 5037 0285 B7010000 		.4byte	.LASF49
 5038 0289 08       		.byte	0x8
 5039 028a 08       		.byte	0x8
 5040 028b 5D       		.byte	0x5d
 5041 028c A9020000 		.4byte	0x2a9
 5042 0290 0E       		.uleb128 0xe
 5043 0291 71040000 		.4byte	.LASF50
 5044 0295 08       		.byte	0x8
 5045 0296 5F       		.byte	0x5f
 5046 0297 35010000 		.4byte	0x135
 5047 029b 00       		.byte	0
 5048 029c 0E       		.uleb128 0xe
 5049 029d 1B050000 		.4byte	.LASF51
 5050 02a1 08       		.byte	0x8
 5051 02a2 60       		.byte	0x60
 5052 02a3 4B010000 		.4byte	0x14b
 5053 02a7 04       		.byte	0x4
 5054 02a8 00       		.byte	0
 5055 02a9 02       		.uleb128 0x2
 5056 02aa 63000000 		.4byte	.LASF52
 5057 02ae 08       		.byte	0x8
 5058 02af 61       		.byte	0x61
 5059 02b0 84020000 		.4byte	0x284
 5060 02b4 0D       		.uleb128 0xd
 5061 02b5 BF060000 		.4byte	.LASF53
 5062 02b9 0C       		.byte	0xc
 5063 02ba 08       		.byte	0x8
 5064 02bb 66       		.byte	0x66
 5065 02bc E5020000 		.4byte	0x2e5
 5066 02c0 0E       		.uleb128 0xe
 5067 02c1 D0020000 		.4byte	.LASF54
 5068 02c5 08       		.byte	0x8
 5069 02c6 68       		.byte	0x68
 5070 02c7 B0000000 		.4byte	0xb0
 5071 02cb 00       		.byte	0
 5072 02cc 0E       		.uleb128 0xe
 5073 02cd 42080000 		.4byte	.LASF55
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 192


 5074 02d1 08       		.byte	0x8
 5075 02d2 69       		.byte	0x69
 5076 02d3 EB000000 		.4byte	0xeb
 5077 02d7 04       		.byte	0x4
 5078 02d8 0E       		.uleb128 0xe
 5079 02d9 72070000 		.4byte	.LASF56
 5080 02dd 08       		.byte	0x8
 5081 02de 6A       		.byte	0x6a
 5082 02df EB000000 		.4byte	0xeb
 5083 02e3 08       		.byte	0x8
 5084 02e4 00       		.byte	0
 5085 02e5 02       		.uleb128 0x2
 5086 02e6 A8030000 		.4byte	.LASF57
 5087 02ea 08       		.byte	0x8
 5088 02eb 6B       		.byte	0x6b
 5089 02ec B4020000 		.4byte	0x2b4
 5090 02f0 07       		.uleb128 0x7
 5091 02f1 BF000000 		.4byte	0xbf
 5092 02f5 06       		.uleb128 0x6
 5093 02f6 04       		.byte	0x4
 5094 02f7 2A010000 		.4byte	0x12a
 5095 02fb 11       		.uleb128 0x11
 5096 02fc 0E030000 		.4byte	.LASF58
 5097 0300 60       		.byte	0x60
 5098 0301 01       		.byte	0x1
 5099 0302 0D01     		.2byte	0x10d
 5100 0304 7E030000 		.4byte	0x37e
 5101 0308 12       		.uleb128 0x12
 5102 0309 CF050000 		.4byte	.LASF59
 5103 030d 01       		.byte	0x1
 5104 030e 0F01     		.2byte	0x10f
 5105 0310 7E030000 		.4byte	0x37e
 5106 0314 00       		.byte	0
 5107 0315 12       		.uleb128 0x12
 5108 0316 A9020000 		.4byte	.LASF60
 5109 031a 01       		.byte	0x1
 5110 031b 1501     		.2byte	0x115
 5111 031d B5010000 		.4byte	0x1b5
 5112 0321 04       		.byte	0x4
 5113 0322 12       		.uleb128 0x12
 5114 0323 5F010000 		.4byte	.LASF61
 5115 0327 01       		.byte	0x1
 5116 0328 1601     		.2byte	0x116
 5117 032a B5010000 		.4byte	0x1b5
 5118 032e 18       		.byte	0x18
 5119 032f 12       		.uleb128 0x12
 5120 0330 3D0E0000 		.4byte	.LASF62
 5121 0334 01       		.byte	0x1
 5122 0335 1701     		.2byte	0x117
 5123 0337 40010000 		.4byte	0x140
 5124 033b 2C       		.byte	0x2c
 5125 033c 12       		.uleb128 0x12
 5126 033d 81030000 		.4byte	.LASF63
 5127 0341 01       		.byte	0x1
 5128 0342 1801     		.2byte	0x118
 5129 0344 F5020000 		.4byte	0x2f5
 5130 0348 30       		.byte	0x30
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 193


 5131 0349 12       		.uleb128 0x12
 5132 034a 9E0D0000 		.4byte	.LASF64
 5133 034e 01       		.byte	0x1
 5134 034f 1901     		.2byte	0x119
 5135 0351 89030000 		.4byte	0x389
 5136 0355 34       		.byte	0x34
 5137 0356 12       		.uleb128 0x12
 5138 0357 DE020000 		.4byte	.LASF65
 5139 035b 01       		.byte	0x1
 5140 035c 3201     		.2byte	0x132
 5141 035e 56010000 		.4byte	0x156
 5142 0362 44       		.byte	0x44
 5143 0363 12       		.uleb128 0x12
 5144 0364 C6090000 		.4byte	.LASF66
 5145 0368 01       		.byte	0x1
 5146 0369 4501     		.2byte	0x145
 5147 036b F6000000 		.4byte	0xf6
 5148 036f 58       		.byte	0x58
 5149 0370 12       		.uleb128 0x12
 5150 0371 9E090000 		.4byte	.LASF67
 5151 0375 01       		.byte	0x1
 5152 0376 4601     		.2byte	0x146
 5153 0378 FB000000 		.4byte	0xfb
 5154 037c 5C       		.byte	0x5c
 5155 037d 00       		.byte	0
 5156 037e 06       		.uleb128 0x6
 5157 037f 04       		.byte	0x4
 5158 0380 84030000 		.4byte	0x384
 5159 0384 08       		.uleb128 0x8
 5160 0385 2A010000 		.4byte	0x12a
 5161 0389 0B       		.uleb128 0xb
 5162 038a B8000000 		.4byte	0xb8
 5163 038e 99030000 		.4byte	0x399
 5164 0392 0C       		.uleb128 0xc
 5165 0393 A9000000 		.4byte	0xa9
 5166 0397 0F       		.byte	0xf
 5167 0398 00       		.byte	0
 5168 0399 13       		.uleb128 0x13
 5169 039a E9050000 		.4byte	.LASF68
 5170 039e 01       		.byte	0x1
 5171 039f 5301     		.2byte	0x153
 5172 03a1 FB020000 		.4byte	0x2fb
 5173 03a5 13       		.uleb128 0x13
 5174 03a6 EC090000 		.4byte	.LASF69
 5175 03aa 01       		.byte	0x1
 5176 03ab 5701     		.2byte	0x157
 5177 03ad 99030000 		.4byte	0x399
 5178 03b1 14       		.uleb128 0x14
 5179 03b2 D8060000 		.4byte	.LASF72
 5180 03b6 02       		.byte	0x2
 5181 03b7 98       		.byte	0x98
 5182 03b8 03       		.byte	0x3
 5183 03b9 C9030000 		.4byte	0x3c9
 5184 03bd 15       		.uleb128 0x15
 5185 03be 3B010000 		.4byte	.LASF70
 5186 03c2 02       		.byte	0x2
 5187 03c3 9A       		.byte	0x9a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 194


 5188 03c4 EB000000 		.4byte	0xeb
 5189 03c8 00       		.byte	0
 5190 03c9 16       		.uleb128 0x16
 5191 03ca FB020000 		.4byte	.LASF224
 5192 03ce 02       		.byte	0x2
 5193 03cf A8       		.byte	0xa8
 5194 03d0 EB000000 		.4byte	0xeb
 5195 03d4 03       		.byte	0x3
 5196 03d5 F0030000 		.4byte	0x3f0
 5197 03d9 15       		.uleb128 0x15
 5198 03da 16000000 		.4byte	.LASF71
 5199 03de 02       		.byte	0x2
 5200 03df AA       		.byte	0xaa
 5201 03e0 EB000000 		.4byte	0xeb
 5202 03e4 15       		.uleb128 0x15
 5203 03e5 3B010000 		.4byte	.LASF70
 5204 03e9 02       		.byte	0x2
 5205 03ea AA       		.byte	0xaa
 5206 03eb EB000000 		.4byte	0xeb
 5207 03ef 00       		.byte	0
 5208 03f0 14       		.uleb128 0x14
 5209 03f1 52080000 		.4byte	.LASF73
 5210 03f5 02       		.byte	0x2
 5211 03f6 BC       		.byte	0xbc
 5212 03f7 03       		.byte	0x3
 5213 03f8 08040000 		.4byte	0x408
 5214 03fc 17       		.uleb128 0x17
 5215 03fd D7040000 		.4byte	.LASF225
 5216 0401 02       		.byte	0x2
 5217 0402 BC       		.byte	0xbc
 5218 0403 EB000000 		.4byte	0xeb
 5219 0407 00       		.byte	0
 5220 0408 18       		.uleb128 0x18
 5221 0409 B80D0000 		.4byte	.LASF90
 5222 040d 01       		.byte	0x1
 5223 040e C306     		.2byte	0x6c3
 5224 0410 35010000 		.4byte	0x135
 5225 0414 00000000 		.4byte	.LFB146
 5226 0418 4C000000 		.4byte	.LFE146-.LFB146
 5227 041c 01       		.uleb128 0x1
 5228 041d 9C       		.byte	0x9c
 5229 041e 73040000 		.4byte	0x473
 5230 0422 19       		.uleb128 0x19
 5231 0423 99070000 		.4byte	.LASF78
 5232 0427 01       		.byte	0x1
 5233 0428 C306     		.2byte	0x6c3
 5234 042a 73040000 		.4byte	0x473
 5235 042e 00000000 		.4byte	.LLST0
 5236 0432 1A       		.uleb128 0x1a
 5237 0433 01050000 		.4byte	.LASF74
 5238 0437 01       		.byte	0x1
 5239 0438 C506     		.2byte	0x6c5
 5240 043a 35010000 		.4byte	0x135
 5241 043e 69000000 		.4byte	.LLST1
 5242 0442 1A       		.uleb128 0x1a
 5243 0443 39060000 		.4byte	.LASF75
 5244 0447 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 195


 5245 0448 C606     		.2byte	0x6c6
 5246 044a 83040000 		.4byte	0x483
 5247 044e 88000000 		.4byte	.LLST2
 5248 0452 1B       		.uleb128 0x1b
 5249 0453 B1030000 		.4byte	0x3b1
 5250 0457 04000000 		.4byte	.LBB94
 5251 045b 12000000 		.4byte	.LBE94-.LBB94
 5252 045f 01       		.byte	0x1
 5253 0460 CC06     		.2byte	0x6cc
 5254 0462 1C       		.uleb128 0x1c
 5255 0463 04000000 		.4byte	.LBB95
 5256 0467 12000000 		.4byte	.LBE95-.LBB95
 5257 046b 1D       		.uleb128 0x1d
 5258 046c BD030000 		.4byte	0x3bd
 5259 0470 00       		.byte	0
 5260 0471 00       		.byte	0
 5261 0472 00       		.byte	0
 5262 0473 07       		.uleb128 0x7
 5263 0474 43020000 		.4byte	0x243
 5264 0478 06       		.uleb128 0x6
 5265 0479 04       		.byte	0x4
 5266 047a 7E040000 		.4byte	0x47e
 5267 047e 07       		.uleb128 0x7
 5268 047f A5030000 		.4byte	0x3a5
 5269 0483 07       		.uleb128 0x7
 5270 0484 78040000 		.4byte	0x478
 5271 0488 1E       		.uleb128 0x1e
 5272 0489 27040000 		.4byte	.LASF76
 5273 048d 01       		.byte	0x1
 5274 048e 9D0E     		.2byte	0xe9d
 5275 0490 00000000 		.4byte	.LFB174
 5276 0494 2C000000 		.4byte	.LFE174-.LFB174
 5277 0498 01       		.uleb128 0x1
 5278 0499 9C       		.byte	0x9c
 5279 049a AF040000 		.4byte	0x4af
 5280 049e 1A       		.uleb128 0x1a
 5281 049f 39060000 		.4byte	.LASF75
 5282 04a3 01       		.byte	0x1
 5283 04a4 9F0E     		.2byte	0xe9f
 5284 04a6 AF040000 		.4byte	0x4af
 5285 04aa F1000000 		.4byte	.LLST3
 5286 04ae 00       		.byte	0
 5287 04af 06       		.uleb128 0x6
 5288 04b0 04       		.byte	0x4
 5289 04b1 A5030000 		.4byte	0x3a5
 5290 04b5 1E       		.uleb128 0x1e
 5291 04b6 F8060000 		.4byte	.LASF77
 5292 04ba 01       		.byte	0x1
 5293 04bb 670E     		.2byte	0xe67
 5294 04bd 00000000 		.4byte	.LFB173
 5295 04c1 12000000 		.4byte	.LFE173-.LFB173
 5296 04c5 01       		.uleb128 0x1
 5297 04c6 9C       		.byte	0x9c
 5298 04c7 F5040000 		.4byte	0x4f5
 5299 04cb 19       		.uleb128 0x19
 5300 04cc 39060000 		.4byte	.LASF75
 5301 04d0 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 196


 5302 04d1 670E     		.2byte	0xe67
 5303 04d3 AF040000 		.4byte	0x4af
 5304 04d7 04010000 		.4byte	.LLST4
 5305 04db 1F       		.uleb128 0x1f
 5306 04dc 0A000000 		.4byte	.LVL13
 5307 04e0 FC210000 		.4byte	0x21fc
 5308 04e4 20       		.uleb128 0x20
 5309 04e5 10000000 		.4byte	.LVL14
 5310 04e9 FC210000 		.4byte	0x21fc
 5311 04ed 21       		.uleb128 0x21
 5312 04ee 01       		.uleb128 0x1
 5313 04ef 50       		.byte	0x50
 5314 04f0 02       		.uleb128 0x2
 5315 04f1 74       		.byte	0x74
 5316 04f2 00       		.sleb128 0
 5317 04f3 00       		.byte	0
 5318 04f4 00       		.byte	0
 5319 04f5 1E       		.uleb128 0x1e
 5320 04f6 C40A0000 		.4byte	.LASF79
 5321 04fa 01       		.byte	0x1
 5322 04fb 3703     		.2byte	0x337
 5323 04fd 00000000 		.4byte	.LFB137
 5324 0501 9E000000 		.4byte	.LFE137-.LFB137
 5325 0505 01       		.uleb128 0x1
 5326 0506 9C       		.byte	0x9c
 5327 0507 05060000 		.4byte	0x605
 5328 050b 19       		.uleb128 0x19
 5329 050c C6070000 		.4byte	.LASF80
 5330 0510 01       		.byte	0x1
 5331 0511 3703     		.2byte	0x337
 5332 0513 0E010000 		.4byte	0x10e
 5333 0517 22010000 		.4byte	.LLST5
 5334 051b 19       		.uleb128 0x19
 5335 051c 7D0E0000 		.4byte	.LASF81
 5336 0520 01       		.byte	0x1
 5337 0521 3803     		.2byte	0x338
 5338 0523 F0020000 		.4byte	0x2f0
 5339 0527 40010000 		.4byte	.LLST6
 5340 052b 19       		.uleb128 0x19
 5341 052c D1070000 		.4byte	.LASF82
 5342 0530 01       		.byte	0x1
 5343 0531 3903     		.2byte	0x339
 5344 0533 05060000 		.4byte	0x605
 5345 0537 5E010000 		.4byte	.LLST7
 5346 053b 19       		.uleb128 0x19
 5347 053c DC050000 		.4byte	.LASF83
 5348 0540 01       		.byte	0x1
 5349 0541 3A03     		.2byte	0x33a
 5350 0543 0A060000 		.4byte	0x60a
 5351 0547 9B010000 		.4byte	.LLST8
 5352 054b 19       		.uleb128 0x19
 5353 054c 3D0E0000 		.4byte	.LASF62
 5354 0550 01       		.byte	0x1
 5355 0551 3B03     		.2byte	0x33b
 5356 0553 40010000 		.4byte	0x140
 5357 0557 B9010000 		.4byte	.LLST9
 5358 055b 22       		.uleb128 0x22
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 197


 5359 055c 4A050000 		.4byte	.LASF84
 5360 0560 01       		.byte	0x1
 5361 0561 3C03     		.2byte	0x33c
 5362 0563 15060000 		.4byte	0x615
 5363 0567 02       		.uleb128 0x2
 5364 0568 91       		.byte	0x91
 5365 0569 04       		.sleb128 4
 5366 056a 22       		.uleb128 0x22
 5367 056b 22030000 		.4byte	.LASF85
 5368 056f 01       		.byte	0x1
 5369 0570 3D03     		.2byte	0x33d
 5370 0572 AF040000 		.4byte	0x4af
 5371 0576 02       		.uleb128 0x2
 5372 0577 91       		.byte	0x91
 5373 0578 08       		.sleb128 8
 5374 0579 22       		.uleb128 0x22
 5375 057a 7F070000 		.4byte	.LASF86
 5376 057e 01       		.byte	0x1
 5377 057f 3E03     		.2byte	0x33e
 5378 0581 25060000 		.4byte	0x625
 5379 0585 02       		.uleb128 0x2
 5380 0586 91       		.byte	0x91
 5381 0587 0C       		.sleb128 12
 5382 0588 23       		.uleb128 0x23
 5383 0589 CF050000 		.4byte	.LASF59
 5384 058d 01       		.byte	0x1
 5385 058e 4003     		.2byte	0x340
 5386 0590 F5020000 		.4byte	0x2f5
 5387 0594 01       		.uleb128 0x1
 5388 0595 55       		.byte	0x55
 5389 0596 24       		.uleb128 0x24
 5390 0597 7800     		.ascii	"x\000"
 5391 0599 01       		.byte	0x1
 5392 059a 4103     		.2byte	0x341
 5393 059c 40010000 		.4byte	0x140
 5394 05a0 D8010000 		.4byte	.LLST10
 5395 05a4 25       		.uleb128 0x25
 5396 05a5 1C000000 		.4byte	.LVL19
 5397 05a9 07220000 		.4byte	0x2207
 5398 05ad C0050000 		.4byte	0x5c0
 5399 05b1 21       		.uleb128 0x21
 5400 05b2 01       		.uleb128 0x1
 5401 05b3 51       		.byte	0x51
 5402 05b4 02       		.uleb128 0x2
 5403 05b5 08       		.byte	0x8
 5404 05b6 A5       		.byte	0xa5
 5405 05b7 21       		.uleb128 0x21
 5406 05b8 01       		.uleb128 0x1
 5407 05b9 52       		.byte	0x52
 5408 05ba 04       		.uleb128 0x4
 5409 05bb 75       		.byte	0x75
 5410 05bc 00       		.sleb128 0
 5411 05bd 32       		.byte	0x32
 5412 05be 24       		.byte	0x24
 5413 05bf 00       		.byte	0
 5414 05c0 25       		.uleb128 0x25
 5415 05c1 5A000000 		.4byte	.LVL26
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 198


 5416 05c5 12220000 		.4byte	0x2212
 5417 05c9 D4050000 		.4byte	0x5d4
 5418 05cd 21       		.uleb128 0x21
 5419 05ce 01       		.uleb128 0x1
 5420 05cf 50       		.byte	0x50
 5421 05d0 02       		.uleb128 0x2
 5422 05d1 74       		.byte	0x74
 5423 05d2 04       		.sleb128 4
 5424 05d3 00       		.byte	0
 5425 05d4 25       		.uleb128 0x25
 5426 05d5 62000000 		.4byte	.LVL27
 5427 05d9 12220000 		.4byte	0x2212
 5428 05dd E8050000 		.4byte	0x5e8
 5429 05e1 21       		.uleb128 0x21
 5430 05e2 01       		.uleb128 0x1
 5431 05e3 50       		.byte	0x50
 5432 05e4 02       		.uleb128 0x2
 5433 05e5 74       		.byte	0x74
 5434 05e6 18       		.sleb128 24
 5435 05e7 00       		.byte	0
 5436 05e8 20       		.uleb128 0x20
 5437 05e9 94000000 		.4byte	.LVL32
 5438 05ed 1E220000 		.4byte	0x221e
 5439 05f1 21       		.uleb128 0x21
 5440 05f2 01       		.uleb128 0x1
 5441 05f3 50       		.byte	0x50
 5442 05f4 02       		.uleb128 0x2
 5443 05f5 75       		.byte	0x75
 5444 05f6 00       		.sleb128 0
 5445 05f7 21       		.uleb128 0x21
 5446 05f8 01       		.uleb128 0x1
 5447 05f9 51       		.byte	0x51
 5448 05fa 02       		.uleb128 0x2
 5449 05fb 7A       		.byte	0x7a
 5450 05fc 00       		.sleb128 0
 5451 05fd 21       		.uleb128 0x21
 5452 05fe 01       		.uleb128 0x1
 5453 05ff 52       		.byte	0x52
 5454 0600 02       		.uleb128 0x2
 5455 0601 78       		.byte	0x78
 5456 0602 00       		.sleb128 0
 5457 0603 00       		.byte	0
 5458 0604 00       		.byte	0
 5459 0605 07       		.uleb128 0x7
 5460 0606 EB000000 		.4byte	0xeb
 5461 060a 07       		.uleb128 0x7
 5462 060b B0000000 		.4byte	0xb0
 5463 060f 06       		.uleb128 0x6
 5464 0610 04       		.byte	0x4
 5465 0611 43020000 		.4byte	0x243
 5466 0615 07       		.uleb128 0x7
 5467 0616 0F060000 		.4byte	0x60f
 5468 061a 06       		.uleb128 0x6
 5469 061b 04       		.byte	0x4
 5470 061c 20060000 		.4byte	0x620
 5471 0620 07       		.uleb128 0x7
 5472 0621 E5020000 		.4byte	0x2e5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 199


 5473 0625 07       		.uleb128 0x7
 5474 0626 1A060000 		.4byte	0x61a
 5475 062a 1E       		.uleb128 0x1e
 5476 062b A8060000 		.4byte	.LASF87
 5477 062f 01       		.byte	0x1
 5478 0630 770D     		.2byte	0xd77
 5479 0632 00000000 		.4byte	.LFB171
 5480 0636 58000000 		.4byte	.LFE171-.LFB171
 5481 063a 01       		.uleb128 0x1
 5482 063b 9C       		.byte	0x9c
 5483 063c D3060000 		.4byte	0x6d3
 5484 0640 1A       		.uleb128 0x1a
 5485 0641 3D0E0000 		.4byte	.LASF62
 5486 0645 01       		.byte	0x1
 5487 0646 790D     		.2byte	0xd79
 5488 0648 40010000 		.4byte	0x140
 5489 064c 02020000 		.4byte	.LLST11
 5490 0650 25       		.uleb128 0x25
 5491 0651 14000000 		.4byte	.LVL35
 5492 0655 29220000 		.4byte	0x2229
 5493 0659 71060000 		.4byte	0x671
 5494 065d 21       		.uleb128 0x21
 5495 065e 01       		.uleb128 0x1
 5496 065f 50       		.byte	0x50
 5497 0660 0F       		.uleb128 0xf
 5498 0661 74       		.byte	0x74
 5499 0662 00       		.sleb128 0
 5500 0663 32       		.byte	0x32
 5501 0664 24       		.byte	0x24
 5502 0665 74       		.byte	0x74
 5503 0666 00       		.sleb128 0
 5504 0667 22       		.byte	0x22
 5505 0668 32       		.byte	0x32
 5506 0669 24       		.byte	0x24
 5507 066a 03       		.byte	0x3
 5508 066b 30000000 		.4byte	.LANCHOR0+48
 5509 066f 22       		.byte	0x22
 5510 0670 00       		.byte	0
 5511 0671 25       		.uleb128 0x25
 5512 0672 26000000 		.4byte	.LVL38
 5513 0676 29220000 		.4byte	0x2229
 5514 067a 85060000 		.4byte	0x685
 5515 067e 21       		.uleb128 0x21
 5516 067f 01       		.uleb128 0x1
 5517 0680 50       		.byte	0x50
 5518 0681 02       		.uleb128 0x2
 5519 0682 76       		.byte	0x76
 5520 0683 00       		.sleb128 0
 5521 0684 00       		.byte	0
 5522 0685 25       		.uleb128 0x25
 5523 0686 30000000 		.4byte	.LVL39
 5524 068a 29220000 		.4byte	0x2229
 5525 068e 99060000 		.4byte	0x699
 5526 0692 21       		.uleb128 0x21
 5527 0693 01       		.uleb128 0x1
 5528 0694 50       		.byte	0x50
 5529 0695 02       		.uleb128 0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 200


 5530 0696 75       		.byte	0x75
 5531 0697 00       		.sleb128 0
 5532 0698 00       		.byte	0
 5533 0699 25       		.uleb128 0x25
 5534 069a 38000000 		.4byte	.LVL40
 5535 069e 29220000 		.4byte	0x2229
 5536 06a2 AD060000 		.4byte	0x6ad
 5537 06a6 21       		.uleb128 0x21
 5538 06a7 01       		.uleb128 0x1
 5539 06a8 50       		.byte	0x50
 5540 06a9 02       		.uleb128 0x2
 5541 06aa 74       		.byte	0x74
 5542 06ab 14       		.sleb128 20
 5543 06ac 00       		.byte	0
 5544 06ad 25       		.uleb128 0x25
 5545 06ae 40000000 		.4byte	.LVL41
 5546 06b2 29220000 		.4byte	0x2229
 5547 06b6 C2060000 		.4byte	0x6c2
 5548 06ba 21       		.uleb128 0x21
 5549 06bb 01       		.uleb128 0x1
 5550 06bc 50       		.byte	0x50
 5551 06bd 03       		.uleb128 0x3
 5552 06be 74       		.byte	0x74
 5553 06bf E401     		.sleb128 228
 5554 06c1 00       		.byte	0
 5555 06c2 20       		.uleb128 0x20
 5556 06c3 46000000 		.4byte	.LVL42
 5557 06c7 29220000 		.4byte	0x2229
 5558 06cb 21       		.uleb128 0x21
 5559 06cc 01       		.uleb128 0x1
 5560 06cd 50       		.byte	0x50
 5561 06ce 02       		.uleb128 0x2
 5562 06cf 74       		.byte	0x74
 5563 06d0 00       		.sleb128 0
 5564 06d1 00       		.byte	0
 5565 06d2 00       		.byte	0
 5566 06d3 1E       		.uleb128 0x1e
 5567 06d4 63060000 		.4byte	.LASF88
 5568 06d8 01       		.byte	0x1
 5569 06d9 0304     		.2byte	0x403
 5570 06db 00000000 		.4byte	.LFB138
 5571 06df AC000000 		.4byte	.LFE138-.LFB138
 5572 06e3 01       		.uleb128 0x1
 5573 06e4 9C       		.byte	0x9c
 5574 06e5 29070000 		.4byte	0x729
 5575 06e9 19       		.uleb128 0x19
 5576 06ea 22030000 		.4byte	.LASF85
 5577 06ee 01       		.byte	0x1
 5578 06ef 0304     		.2byte	0x403
 5579 06f1 AF040000 		.4byte	0x4af
 5580 06f5 21020000 		.4byte	.LLST12
 5581 06f9 1F       		.uleb128 0x1f
 5582 06fa 08000000 		.4byte	.LVL44
 5583 06fe 35220000 		.4byte	0x2235
 5584 0702 1F       		.uleb128 0x1f
 5585 0703 2C000000 		.4byte	.LVL45
 5586 0707 2A060000 		.4byte	0x62a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 201


 5587 070b 25       		.uleb128 0x25
 5588 070c 7A000000 		.4byte	.LVL46
 5589 0710 40220000 		.4byte	0x2240
 5590 0714 1F070000 		.4byte	0x71f
 5591 0718 21       		.uleb128 0x21
 5592 0719 01       		.uleb128 0x1
 5593 071a 51       		.byte	0x51
 5594 071b 02       		.uleb128 0x2
 5595 071c 74       		.byte	0x74
 5596 071d 04       		.sleb128 4
 5597 071e 00       		.byte	0
 5598 071f 1F       		.uleb128 0x1f
 5599 0720 7E000000 		.4byte	.LVL47
 5600 0724 4C220000 		.4byte	0x224c
 5601 0728 00       		.byte	0
 5602 0729 1E       		.uleb128 0x1e
 5603 072a 140B0000 		.4byte	.LASF89
 5604 072e 01       		.byte	0x1
 5605 072f 970D     		.2byte	0xd97
 5606 0731 00000000 		.4byte	.LFB172
 5607 0735 44000000 		.4byte	.LFE172-.LFB172
 5608 0739 01       		.uleb128 0x1
 5609 073a 9C       		.byte	0x9c
 5610 073b 90070000 		.4byte	0x790
 5611 073f 1C       		.uleb128 0x1c
 5612 0740 02000000 		.4byte	.LBB96
 5613 0744 3C000000 		.4byte	.LBE96-.LBB96
 5614 0748 1A       		.uleb128 0x1a
 5615 0749 39060000 		.4byte	.LASF75
 5616 074d 01       		.byte	0x1
 5617 074e 9E0D     		.2byte	0xd9e
 5618 0750 AF040000 		.4byte	0x4af
 5619 0754 4D020000 		.4byte	.LLST13
 5620 0758 1F       		.uleb128 0x1f
 5621 0759 08000000 		.4byte	.LVL49
 5622 075d 35220000 		.4byte	0x2235
 5623 0761 25       		.uleb128 0x25
 5624 0762 16000000 		.4byte	.LVL51
 5625 0766 57220000 		.4byte	0x2257
 5626 076a 75070000 		.4byte	0x775
 5627 076e 21       		.uleb128 0x21
 5628 076f 01       		.uleb128 0x1
 5629 0770 50       		.byte	0x50
 5630 0771 02       		.uleb128 0x2
 5631 0772 75       		.byte	0x75
 5632 0773 04       		.sleb128 4
 5633 0774 00       		.byte	0
 5634 0775 1F       		.uleb128 0x1f
 5635 0776 2E000000 		.4byte	.LVL52
 5636 077a 4C220000 		.4byte	0x224c
 5637 077e 20       		.uleb128 0x20
 5638 077f 34000000 		.4byte	.LVL53
 5639 0783 B5040000 		.4byte	0x4b5
 5640 0787 21       		.uleb128 0x21
 5641 0788 01       		.uleb128 0x1
 5642 0789 50       		.byte	0x50
 5643 078a 02       		.uleb128 0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 202


 5644 078b 75       		.byte	0x75
 5645 078c 00       		.sleb128 0
 5646 078d 00       		.byte	0
 5647 078e 00       		.byte	0
 5648 078f 00       		.byte	0
 5649 0790 26       		.uleb128 0x26
 5650 0791 12070000 		.4byte	.LASF91
 5651 0795 01       		.byte	0x1
 5652 0796 A30C     		.2byte	0xca3
 5653 0798 00000000 		.4byte	.LFB168
 5654 079c 28000000 		.4byte	.LFE168-.LFB168
 5655 07a0 01       		.uleb128 0x1
 5656 07a1 9C       		.byte	0x9c
 5657 07a2 C0070000 		.4byte	0x7c0
 5658 07a6 19       		.uleb128 0x19
 5659 07a7 DC050000 		.4byte	.LASF83
 5660 07ab 01       		.byte	0x1
 5661 07ac A30C     		.2byte	0xca3
 5662 07ae B0000000 		.4byte	0xb0
 5663 07b2 60020000 		.4byte	.LLST14
 5664 07b6 1F       		.uleb128 0x1f
 5665 07b7 06000000 		.4byte	.LVL56
 5666 07bb 29070000 		.4byte	0x729
 5667 07bf 00       		.byte	0
 5668 07c0 1E       		.uleb128 0x1e
 5669 07c1 650B0000 		.4byte	.LASF92
 5670 07c5 01       		.byte	0x1
 5671 07c6 3B13     		.2byte	0x133b
 5672 07c8 00000000 		.4byte	.LFB184
 5673 07cc 68000000 		.4byte	.LFE184-.LFB184
 5674 07d0 01       		.uleb128 0x1
 5675 07d1 9C       		.byte	0x9c
 5676 07d2 49080000 		.4byte	0x849
 5677 07d6 19       		.uleb128 0x19
 5678 07d7 6F020000 		.4byte	.LASF93
 5679 07db 01       		.byte	0x1
 5680 07dc 3B13     		.2byte	0x133b
 5681 07de 4B010000 		.4byte	0x14b
 5682 07e2 81020000 		.4byte	.LLST15
 5683 07e6 19       		.uleb128 0x19
 5684 07e7 00000000 		.4byte	.LASF94
 5685 07eb 01       		.byte	0x1
 5686 07ec 3B13     		.2byte	0x133b
 5687 07ee 49080000 		.4byte	0x849
 5688 07f2 AD020000 		.4byte	.LLST16
 5689 07f6 1A       		.uleb128 0x1a
 5690 07f7 AC090000 		.4byte	.LASF95
 5691 07fb 01       		.byte	0x1
 5692 07fc 3D13     		.2byte	0x133d
 5693 07fe 4B010000 		.4byte	0x14b
 5694 0802 D9020000 		.4byte	.LLST17
 5695 0806 1A       		.uleb128 0x1a
 5696 0807 73090000 		.4byte	.LASF96
 5697 080b 01       		.byte	0x1
 5698 080c 3E13     		.2byte	0x133e
 5699 080e 4E080000 		.4byte	0x84e
 5700 0812 EC020000 		.4byte	.LLST18
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 203


 5701 0816 1F       		.uleb128 0x1f
 5702 0817 16000000 		.4byte	.LVL60
 5703 081b 57220000 		.4byte	0x2257
 5704 081f 25       		.uleb128 0x25
 5705 0820 2A000000 		.4byte	.LVL61
 5706 0824 40220000 		.4byte	0x2240
 5707 0828 36080000 		.4byte	0x836
 5708 082c 21       		.uleb128 0x21
 5709 082d 01       		.uleb128 0x1
 5710 082e 50       		.byte	0x50
 5711 082f 05       		.uleb128 0x5
 5712 0830 03       		.byte	0x3
 5713 0831 00000000 		.4byte	.LANCHOR0
 5714 0835 00       		.byte	0
 5715 0836 1F       		.uleb128 0x1f
 5716 0837 4A000000 		.4byte	.LVL64
 5717 083b 63220000 		.4byte	0x2263
 5718 083f 1F       		.uleb128 0x1f
 5719 0840 5A000000 		.4byte	.LVL67
 5720 0844 63220000 		.4byte	0x2263
 5721 0848 00       		.byte	0
 5722 0849 07       		.uleb128 0x7
 5723 084a 35010000 		.4byte	0x135
 5724 084e 07       		.uleb128 0x7
 5725 084f 4B010000 		.4byte	0x14b
 5726 0853 27       		.uleb128 0x27
 5727 0854 41000000 		.4byte	.LASF99
 5728 0858 01       		.byte	0x1
 5729 0859 DC02     		.2byte	0x2dc
 5730 085b 35010000 		.4byte	0x135
 5731 085f 00000000 		.4byte	.LFB136
 5732 0863 62000000 		.4byte	.LFE136-.LFB136
 5733 0867 01       		.uleb128 0x1
 5734 0868 9C       		.byte	0x9c
 5735 0869 97090000 		.4byte	0x997
 5736 086d 19       		.uleb128 0x19
 5737 086e C6070000 		.4byte	.LASF80
 5738 0872 01       		.byte	0x1
 5739 0873 DC02     		.2byte	0x2dc
 5740 0875 0E010000 		.4byte	0x10e
 5741 0879 FF020000 		.4byte	.LLST19
 5742 087d 19       		.uleb128 0x19
 5743 087e 7D0E0000 		.4byte	.LASF81
 5744 0882 01       		.byte	0x1
 5745 0883 DD02     		.2byte	0x2dd
 5746 0885 F0020000 		.4byte	0x2f0
 5747 0889 1D030000 		.4byte	.LLST20
 5748 088d 19       		.uleb128 0x19
 5749 088e 43040000 		.4byte	.LASF97
 5750 0892 01       		.byte	0x1
 5751 0893 DE02     		.2byte	0x2de
 5752 0895 97090000 		.4byte	0x997
 5753 0899 3B030000 		.4byte	.LLST21
 5754 089d 19       		.uleb128 0x19
 5755 089e DC050000 		.4byte	.LASF83
 5756 08a2 01       		.byte	0x1
 5757 08a3 DF02     		.2byte	0x2df
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 204


 5758 08a5 0A060000 		.4byte	0x60a
 5759 08a9 5C030000 		.4byte	.LLST22
 5760 08ad 22       		.uleb128 0x22
 5761 08ae 3D0E0000 		.4byte	.LASF62
 5762 08b2 01       		.byte	0x1
 5763 08b3 E002     		.2byte	0x2e0
 5764 08b5 40010000 		.4byte	0x140
 5765 08b9 02       		.uleb128 0x2
 5766 08ba 91       		.byte	0x91
 5767 08bb 00       		.sleb128 0
 5768 08bc 22       		.uleb128 0x22
 5769 08bd 4A050000 		.4byte	.LASF84
 5770 08c1 01       		.byte	0x1
 5771 08c2 E102     		.2byte	0x2e1
 5772 08c4 15060000 		.4byte	0x615
 5773 08c8 02       		.uleb128 0x2
 5774 08c9 91       		.byte	0x91
 5775 08ca 04       		.sleb128 4
 5776 08cb 1A       		.uleb128 0x1a
 5777 08cc 22030000 		.4byte	.LASF85
 5778 08d0 01       		.byte	0x1
 5779 08d1 E302     		.2byte	0x2e3
 5780 08d3 AF040000 		.4byte	0x4af
 5781 08d7 7A030000 		.4byte	.LLST23
 5782 08db 1A       		.uleb128 0x1a
 5783 08dc 01050000 		.4byte	.LASF74
 5784 08e0 01       		.byte	0x1
 5785 08e1 E402     		.2byte	0x2e4
 5786 08e3 35010000 		.4byte	0x135
 5787 08e7 A3030000 		.4byte	.LLST24
 5788 08eb 28       		.uleb128 0x28
 5789 08ec 0E000000 		.4byte	.LBB97
 5790 08f0 24000000 		.4byte	.LBE97-.LBB97
 5791 08f4 43090000 		.4byte	0x943
 5792 08f8 1A       		.uleb128 0x1a
 5793 08f9 81030000 		.4byte	.LASF63
 5794 08fd 01       		.byte	0x1
 5795 08fe 0103     		.2byte	0x301
 5796 0900 F5020000 		.4byte	0x2f5
 5797 0904 C2030000 		.4byte	.LLST25
 5798 0908 25       		.uleb128 0x25
 5799 0909 14000000 		.4byte	.LVL71
 5800 090d 6F220000 		.4byte	0x226f
 5801 0911 1E090000 		.4byte	0x91e
 5802 0915 21       		.uleb128 0x21
 5803 0916 01       		.uleb128 0x1
 5804 0917 50       		.byte	0x50
 5805 0918 04       		.uleb128 0x4
 5806 0919 75       		.byte	0x75
 5807 091a 00       		.sleb128 0
 5808 091b 32       		.byte	0x32
 5809 091c 24       		.byte	0x24
 5810 091d 00       		.byte	0
 5811 091e 25       		.uleb128 0x25
 5812 091f 1E000000 		.4byte	.LVL73
 5813 0923 6F220000 		.4byte	0x226f
 5814 0927 32090000 		.4byte	0x932
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 205


 5815 092b 21       		.uleb128 0x21
 5816 092c 01       		.uleb128 0x1
 5817 092d 50       		.byte	0x50
 5818 092e 02       		.uleb128 0x2
 5819 092f 08       		.byte	0x8
 5820 0930 60       		.byte	0x60
 5821 0931 00       		.byte	0
 5822 0932 20       		.uleb128 0x20
 5823 0933 2E000000 		.4byte	.LVL75
 5824 0937 FC210000 		.4byte	0x21fc
 5825 093b 21       		.uleb128 0x21
 5826 093c 01       		.uleb128 0x1
 5827 093d 50       		.byte	0x50
 5828 093e 02       		.uleb128 0x2
 5829 093f 79       		.byte	0x79
 5830 0940 00       		.sleb128 0
 5831 0941 00       		.byte	0
 5832 0942 00       		.byte	0
 5833 0943 25       		.uleb128 0x25
 5834 0944 4E000000 		.4byte	.LVL78
 5835 0948 F5040000 		.4byte	0x4f5
 5836 094c 86090000 		.4byte	0x986
 5837 0950 21       		.uleb128 0x21
 5838 0951 01       		.uleb128 0x1
 5839 0952 50       		.byte	0x50
 5840 0953 02       		.uleb128 0x2
 5841 0954 76       		.byte	0x76
 5842 0955 00       		.sleb128 0
 5843 0956 21       		.uleb128 0x21
 5844 0957 01       		.uleb128 0x1
 5845 0958 51       		.byte	0x51
 5846 0959 02       		.uleb128 0x2
 5847 095a 77       		.byte	0x77
 5848 095b 00       		.sleb128 0
 5849 095c 21       		.uleb128 0x21
 5850 095d 01       		.uleb128 0x1
 5851 095e 52       		.byte	0x52
 5852 095f 02       		.uleb128 0x2
 5853 0960 75       		.byte	0x75
 5854 0961 00       		.sleb128 0
 5855 0962 21       		.uleb128 0x21
 5856 0963 01       		.uleb128 0x1
 5857 0964 53       		.byte	0x53
 5858 0965 02       		.uleb128 0x2
 5859 0966 78       		.byte	0x78
 5860 0967 00       		.sleb128 0
 5861 0968 21       		.uleb128 0x21
 5862 0969 02       		.uleb128 0x2
 5863 096a 7D       		.byte	0x7d
 5864 096b 00       		.sleb128 0
 5865 096c 03       		.uleb128 0x3
 5866 096d 91       		.byte	0x91
 5867 096e 00       		.sleb128 0
 5868 096f 06       		.byte	0x6
 5869 0970 21       		.uleb128 0x21
 5870 0971 02       		.uleb128 0x2
 5871 0972 7D       		.byte	0x7d
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 206


 5872 0973 04       		.sleb128 4
 5873 0974 03       		.uleb128 0x3
 5874 0975 91       		.byte	0x91
 5875 0976 04       		.sleb128 4
 5876 0977 06       		.byte	0x6
 5877 0978 21       		.uleb128 0x21
 5878 0979 02       		.uleb128 0x2
 5879 097a 7D       		.byte	0x7d
 5880 097b 08       		.sleb128 8
 5881 097c 02       		.uleb128 0x2
 5882 097d 74       		.byte	0x74
 5883 097e 00       		.sleb128 0
 5884 097f 21       		.uleb128 0x21
 5885 0980 02       		.uleb128 0x2
 5886 0981 7D       		.byte	0x7d
 5887 0982 0C       		.sleb128 12
 5888 0983 01       		.uleb128 0x1
 5889 0984 30       		.byte	0x30
 5890 0985 00       		.byte	0
 5891 0986 20       		.uleb128 0x20
 5892 0987 54000000 		.4byte	.LVL79
 5893 098b D3060000 		.4byte	0x6d3
 5894 098f 21       		.uleb128 0x21
 5895 0990 01       		.uleb128 0x1
 5896 0991 50       		.byte	0x50
 5897 0992 02       		.uleb128 0x2
 5898 0993 74       		.byte	0x74
 5899 0994 00       		.sleb128 0
 5900 0995 00       		.byte	0
 5901 0996 00       		.byte	0
 5902 0997 07       		.uleb128 0x7
 5903 0998 D5000000 		.4byte	0xd5
 5904 099c 29       		.uleb128 0x29
 5905 099d E50B0000 		.4byte	.LASF104
 5906 09a1 01       		.byte	0x1
 5907 09a2 5804     		.2byte	0x458
 5908 09a4 00000000 		.4byte	.LFB139
 5909 09a8 B0000000 		.4byte	.LFE139-.LFB139
 5910 09ac 01       		.uleb128 0x1
 5911 09ad 9C       		.byte	0x9c
 5912 09ae 690A0000 		.4byte	0xa69
 5913 09b2 19       		.uleb128 0x19
 5914 09b3 9B080000 		.4byte	.LASF98
 5915 09b7 01       		.byte	0x1
 5916 09b8 5804     		.2byte	0x458
 5917 09ba 43020000 		.4byte	0x243
 5918 09be EB030000 		.4byte	.LLST26
 5919 09c2 1A       		.uleb128 0x1a
 5920 09c3 39060000 		.4byte	.LASF75
 5921 09c7 01       		.byte	0x1
 5922 09c8 5A04     		.2byte	0x45a
 5923 09ca AF040000 		.4byte	0x4af
 5924 09ce 09040000 		.4byte	.LLST27
 5925 09d2 2A       		.uleb128 0x2a
 5926 09d3 B1030000 		.4byte	0x3b1
 5927 09d7 84000000 		.4byte	.LBB98
 5928 09db 12000000 		.4byte	.LBE98-.LBB98
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 207


 5929 09df 01       		.byte	0x1
 5930 09e0 A504     		.2byte	0x4a5
 5931 09e2 F6090000 		.4byte	0x9f6
 5932 09e6 1C       		.uleb128 0x1c
 5933 09e7 84000000 		.4byte	.LBB99
 5934 09eb 12000000 		.4byte	.LBE99-.LBB99
 5935 09ef 1D       		.uleb128 0x1d
 5936 09f0 BD030000 		.4byte	0x3bd
 5937 09f4 00       		.byte	0
 5938 09f5 00       		.byte	0
 5939 09f6 1F       		.uleb128 0x1f
 5940 09f7 08000000 		.4byte	.LVL83
 5941 09fb 35220000 		.4byte	0x2235
 5942 09ff 25       		.uleb128 0x25
 5943 0a00 18000000 		.4byte	.LVL85
 5944 0a04 57220000 		.4byte	0x2257
 5945 0a08 130A0000 		.4byte	0xa13
 5946 0a0c 21       		.uleb128 0x21
 5947 0a0d 01       		.uleb128 0x1
 5948 0a0e 50       		.byte	0x50
 5949 0a0f 02       		.uleb128 0x2
 5950 0a10 76       		.byte	0x76
 5951 0a11 00       		.sleb128 0
 5952 0a12 00       		.byte	0
 5953 0a13 25       		.uleb128 0x25
 5954 0a14 24000000 		.4byte	.LVL86
 5955 0a18 57220000 		.4byte	0x2257
 5956 0a1c 270A0000 		.4byte	0xa27
 5957 0a20 21       		.uleb128 0x21
 5958 0a21 01       		.uleb128 0x1
 5959 0a22 50       		.byte	0x50
 5960 0a23 02       		.uleb128 0x2
 5961 0a24 74       		.byte	0x74
 5962 0a25 18       		.sleb128 24
 5963 0a26 00       		.byte	0
 5964 0a27 25       		.uleb128 0x25
 5965 0a28 44000000 		.4byte	.LVL87
 5966 0a2c 40220000 		.4byte	0x2240
 5967 0a30 420A0000 		.4byte	0xa42
 5968 0a34 21       		.uleb128 0x21
 5969 0a35 01       		.uleb128 0x1
 5970 0a36 50       		.byte	0x50
 5971 0a37 03       		.uleb128 0x3
 5972 0a38 75       		.byte	0x75
 5973 0a39 E401     		.sleb128 228
 5974 0a3b 21       		.uleb128 0x21
 5975 0a3c 01       		.uleb128 0x1
 5976 0a3d 51       		.byte	0x51
 5977 0a3e 02       		.uleb128 0x2
 5978 0a3f 76       		.byte	0x76
 5979 0a40 00       		.sleb128 0
 5980 0a41 00       		.byte	0
 5981 0a42 25       		.uleb128 0x25
 5982 0a43 62000000 		.4byte	.LVL88
 5983 0a47 B5040000 		.4byte	0x4b5
 5984 0a4b 560A0000 		.4byte	0xa56
 5985 0a4f 21       		.uleb128 0x21
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 208


 5986 0a50 01       		.uleb128 0x1
 5987 0a51 50       		.byte	0x50
 5988 0a52 02       		.uleb128 0x2
 5989 0a53 74       		.byte	0x74
 5990 0a54 00       		.sleb128 0
 5991 0a55 00       		.byte	0
 5992 0a56 1F       		.uleb128 0x1f
 5993 0a57 66000000 		.4byte	.LVL89
 5994 0a5b 88040000 		.4byte	0x488
 5995 0a5f 1F       		.uleb128 0x1f
 5996 0a60 6A000000 		.4byte	.LVL90
 5997 0a64 4C220000 		.4byte	0x224c
 5998 0a68 00       		.byte	0
 5999 0a69 27       		.uleb128 0x27
 6000 0a6a 840E0000 		.4byte	.LASF100
 6001 0a6e 01       		.byte	0x1
 6002 0a6f 7C05     		.2byte	0x57c
 6003 0a71 40010000 		.4byte	0x140
 6004 0a75 00000000 		.4byte	.LFB142
 6005 0a79 20000000 		.4byte	.LFE142-.LFB142
 6006 0a7d 01       		.uleb128 0x1
 6007 0a7e 9C       		.byte	0x9c
 6008 0a7f C60A0000 		.4byte	0xac6
 6009 0a83 19       		.uleb128 0x19
 6010 0a84 99070000 		.4byte	.LASF78
 6011 0a88 01       		.byte	0x1
 6012 0a89 7C05     		.2byte	0x57c
 6013 0a8b 43020000 		.4byte	0x243
 6014 0a8f 1C040000 		.4byte	.LLST28
 6015 0a93 1A       		.uleb128 0x1a
 6016 0a94 39060000 		.4byte	.LASF75
 6017 0a98 01       		.byte	0x1
 6018 0a99 7E05     		.2byte	0x57e
 6019 0a9b AF040000 		.4byte	0x4af
 6020 0a9f 3A040000 		.4byte	.LLST29
 6021 0aa3 1A       		.uleb128 0x1a
 6022 0aa4 98060000 		.4byte	.LASF101
 6023 0aa8 01       		.byte	0x1
 6024 0aa9 7F05     		.2byte	0x57f
 6025 0aab 40010000 		.4byte	0x140
 6026 0aaf 4D040000 		.4byte	.LLST30
 6027 0ab3 1F       		.uleb128 0x1f
 6028 0ab4 08000000 		.4byte	.LVL94
 6029 0ab8 35220000 		.4byte	0x2235
 6030 0abc 1F       		.uleb128 0x1f
 6031 0abd 16000000 		.4byte	.LVL97
 6032 0ac1 4C220000 		.4byte	0x224c
 6033 0ac5 00       		.byte	0
 6034 0ac6 27       		.uleb128 0x27
 6035 0ac7 7C0A0000 		.4byte	.LASF102
 6036 0acb 01       		.byte	0x1
 6037 0acc 9205     		.2byte	0x592
 6038 0ace 40010000 		.4byte	0x140
 6039 0ad2 00000000 		.4byte	.LFB143
 6040 0ad6 30000000 		.4byte	.LFE143-.LFB143
 6041 0ada 01       		.uleb128 0x1
 6042 0adb 9C       		.byte	0x9c
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 209


 6043 0adc 6B0B0000 		.4byte	0xb6b
 6044 0ae0 19       		.uleb128 0x19
 6045 0ae1 99070000 		.4byte	.LASF78
 6046 0ae5 01       		.byte	0x1
 6047 0ae6 9205     		.2byte	0x592
 6048 0ae8 43020000 		.4byte	0x243
 6049 0aec 6B040000 		.4byte	.LLST31
 6050 0af0 1A       		.uleb128 0x1a
 6051 0af1 39060000 		.4byte	.LASF75
 6052 0af5 01       		.byte	0x1
 6053 0af6 9405     		.2byte	0x594
 6054 0af8 AF040000 		.4byte	0x4af
 6055 0afc 89040000 		.4byte	.LLST32
 6056 0b00 23       		.uleb128 0x23
 6057 0b01 98060000 		.4byte	.LASF101
 6058 0b05 01       		.byte	0x1
 6059 0b06 9505     		.2byte	0x595
 6060 0b08 40010000 		.4byte	0x140
 6061 0b0c 01       		.uleb128 0x1
 6062 0b0d 50       		.byte	0x50
 6063 0b0e 2B       		.uleb128 0x2b
 6064 0b0f 170C0000 		.4byte	.LASF103
 6065 0b13 01       		.byte	0x1
 6066 0b14 9505     		.2byte	0x595
 6067 0b16 40010000 		.4byte	0x140
 6068 0b1a 2A       		.uleb128 0x2a
 6069 0b1b C9030000 		.4byte	0x3c9
 6070 0b1f 08000000 		.4byte	.LBB100
 6071 0b23 14000000 		.4byte	.LBE100-.LBB100
 6072 0b27 01       		.byte	0x1
 6073 0b28 A905     		.2byte	0x5a9
 6074 0b2a 430B0000 		.4byte	0xb43
 6075 0b2e 1C       		.uleb128 0x1c
 6076 0b2f 08000000 		.4byte	.LBB101
 6077 0b33 14000000 		.4byte	.LBE101-.LBB101
 6078 0b37 1D       		.uleb128 0x1d
 6079 0b38 D9030000 		.4byte	0x3d9
 6080 0b3c 1D       		.uleb128 0x1d
 6081 0b3d E4030000 		.4byte	0x3e4
 6082 0b41 00       		.byte	0
 6083 0b42 00       		.byte	0
 6084 0b43 2A       		.uleb128 0x2a
 6085 0b44 F0030000 		.4byte	0x3f0
 6086 0b48 26000000 		.4byte	.LBB102
 6087 0b4c 04000000 		.4byte	.LBE102-.LBB102
 6088 0b50 01       		.byte	0x1
 6089 0b51 B005     		.2byte	0x5b0
 6090 0b53 610B0000 		.4byte	0xb61
 6091 0b57 2C       		.uleb128 0x2c
 6092 0b58 FC030000 		.4byte	0x3fc
 6093 0b5c 9C040000 		.4byte	.LLST33
 6094 0b60 00       		.byte	0
 6095 0b61 1F       		.uleb128 0x1f
 6096 0b62 08000000 		.4byte	.LVL100
 6097 0b66 7A220000 		.4byte	0x227a
 6098 0b6a 00       		.byte	0
 6099 0b6b 29       		.uleb128 0x29
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 210


 6100 0b6c A6010000 		.4byte	.LASF105
 6101 0b70 01       		.byte	0x1
 6102 0b71 BA05     		.2byte	0x5ba
 6103 0b73 00000000 		.4byte	.LFB144
 6104 0b77 DC000000 		.4byte	.LFE144-.LFB144
 6105 0b7b 01       		.uleb128 0x1
 6106 0b7c 9C       		.byte	0x9c
 6107 0b7d 400C0000 		.4byte	0xc40
 6108 0b81 19       		.uleb128 0x19
 6109 0b82 99070000 		.4byte	.LASF78
 6110 0b86 01       		.byte	0x1
 6111 0b87 BA05     		.2byte	0x5ba
 6112 0b89 43020000 		.4byte	0x243
 6113 0b8d AF040000 		.4byte	.LLST34
 6114 0b91 19       		.uleb128 0x19
 6115 0b92 B8070000 		.4byte	.LASF106
 6116 0b96 01       		.byte	0x1
 6117 0b97 BA05     		.2byte	0x5ba
 6118 0b99 40010000 		.4byte	0x140
 6119 0b9d CD040000 		.4byte	.LLST35
 6120 0ba1 1A       		.uleb128 0x1a
 6121 0ba2 39060000 		.4byte	.LASF75
 6122 0ba6 01       		.byte	0x1
 6123 0ba7 BC05     		.2byte	0x5bc
 6124 0ba9 AF040000 		.4byte	0x4af
 6125 0bad F7040000 		.4byte	.LLST36
 6126 0bb1 1A       		.uleb128 0x1a
 6127 0bb2 D6090000 		.4byte	.LASF107
 6128 0bb6 01       		.byte	0x1
 6129 0bb7 BD05     		.2byte	0x5bd
 6130 0bb9 40010000 		.4byte	0x140
 6131 0bbd 0A050000 		.4byte	.LLST37
 6132 0bc1 1A       		.uleb128 0x1a
 6133 0bc2 59020000 		.4byte	.LASF108
 6134 0bc6 01       		.byte	0x1
 6135 0bc7 BD05     		.2byte	0x5bd
 6136 0bc9 40010000 		.4byte	0x140
 6137 0bcd 1D050000 		.4byte	.LLST38
 6138 0bd1 1A       		.uleb128 0x1a
 6139 0bd2 3F060000 		.4byte	.LASF109
 6140 0bd6 01       		.byte	0x1
 6141 0bd7 BE05     		.2byte	0x5be
 6142 0bd9 35010000 		.4byte	0x135
 6143 0bdd 30050000 		.4byte	.LLST39
 6144 0be1 2A       		.uleb128 0x2a
 6145 0be2 B1030000 		.4byte	0x3b1
 6146 0be6 04000000 		.4byte	.LBB104
 6147 0bea 12000000 		.4byte	.LBE104-.LBB104
 6148 0bee 01       		.byte	0x1
 6149 0bef C005     		.2byte	0x5c0
 6150 0bf1 050C0000 		.4byte	0xc05
 6151 0bf5 1C       		.uleb128 0x1c
 6152 0bf6 04000000 		.4byte	.LBB105
 6153 0bfa 12000000 		.4byte	.LBE105-.LBB105
 6154 0bfe 1D       		.uleb128 0x1d
 6155 0bff BD030000 		.4byte	0x3bd
 6156 0c03 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 211


 6157 0c04 00       		.byte	0
 6158 0c05 1F       		.uleb128 0x1f
 6159 0c06 26000000 		.4byte	.LVL108
 6160 0c0a 35220000 		.4byte	0x2235
 6161 0c0e 25       		.uleb128 0x25
 6162 0c0f 96000000 		.4byte	.LVL114
 6163 0c13 57220000 		.4byte	0x2257
 6164 0c17 220C0000 		.4byte	0xc22
 6165 0c1b 21       		.uleb128 0x21
 6166 0c1c 01       		.uleb128 0x1
 6167 0c1d 50       		.byte	0x50
 6168 0c1e 02       		.uleb128 0x2
 6169 0c1f 75       		.byte	0x75
 6170 0c20 00       		.sleb128 0
 6171 0c21 00       		.byte	0
 6172 0c22 25       		.uleb128 0x25
 6173 0c23 B8000000 		.4byte	.LVL115
 6174 0c27 40220000 		.4byte	0x2240
 6175 0c2b 360C0000 		.4byte	0xc36
 6176 0c2f 21       		.uleb128 0x21
 6177 0c30 01       		.uleb128 0x1
 6178 0c31 51       		.byte	0x51
 6179 0c32 02       		.uleb128 0x2
 6180 0c33 75       		.byte	0x75
 6181 0c34 00       		.sleb128 0
 6182 0c35 00       		.byte	0
 6183 0c36 1F       		.uleb128 0x1f
 6184 0c37 CE000000 		.4byte	.LVL117
 6185 0c3b 4C220000 		.4byte	0x224c
 6186 0c3f 00       		.byte	0
 6187 0c40 29       		.uleb128 0x29
 6188 0c41 7C060000 		.4byte	.LASF110
 6189 0c45 01       		.byte	0x1
 6190 0c46 F106     		.2byte	0x6f1
 6191 0c48 00000000 		.4byte	.LFB147
 6192 0c4c 88000000 		.4byte	.LFE147-.LFB147
 6193 0c50 01       		.uleb128 0x1
 6194 0c51 9C       		.byte	0x9c
 6195 0c52 E90C0000 		.4byte	0xce9
 6196 0c56 19       		.uleb128 0x19
 6197 0c57 3C0A0000 		.4byte	.LASF111
 6198 0c5b 01       		.byte	0x1
 6199 0c5c F106     		.2byte	0x6f1
 6200 0c5e 43020000 		.4byte	0x243
 6201 0c62 4F050000 		.4byte	.LLST40
 6202 0c66 1A       		.uleb128 0x1a
 6203 0c67 39060000 		.4byte	.LASF75
 6204 0c6b 01       		.byte	0x1
 6205 0c6c F306     		.2byte	0x6f3
 6206 0c6e E90C0000 		.4byte	0xce9
 6207 0c72 7B050000 		.4byte	.LLST41
 6208 0c76 2A       		.uleb128 0x2a
 6209 0c77 B1030000 		.4byte	0x3b1
 6210 0c7b 02000000 		.4byte	.LBB106
 6211 0c7f 12000000 		.4byte	.LBE106-.LBB106
 6212 0c83 01       		.byte	0x1
 6213 0c84 F606     		.2byte	0x6f6
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 212


 6214 0c86 9A0C0000 		.4byte	0xc9a
 6215 0c8a 1C       		.uleb128 0x1c
 6216 0c8b 02000000 		.4byte	.LBB107
 6217 0c8f 12000000 		.4byte	.LBE107-.LBB107
 6218 0c93 1D       		.uleb128 0x1d
 6219 0c94 BD030000 		.4byte	0x3bd
 6220 0c98 00       		.byte	0
 6221 0c99 00       		.byte	0
 6222 0c9a 1F       		.uleb128 0x1f
 6223 0c9b 28000000 		.4byte	.LVL121
 6224 0c9f 35220000 		.4byte	0x2235
 6225 0ca3 25       		.uleb128 0x25
 6226 0ca4 2E000000 		.4byte	.LVL122
 6227 0ca8 08040000 		.4byte	0x408
 6228 0cac B70C0000 		.4byte	0xcb7
 6229 0cb0 21       		.uleb128 0x21
 6230 0cb1 01       		.uleb128 0x1
 6231 0cb2 50       		.byte	0x50
 6232 0cb3 02       		.uleb128 0x2
 6233 0cb4 74       		.byte	0x74
 6234 0cb5 00       		.sleb128 0
 6235 0cb6 00       		.byte	0
 6236 0cb7 25       		.uleb128 0x25
 6237 0cb8 38000000 		.4byte	.LVL123
 6238 0cbc 57220000 		.4byte	0x2257
 6239 0cc0 CB0C0000 		.4byte	0xccb
 6240 0cc4 21       		.uleb128 0x21
 6241 0cc5 01       		.uleb128 0x1
 6242 0cc6 50       		.byte	0x50
 6243 0cc7 02       		.uleb128 0x2
 6244 0cc8 76       		.byte	0x76
 6245 0cc9 00       		.sleb128 0
 6246 0cca 00       		.byte	0
 6247 0ccb 25       		.uleb128 0x25
 6248 0ccc 5E000000 		.4byte	.LVL124
 6249 0cd0 40220000 		.4byte	0x2240
 6250 0cd4 DF0C0000 		.4byte	0xcdf
 6251 0cd8 21       		.uleb128 0x21
 6252 0cd9 01       		.uleb128 0x1
 6253 0cda 51       		.byte	0x51
 6254 0cdb 02       		.uleb128 0x2
 6255 0cdc 76       		.byte	0x76
 6256 0cdd 00       		.sleb128 0
 6257 0cde 00       		.byte	0
 6258 0cdf 1F       		.uleb128 0x1f
 6259 0ce0 7E000000 		.4byte	.LVL125
 6260 0ce4 4C220000 		.4byte	0x224c
 6261 0ce8 00       		.byte	0
 6262 0ce9 07       		.uleb128 0x7
 6263 0cea AF040000 		.4byte	0x4af
 6264 0cee 27       		.uleb128 0x27
 6265 0cef E6040000 		.4byte	.LASF112
 6266 0cf3 01       		.byte	0x1
 6267 0cf4 2707     		.2byte	0x727
 6268 0cf6 35010000 		.4byte	0x135
 6269 0cfa 00000000 		.4byte	.LFB148
 6270 0cfe A4000000 		.4byte	.LFE148-.LFB148
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 213


 6271 0d02 01       		.uleb128 0x1
 6272 0d03 9C       		.byte	0x9c
 6273 0d04 0E0E0000 		.4byte	0xe0e
 6274 0d08 19       		.uleb128 0x19
 6275 0d09 3C0A0000 		.4byte	.LASF111
 6276 0d0d 01       		.byte	0x1
 6277 0d0e 2707     		.2byte	0x727
 6278 0d10 43020000 		.4byte	0x243
 6279 0d14 A7050000 		.4byte	.LLST42
 6280 0d18 1A       		.uleb128 0x1a
 6281 0d19 3F060000 		.4byte	.LASF109
 6282 0d1d 01       		.byte	0x1
 6283 0d1e 2907     		.2byte	0x729
 6284 0d20 35010000 		.4byte	0x135
 6285 0d24 D3050000 		.4byte	.LLST43
 6286 0d28 1A       		.uleb128 0x1a
 6287 0d29 39060000 		.4byte	.LASF75
 6288 0d2d 01       		.byte	0x1
 6289 0d2e 2A07     		.2byte	0x72a
 6290 0d30 E90C0000 		.4byte	0xce9
 6291 0d34 14060000 		.4byte	.LLST44
 6292 0d38 2B       		.uleb128 0x2b
 6293 0d39 F00A0000 		.4byte	.LASF113
 6294 0d3d 01       		.byte	0x1
 6295 0d3e 2B07     		.2byte	0x72b
 6296 0d40 40010000 		.4byte	0x140
 6297 0d44 2A       		.uleb128 0x2a
 6298 0d45 B1030000 		.4byte	0x3b1
 6299 0d49 04000000 		.4byte	.LBB108
 6300 0d4d 14000000 		.4byte	.LBE108-.LBB108
 6301 0d51 01       		.byte	0x1
 6302 0d52 2D07     		.2byte	0x72d
 6303 0d54 680D0000 		.4byte	0xd68
 6304 0d58 1C       		.uleb128 0x1c
 6305 0d59 04000000 		.4byte	.LBB109
 6306 0d5d 14000000 		.4byte	.LBE109-.LBB109
 6307 0d61 1D       		.uleb128 0x1d
 6308 0d62 BD030000 		.4byte	0x3bd
 6309 0d66 00       		.byte	0
 6310 0d67 00       		.byte	0
 6311 0d68 2A       		.uleb128 0x2a
 6312 0d69 C9030000 		.4byte	0x3c9
 6313 0d6d 1C000000 		.4byte	.LBB110
 6314 0d71 14000000 		.4byte	.LBE110-.LBB110
 6315 0d75 01       		.byte	0x1
 6316 0d76 4107     		.2byte	0x741
 6317 0d78 910D0000 		.4byte	0xd91
 6318 0d7c 1C       		.uleb128 0x1c
 6319 0d7d 1C000000 		.4byte	.LBB111
 6320 0d81 14000000 		.4byte	.LBE111-.LBB111
 6321 0d85 1D       		.uleb128 0x1d
 6322 0d86 D9030000 		.4byte	0x3d9
 6323 0d8a 1D       		.uleb128 0x1d
 6324 0d8b E4030000 		.4byte	0x3e4
 6325 0d8f 00       		.byte	0
 6326 0d90 00       		.byte	0
 6327 0d91 2A       		.uleb128 0x2a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 214


 6328 0d92 F0030000 		.4byte	0x3f0
 6329 0d96 90000000 		.4byte	.LBB112
 6330 0d9a 04000000 		.4byte	.LBE112-.LBB112
 6331 0d9e 01       		.byte	0x1
 6332 0d9f 6507     		.2byte	0x765
 6333 0da1 AF0D0000 		.4byte	0xdaf
 6334 0da5 2C       		.uleb128 0x2c
 6335 0da6 FC030000 		.4byte	0x3fc
 6336 0daa 40060000 		.4byte	.LLST45
 6337 0dae 00       		.byte	0
 6338 0daf 1F       		.uleb128 0x1f
 6339 0db0 1C000000 		.4byte	.LVL130
 6340 0db4 7A220000 		.4byte	0x227a
 6341 0db8 25       		.uleb128 0x25
 6342 0db9 36000000 		.4byte	.LVL131
 6343 0dbd 08040000 		.4byte	0x408
 6344 0dc1 CC0D0000 		.4byte	0xdcc
 6345 0dc5 21       		.uleb128 0x21
 6346 0dc6 01       		.uleb128 0x1
 6347 0dc7 50       		.byte	0x50
 6348 0dc8 02       		.uleb128 0x2
 6349 0dc9 74       		.byte	0x74
 6350 0dca 00       		.sleb128 0
 6351 0dcb 00       		.byte	0
 6352 0dcc 25       		.uleb128 0x25
 6353 0dcd 5C000000 		.4byte	.LVL133
 6354 0dd1 57220000 		.4byte	0x2257
 6355 0dd5 E00D0000 		.4byte	0xde0
 6356 0dd9 21       		.uleb128 0x21
 6357 0dda 01       		.uleb128 0x1
 6358 0ddb 50       		.byte	0x50
 6359 0ddc 02       		.uleb128 0x2
 6360 0ddd 76       		.byte	0x76
 6361 0dde 00       		.sleb128 0
 6362 0ddf 00       		.byte	0
 6363 0de0 25       		.uleb128 0x25
 6364 0de1 7E000000 		.4byte	.LVL134
 6365 0de5 40220000 		.4byte	0x2240
 6366 0de9 F40D0000 		.4byte	0xdf4
 6367 0ded 21       		.uleb128 0x21
 6368 0dee 01       		.uleb128 0x1
 6369 0def 51       		.byte	0x51
 6370 0df0 02       		.uleb128 0x2
 6371 0df1 76       		.byte	0x76
 6372 0df2 00       		.sleb128 0
 6373 0df3 00       		.byte	0
 6374 0df4 20       		.uleb128 0x20
 6375 0df5 8A000000 		.4byte	.LVL136
 6376 0df9 40220000 		.4byte	0x2240
 6377 0dfd 21       		.uleb128 0x21
 6378 0dfe 01       		.uleb128 0x1
 6379 0dff 50       		.byte	0x50
 6380 0e00 05       		.uleb128 0x5
 6381 0e01 03       		.byte	0x3
 6382 0e02 14000000 		.4byte	.LANCHOR0+20
 6383 0e06 21       		.uleb128 0x21
 6384 0e07 01       		.uleb128 0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 215


 6385 0e08 51       		.byte	0x51
 6386 0e09 02       		.uleb128 0x2
 6387 0e0a 74       		.byte	0x74
 6388 0e0b 18       		.sleb128 24
 6389 0e0c 00       		.byte	0
 6390 0e0d 00       		.byte	0
 6391 0e0e 29       		.uleb128 0x29
 6392 0e0f 80040000 		.4byte	.LASF114
 6393 0e13 01       		.byte	0x1
 6394 0e14 6D07     		.2byte	0x76d
 6395 0e16 00000000 		.4byte	.LFB149
 6396 0e1a 7C000000 		.4byte	.LFE149-.LFB149
 6397 0e1e 01       		.uleb128 0x1
 6398 0e1f 9C       		.byte	0x9c
 6399 0e20 CA0E0000 		.4byte	0xeca
 6400 0e24 1A       		.uleb128 0x1a
 6401 0e25 01050000 		.4byte	.LASF74
 6402 0e29 01       		.byte	0x1
 6403 0e2a 6F07     		.2byte	0x76f
 6404 0e2c 35010000 		.4byte	0x135
 6405 0e30 53060000 		.4byte	.LLST46
 6406 0e34 2A       		.uleb128 0x2a
 6407 0e35 B1030000 		.4byte	0x3b1
 6408 0e39 22000000 		.4byte	.LBB114
 6409 0e3d 10000000 		.4byte	.LBE114-.LBB114
 6410 0e41 01       		.byte	0x1
 6411 0e42 B507     		.2byte	0x7b5
 6412 0e44 580E0000 		.4byte	0xe58
 6413 0e48 1C       		.uleb128 0x1c
 6414 0e49 22000000 		.4byte	.LBB115
 6415 0e4d 10000000 		.4byte	.LBE115-.LBB115
 6416 0e51 1D       		.uleb128 0x1d
 6417 0e52 BD030000 		.4byte	0x3bd
 6418 0e56 00       		.byte	0
 6419 0e57 00       		.byte	0
 6420 0e58 2A       		.uleb128 0x2a
 6421 0e59 B1030000 		.4byte	0x3b1
 6422 0e5d 52000000 		.4byte	.LBB116
 6423 0e61 12000000 		.4byte	.LBE116-.LBB116
 6424 0e65 01       		.byte	0x1
 6425 0e66 DC07     		.2byte	0x7dc
 6426 0e68 7C0E0000 		.4byte	0xe7c
 6427 0e6c 1C       		.uleb128 0x1c
 6428 0e6d 52000000 		.4byte	.LBB117
 6429 0e71 12000000 		.4byte	.LBE117-.LBB117
 6430 0e75 1D       		.uleb128 0x1d
 6431 0e76 BD030000 		.4byte	0x3bd
 6432 0e7a 00       		.byte	0
 6433 0e7b 00       		.byte	0
 6434 0e7c 25       		.uleb128 0x25
 6435 0e7d 16000000 		.4byte	.LVL140
 6436 0e81 53080000 		.4byte	0x853
 6437 0e85 B70E0000 		.4byte	0xeb7
 6438 0e89 21       		.uleb128 0x21
 6439 0e8a 01       		.uleb128 0x1
 6440 0e8b 50       		.byte	0x50
 6441 0e8c 05       		.uleb128 0x5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 216


 6442 0e8d 03       		.byte	0x3
 6443 0e8e 00000000 		.4byte	prvIdleTask
 6444 0e92 21       		.uleb128 0x21
 6445 0e93 01       		.uleb128 0x1
 6446 0e94 51       		.byte	0x51
 6447 0e95 05       		.uleb128 0x5
 6448 0e96 03       		.byte	0x3
 6449 0e97 00000000 		.4byte	.LC0
 6450 0e9b 21       		.uleb128 0x21
 6451 0e9c 01       		.uleb128 0x1
 6452 0e9d 52       		.byte	0x52
 6453 0e9e 02       		.uleb128 0x2
 6454 0e9f 08       		.byte	0x8
 6455 0ea0 80       		.byte	0x80
 6456 0ea1 21       		.uleb128 0x21
 6457 0ea2 01       		.uleb128 0x1
 6458 0ea3 53       		.byte	0x53
 6459 0ea4 01       		.uleb128 0x1
 6460 0ea5 30       		.byte	0x30
 6461 0ea6 21       		.uleb128 0x21
 6462 0ea7 02       		.uleb128 0x2
 6463 0ea8 7D       		.byte	0x7d
 6464 0ea9 00       		.sleb128 0
 6465 0eaa 01       		.uleb128 0x1
 6466 0eab 30       		.byte	0x30
 6467 0eac 21       		.uleb128 0x21
 6468 0ead 02       		.uleb128 0x2
 6469 0eae 7D       		.byte	0x7d
 6470 0eaf 04       		.sleb128 4
 6471 0eb0 05       		.uleb128 0x5
 6472 0eb1 03       		.byte	0x3
 6473 0eb2 1C010000 		.4byte	.LANCHOR0+284
 6474 0eb6 00       		.byte	0
 6475 0eb7 1F       		.uleb128 0x1f
 6476 0eb8 1E000000 		.4byte	.LVL141
 6477 0ebc 85220000 		.4byte	0x2285
 6478 0ec0 1F       		.uleb128 0x1f
 6479 0ec1 4A000000 		.4byte	.LVL142
 6480 0ec5 91220000 		.4byte	0x2291
 6481 0ec9 00       		.byte	0
 6482 0eca 29       		.uleb128 0x29
 6483 0ecb 1B0A0000 		.4byte	.LASF115
 6484 0ecf 01       		.byte	0x1
 6485 0ed0 E507     		.2byte	0x7e5
 6486 0ed2 00000000 		.4byte	.LFB150
 6487 0ed6 24000000 		.4byte	.LFE150-.LFB150
 6488 0eda 01       		.uleb128 0x1
 6489 0edb 9C       		.byte	0x9c
 6490 0edc 0E0F0000 		.4byte	0xf0e
 6491 0ee0 2A       		.uleb128 0x2a
 6492 0ee1 B1030000 		.4byte	0x3b1
 6493 0ee5 02000000 		.4byte	.LBB118
 6494 0ee9 10000000 		.4byte	.LBE118-.LBB118
 6495 0eed 01       		.byte	0x1
 6496 0eee EA07     		.2byte	0x7ea
 6497 0ef0 040F0000 		.4byte	0xf04
 6498 0ef4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 217


 6499 0ef5 02000000 		.4byte	.LBB119
 6500 0ef9 10000000 		.4byte	.LBE119-.LBB119
 6501 0efd 1D       		.uleb128 0x1d
 6502 0efe BD030000 		.4byte	0x3bd
 6503 0f02 00       		.byte	0
 6504 0f03 00       		.byte	0
 6505 0f04 1F       		.uleb128 0x1f
 6506 0f05 1E000000 		.4byte	.LVL146
 6507 0f09 9C220000 		.4byte	0x229c
 6508 0f0d 00       		.byte	0
 6509 0f0e 2D       		.uleb128 0x2d
 6510 0f0f 490B0000 		.4byte	.LASF155
 6511 0f13 01       		.byte	0x1
 6512 0f14 F007     		.2byte	0x7f0
 6513 0f16 00000000 		.4byte	.LFB151
 6514 0f1a 14000000 		.4byte	.LFE151-.LFB151
 6515 0f1e 01       		.uleb128 0x1
 6516 0f1f 9C       		.byte	0x9c
 6517 0f20 27       		.uleb128 0x27
 6518 0f21 E3010000 		.4byte	.LASF116
 6519 0f25 01       		.byte	0x1
 6520 0f26 A708     		.2byte	0x8a7
 6521 0f28 4B010000 		.4byte	0x14b
 6522 0f2c 00000000 		.4byte	.LFB153
 6523 0f30 0C000000 		.4byte	.LFE153-.LFB153
 6524 0f34 01       		.uleb128 0x1
 6525 0f35 9C       		.byte	0x9c
 6526 0f36 490F0000 		.4byte	0xf49
 6527 0f3a 23       		.uleb128 0x23
 6528 0f3b B10D0000 		.4byte	.LASF117
 6529 0f3f 01       		.byte	0x1
 6530 0f40 A908     		.2byte	0x8a9
 6531 0f42 4B010000 		.4byte	0x14b
 6532 0f46 01       		.uleb128 0x1
 6533 0f47 50       		.byte	0x50
 6534 0f48 00       		.byte	0
 6535 0f49 27       		.uleb128 0x27
 6536 0f4a 5B030000 		.4byte	.LASF118
 6537 0f4e 01       		.byte	0x1
 6538 0f4f B608     		.2byte	0x8b6
 6539 0f51 4B010000 		.4byte	0x14b
 6540 0f55 00000000 		.4byte	.LFB154
 6541 0f59 14000000 		.4byte	.LFE154-.LFB154
 6542 0f5d 01       		.uleb128 0x1
 6543 0f5e 9C       		.byte	0x9c
 6544 0f5f 880F0000 		.4byte	0xf88
 6545 0f63 23       		.uleb128 0x23
 6546 0f64 01050000 		.4byte	.LASF74
 6547 0f68 01       		.byte	0x1
 6548 0f69 B808     		.2byte	0x8b8
 6549 0f6b 4B010000 		.4byte	0x14b
 6550 0f6f 01       		.uleb128 0x1
 6551 0f70 50       		.byte	0x50
 6552 0f71 2E       		.uleb128 0x2e
 6553 0f72 F00A0000 		.4byte	.LASF113
 6554 0f76 01       		.byte	0x1
 6555 0f77 B908     		.2byte	0x8b9
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 218


 6556 0f79 40010000 		.4byte	0x140
 6557 0f7d 00       		.byte	0
 6558 0f7e 1F       		.uleb128 0x1f
 6559 0f7f 06000000 		.4byte	.LVL148
 6560 0f83 7A220000 		.4byte	0x227a
 6561 0f87 00       		.byte	0
 6562 0f88 2F       		.uleb128 0x2f
 6563 0f89 B10C0000 		.4byte	.LASF226
 6564 0f8d 01       		.byte	0x1
 6565 0f8e D508     		.2byte	0x8d5
 6566 0f90 40010000 		.4byte	0x140
 6567 0f94 00000000 		.4byte	.LFB155
 6568 0f98 0C000000 		.4byte	.LFE155-.LFB155
 6569 0f9c 01       		.uleb128 0x1
 6570 0f9d 9C       		.byte	0x9c
 6571 0f9e 27       		.uleb128 0x27
 6572 0f9f 890B0000 		.4byte	.LASF119
 6573 0fa3 01       		.byte	0x1
 6574 0fa4 DD08     		.2byte	0x8dd
 6575 0fa6 B2000000 		.4byte	0xb2
 6576 0faa 00000000 		.4byte	.LFB156
 6577 0fae 28000000 		.4byte	.LFE156-.LFB156
 6578 0fb2 01       		.uleb128 0x1
 6579 0fb3 9C       		.byte	0x9c
 6580 0fb4 F90F0000 		.4byte	0xff9
 6581 0fb8 19       		.uleb128 0x19
 6582 0fb9 50040000 		.4byte	.LASF120
 6583 0fbd 01       		.byte	0x1
 6584 0fbe DD08     		.2byte	0x8dd
 6585 0fc0 43020000 		.4byte	0x243
 6586 0fc4 7C060000 		.4byte	.LLST47
 6587 0fc8 1A       		.uleb128 0x1a
 6588 0fc9 39060000 		.4byte	.LASF75
 6589 0fcd 01       		.byte	0x1
 6590 0fce DF08     		.2byte	0x8df
 6591 0fd0 AF040000 		.4byte	0x4af
 6592 0fd4 8F060000 		.4byte	.LLST48
 6593 0fd8 1B       		.uleb128 0x1b
 6594 0fd9 B1030000 		.4byte	0x3b1
 6595 0fdd 0C000000 		.4byte	.LBB120
 6596 0fe1 12000000 		.4byte	.LBE120-.LBB120
 6597 0fe5 01       		.byte	0x1
 6598 0fe6 E408     		.2byte	0x8e4
 6599 0fe8 1C       		.uleb128 0x1c
 6600 0fe9 0C000000 		.4byte	.LBB121
 6601 0fed 12000000 		.4byte	.LBE121-.LBB121
 6602 0ff1 1D       		.uleb128 0x1d
 6603 0ff2 BD030000 		.4byte	0x3bd
 6604 0ff6 00       		.byte	0
 6605 0ff7 00       		.byte	0
 6606 0ff8 00       		.byte	0
 6607 0ff9 27       		.uleb128 0x27
 6608 0ffa B7030000 		.4byte	.LASF121
 6609 0ffe 01       		.byte	0x1
 6610 0fff 1D0A     		.2byte	0xa1d
 6611 1001 35010000 		.4byte	0x135
 6612 1005 00000000 		.4byte	.LFB157
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 219


 6613 1009 FC000000 		.4byte	.LFE157-.LFB157
 6614 100d 01       		.uleb128 0x1
 6615 100e 9C       		.byte	0x9c
 6616 100f DD100000 		.4byte	0x10dd
 6617 1013 1A       		.uleb128 0x1a
 6618 1014 39060000 		.4byte	.LASF75
 6619 1018 01       		.byte	0x1
 6620 1019 1F0A     		.2byte	0xa1f
 6621 101b AF040000 		.4byte	0x4af
 6622 101f AD060000 		.4byte	.LLST49
 6623 1023 1A       		.uleb128 0x1a
 6624 1024 C20B0000 		.4byte	.LASF28
 6625 1028 01       		.byte	0x1
 6626 1029 200A     		.2byte	0xa20
 6627 102b 4B010000 		.4byte	0x14b
 6628 102f CB060000 		.4byte	.LLST50
 6629 1033 1A       		.uleb128 0x1a
 6630 1034 88060000 		.4byte	.LASF122
 6631 1038 01       		.byte	0x1
 6632 1039 210A     		.2byte	0xa21
 6633 103b 35010000 		.4byte	0x135
 6634 103f DE060000 		.4byte	.LLST51
 6635 1043 30       		.uleb128 0x30
 6636 1044 00000000 		.4byte	.Ldebug_ranges0+0
 6637 1048 1A       		.uleb128 0x1a
 6638 1049 73090000 		.4byte	.LASF96
 6639 104d 01       		.byte	0x1
 6640 104e 2B0A     		.2byte	0xa2b
 6641 1050 4E080000 		.4byte	0x84e
 6642 1054 36070000 		.4byte	.LLST52
 6643 1058 28       		.uleb128 0x28
 6644 1059 1C000000 		.4byte	.LBB123
 6645 105d 34000000 		.4byte	.LBE123-.LBB123
 6646 1061 A3100000 		.4byte	0x10a3
 6647 1065 1A       		.uleb128 0x1a
 6648 1066 760C0000 		.4byte	.LASF123
 6649 106a 01       		.byte	0x1
 6650 106b 330A     		.2byte	0xa33
 6651 106d DD100000 		.4byte	0x10dd
 6652 1071 49070000 		.4byte	.LLST53
 6653 1075 2A       		.uleb128 0x2a
 6654 1076 B1030000 		.4byte	0x3b1
 6655 107a 22000000 		.4byte	.LBB124
 6656 107e 12000000 		.4byte	.LBE124-.LBB124
 6657 1082 01       		.byte	0x1
 6658 1083 330A     		.2byte	0xa33
 6659 1085 99100000 		.4byte	0x1099
 6660 1089 1C       		.uleb128 0x1c
 6661 108a 22000000 		.4byte	.LBB125
 6662 108e 12000000 		.4byte	.LBE125-.LBB125
 6663 1092 1D       		.uleb128 0x1d
 6664 1093 BD030000 		.4byte	0x3bd
 6665 1097 00       		.byte	0
 6666 1098 00       		.byte	0
 6667 1099 1F       		.uleb128 0x1f
 6668 109a 50000000 		.4byte	.LVL160
 6669 109e 88040000 		.4byte	0x488
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 220


 6670 10a2 00       		.byte	0
 6671 10a3 25       		.uleb128 0x25
 6672 10a4 9A000000 		.4byte	.LVL167
 6673 10a8 57220000 		.4byte	0x2257
 6674 10ac B7100000 		.4byte	0x10b7
 6675 10b0 21       		.uleb128 0x21
 6676 10b1 01       		.uleb128 0x1
 6677 10b2 50       		.byte	0x50
 6678 10b3 02       		.uleb128 0x2
 6679 10b4 78       		.byte	0x78
 6680 10b5 00       		.sleb128 0
 6681 10b6 00       		.byte	0
 6682 10b7 25       		.uleb128 0x25
 6683 10b8 A6000000 		.4byte	.LVL168
 6684 10bc 57220000 		.4byte	0x2257
 6685 10c0 CB100000 		.4byte	0x10cb
 6686 10c4 21       		.uleb128 0x21
 6687 10c5 01       		.uleb128 0x1
 6688 10c6 50       		.byte	0x50
 6689 10c7 02       		.uleb128 0x2
 6690 10c8 75       		.byte	0x75
 6691 10c9 18       		.sleb128 24
 6692 10ca 00       		.byte	0
 6693 10cb 20       		.uleb128 0x20
 6694 10cc CC000000 		.4byte	.LVL169
 6695 10d0 40220000 		.4byte	0x2240
 6696 10d4 21       		.uleb128 0x21
 6697 10d5 01       		.uleb128 0x1
 6698 10d6 51       		.byte	0x51
 6699 10d7 02       		.uleb128 0x2
 6700 10d8 78       		.byte	0x78
 6701 10d9 00       		.sleb128 0
 6702 10da 00       		.byte	0
 6703 10db 00       		.byte	0
 6704 10dc 00       		.byte	0
 6705 10dd 06       		.uleb128 0x6
 6706 10de 04       		.byte	0x4
 6707 10df 38020000 		.4byte	0x238
 6708 10e3 27       		.uleb128 0x27
 6709 10e4 4A0A0000 		.4byte	.LASF124
 6710 10e8 01       		.byte	0x1
 6711 10e9 3908     		.2byte	0x839
 6712 10eb 35010000 		.4byte	0x135
 6713 10ef 00000000 		.4byte	.LFB152
 6714 10f3 F0000000 		.4byte	.LFE152-.LFB152
 6715 10f7 01       		.uleb128 0x1
 6716 10f8 9C       		.byte	0x9c
 6717 10f9 C0110000 		.4byte	0x11c0
 6718 10fd 1A       		.uleb128 0x1a
 6719 10fe 39060000 		.4byte	.LASF75
 6720 1102 01       		.byte	0x1
 6721 1103 3B08     		.2byte	0x83b
 6722 1105 AF040000 		.4byte	0x4af
 6723 1109 6B070000 		.4byte	.LLST54
 6724 110d 1A       		.uleb128 0x1a
 6725 110e 6E010000 		.4byte	.LASF125
 6726 1112 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 221


 6727 1113 3C08     		.2byte	0x83c
 6728 1115 35010000 		.4byte	0x135
 6729 1119 AD070000 		.4byte	.LLST55
 6730 111d 2A       		.uleb128 0x2a
 6731 111e B1030000 		.4byte	0x3b1
 6732 1122 08000000 		.4byte	.LBB127
 6733 1126 12000000 		.4byte	.LBE127-.LBB127
 6734 112a 01       		.byte	0x1
 6735 112b 4008     		.2byte	0x840
 6736 112d 41110000 		.4byte	0x1141
 6737 1131 1C       		.uleb128 0x1c
 6738 1132 08000000 		.4byte	.LBB128
 6739 1136 12000000 		.4byte	.LBE128-.LBB128
 6740 113a 1D       		.uleb128 0x1d
 6741 113b BD030000 		.4byte	0x3bd
 6742 113f 00       		.byte	0
 6743 1140 00       		.byte	0
 6744 1141 28       		.uleb128 0x28
 6745 1142 9C000000 		.4byte	.LBB129
 6746 1146 22000000 		.4byte	.LBE129-.LBB129
 6747 114a 68110000 		.4byte	0x1168
 6748 114e 1A       		.uleb128 0x1a
 6749 114f 2D0A0000 		.4byte	.LASF126
 6750 1153 01       		.byte	0x1
 6751 1154 7408     		.2byte	0x874
 6752 1156 40010000 		.4byte	0x140
 6753 115a EF070000 		.4byte	.LLST56
 6754 115e 1F       		.uleb128 0x1f
 6755 115f A8000000 		.4byte	.LVL186
 6756 1163 F90F0000 		.4byte	0xff9
 6757 1167 00       		.byte	0
 6758 1168 1F       		.uleb128 0x1f
 6759 1169 20000000 		.4byte	.LVL176
 6760 116d 35220000 		.4byte	0x2235
 6761 1171 25       		.uleb128 0x25
 6762 1172 4E000000 		.4byte	.LVL179
 6763 1176 57220000 		.4byte	0x2257
 6764 117a 85110000 		.4byte	0x1185
 6765 117e 21       		.uleb128 0x21
 6766 117f 01       		.uleb128 0x1
 6767 1180 50       		.byte	0x50
 6768 1181 02       		.uleb128 0x2
 6769 1182 74       		.byte	0x74
 6770 1183 18       		.sleb128 24
 6771 1184 00       		.byte	0
 6772 1185 25       		.uleb128 0x25
 6773 1186 56000000 		.4byte	.LVL180
 6774 118a 57220000 		.4byte	0x2257
 6775 118e 99110000 		.4byte	0x1199
 6776 1192 21       		.uleb128 0x21
 6777 1193 01       		.uleb128 0x1
 6778 1194 50       		.byte	0x50
 6779 1195 02       		.uleb128 0x2
 6780 1196 76       		.byte	0x76
 6781 1197 00       		.sleb128 0
 6782 1198 00       		.byte	0
 6783 1199 25       		.uleb128 0x25
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 222


 6784 119a 78000000 		.4byte	.LVL181
 6785 119e 40220000 		.4byte	0x2240
 6786 11a2 AD110000 		.4byte	0x11ad
 6787 11a6 21       		.uleb128 0x21
 6788 11a7 01       		.uleb128 0x1
 6789 11a8 51       		.byte	0x51
 6790 11a9 02       		.uleb128 0x2
 6791 11aa 76       		.byte	0x76
 6792 11ab 00       		.sleb128 0
 6793 11ac 00       		.byte	0
 6794 11ad 1F       		.uleb128 0x1f
 6795 11ae 9C000000 		.4byte	.LVL184
 6796 11b2 88040000 		.4byte	0x488
 6797 11b6 1F       		.uleb128 0x1f
 6798 11b7 E4000000 		.4byte	.LVL194
 6799 11bb 4C220000 		.4byte	0x224c
 6800 11bf 00       		.byte	0
 6801 11c0 29       		.uleb128 0x29
 6802 11c1 B8020000 		.4byte	.LASF127
 6803 11c5 01       		.byte	0x1
 6804 11c6 B404     		.2byte	0x4b4
 6805 11c8 00000000 		.4byte	.LFB140
 6806 11cc AC000000 		.4byte	.LFE140-.LFB140
 6807 11d0 01       		.uleb128 0x1
 6808 11d1 9C       		.byte	0x9c
 6809 11d2 CC120000 		.4byte	0x12cc
 6810 11d6 19       		.uleb128 0x19
 6811 11d7 DE070000 		.4byte	.LASF128
 6812 11db 01       		.byte	0x1
 6813 11dc B404     		.2byte	0x4b4
 6814 11de D2120000 		.4byte	0x12d2
 6815 11e2 25080000 		.4byte	.LLST57
 6816 11e6 19       		.uleb128 0x19
 6817 11e7 750D0000 		.4byte	.LASF129
 6818 11eb 01       		.byte	0x1
 6819 11ec B404     		.2byte	0x4b4
 6820 11ee 4E080000 		.4byte	0x84e
 6821 11f2 51080000 		.4byte	.LLST58
 6822 11f6 1A       		.uleb128 0x1a
 6823 11f7 AC090000 		.4byte	.LASF95
 6824 11fb 01       		.byte	0x1
 6825 11fc B604     		.2byte	0x4b6
 6826 11fe 4B010000 		.4byte	0x14b
 6827 1202 7D080000 		.4byte	.LLST59
 6828 1206 23       		.uleb128 0x23
 6829 1207 6E010000 		.4byte	.LASF125
 6830 120b 01       		.byte	0x1
 6831 120c B704     		.2byte	0x4b7
 6832 120e 35010000 		.4byte	0x135
 6833 1212 01       		.uleb128 0x1
 6834 1213 50       		.byte	0x50
 6835 1214 1A       		.uleb128 0x1a
 6836 1215 070B0000 		.4byte	.LASF130
 6837 1219 01       		.byte	0x1
 6838 121a B704     		.2byte	0x4b7
 6839 121c 35010000 		.4byte	0x135
 6840 1220 90080000 		.4byte	.LLST60
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 223


 6841 1224 2A       		.uleb128 0x2a
 6842 1225 B1030000 		.4byte	0x3b1
 6843 1229 04000000 		.4byte	.LBB130
 6844 122d 14000000 		.4byte	.LBE130-.LBB130
 6845 1231 01       		.byte	0x1
 6846 1232 B904     		.2byte	0x4b9
 6847 1234 48120000 		.4byte	0x1248
 6848 1238 1C       		.uleb128 0x1c
 6849 1239 04000000 		.4byte	.LBB131
 6850 123d 14000000 		.4byte	.LBE131-.LBB131
 6851 1241 1D       		.uleb128 0x1d
 6852 1242 BD030000 		.4byte	0x3bd
 6853 1246 00       		.byte	0
 6854 1247 00       		.byte	0
 6855 1248 2A       		.uleb128 0x2a
 6856 1249 B1030000 		.4byte	0x3b1
 6857 124d 1A000000 		.4byte	.LBB132
 6858 1251 12000000 		.4byte	.LBE132-.LBB132
 6859 1255 01       		.byte	0x1
 6860 1256 BA04     		.2byte	0x4ba
 6861 1258 6C120000 		.4byte	0x126c
 6862 125c 1C       		.uleb128 0x1c
 6863 125d 1A000000 		.4byte	.LBB133
 6864 1261 12000000 		.4byte	.LBE133-.LBB133
 6865 1265 1D       		.uleb128 0x1d
 6866 1266 BD030000 		.4byte	0x3bd
 6867 126a 00       		.byte	0
 6868 126b 00       		.byte	0
 6869 126c 2A       		.uleb128 0x2a
 6870 126d B1030000 		.4byte	0x3b1
 6871 1271 34000000 		.4byte	.LBB134
 6872 1275 14000000 		.4byte	.LBE134-.LBB134
 6873 1279 01       		.byte	0x1
 6874 127a BB04     		.2byte	0x4bb
 6875 127c 90120000 		.4byte	0x1290
 6876 1280 1C       		.uleb128 0x1c
 6877 1281 34000000 		.4byte	.LBB135
 6878 1285 14000000 		.4byte	.LBE135-.LBB135
 6879 1289 1D       		.uleb128 0x1d
 6880 128a BD030000 		.4byte	0x3bd
 6881 128e 00       		.byte	0
 6882 128f 00       		.byte	0
 6883 1290 31       		.uleb128 0x31
 6884 1291 18000000 		.4byte	.Ldebug_ranges0+0x18
 6885 1295 B9120000 		.4byte	0x12b9
 6886 1299 1A       		.uleb128 0x1a
 6887 129a 73090000 		.4byte	.LASF96
 6888 129e 01       		.byte	0x1
 6889 129f C104     		.2byte	0x4c1
 6890 12a1 4E080000 		.4byte	0x84e
 6891 12a5 AF080000 		.4byte	.LLST61
 6892 12a9 20       		.uleb128 0x20
 6893 12aa 8C000000 		.4byte	.LVL206
 6894 12ae C0070000 		.4byte	0x7c0
 6895 12b2 21       		.uleb128 0x21
 6896 12b3 01       		.uleb128 0x1
 6897 12b4 51       		.byte	0x51
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 224


 6898 12b5 01       		.uleb128 0x1
 6899 12b6 30       		.byte	0x30
 6900 12b7 00       		.byte	0
 6901 12b8 00       		.byte	0
 6902 12b9 1F       		.uleb128 0x1f
 6903 12ba 4C000000 		.4byte	.LVL201
 6904 12be 0E0F0000 		.4byte	0xf0e
 6905 12c2 1F       		.uleb128 0x1f
 6906 12c3 90000000 		.4byte	.LVL207
 6907 12c7 E3100000 		.4byte	0x10e3
 6908 12cb 00       		.byte	0
 6909 12cc 06       		.uleb128 0x6
 6910 12cd 04       		.byte	0x4
 6911 12ce 4B010000 		.4byte	0x14b
 6912 12d2 07       		.uleb128 0x7
 6913 12d3 CC120000 		.4byte	0x12cc
 6914 12d7 29       		.uleb128 0x29
 6915 12d8 11010000 		.4byte	.LASF131
 6916 12dc 01       		.byte	0x1
 6917 12dd 0805     		.2byte	0x508
 6918 12df 00000000 		.4byte	.LFB141
 6919 12e3 50000000 		.4byte	.LFE141-.LFB141
 6920 12e7 01       		.uleb128 0x1
 6921 12e8 9C       		.byte	0x9c
 6922 12e9 5D130000 		.4byte	0x135d
 6923 12ed 19       		.uleb128 0x19
 6924 12ee 510D0000 		.4byte	.LASF132
 6925 12f2 01       		.byte	0x1
 6926 12f3 0805     		.2byte	0x508
 6927 12f5 4E080000 		.4byte	0x84e
 6928 12f9 C2080000 		.4byte	.LLST62
 6929 12fd 1A       		.uleb128 0x1a
 6930 12fe 6E010000 		.4byte	.LASF125
 6931 1302 01       		.byte	0x1
 6932 1303 0A05     		.2byte	0x50a
 6933 1305 35010000 		.4byte	0x135
 6934 1309 F9080000 		.4byte	.LLST63
 6935 130d 2A       		.uleb128 0x2a
 6936 130e B1030000 		.4byte	0x3b1
 6937 1312 0E000000 		.4byte	.LBB139
 6938 1316 12000000 		.4byte	.LBE139-.LBB139
 6939 131a 01       		.byte	0x1
 6940 131b 0F05     		.2byte	0x50f
 6941 131d 31130000 		.4byte	0x1331
 6942 1321 1C       		.uleb128 0x1c
 6943 1322 0E000000 		.4byte	.LBB140
 6944 1326 12000000 		.4byte	.LBE140-.LBB140
 6945 132a 1D       		.uleb128 0x1d
 6946 132b BD030000 		.4byte	0x3bd
 6947 132f 00       		.byte	0
 6948 1330 00       		.byte	0
 6949 1331 1F       		.uleb128 0x1f
 6950 1332 24000000 		.4byte	.LVL212
 6951 1336 0E0F0000 		.4byte	0xf0e
 6952 133a 25       		.uleb128 0x25
 6953 133b 2C000000 		.4byte	.LVL213
 6954 133f C0070000 		.4byte	0x7c0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 225


 6955 1343 53130000 		.4byte	0x1353
 6956 1347 21       		.uleb128 0x21
 6957 1348 01       		.uleb128 0x1
 6958 1349 50       		.byte	0x50
 6959 134a 02       		.uleb128 0x2
 6960 134b 74       		.byte	0x74
 6961 134c 00       		.sleb128 0
 6962 134d 21       		.uleb128 0x21
 6963 134e 01       		.uleb128 0x1
 6964 134f 51       		.byte	0x51
 6965 1350 01       		.uleb128 0x1
 6966 1351 30       		.byte	0x30
 6967 1352 00       		.byte	0
 6968 1353 1F       		.uleb128 0x1f
 6969 1354 30000000 		.4byte	.LVL214
 6970 1358 E3100000 		.4byte	0x10e3
 6971 135c 00       		.byte	0
 6972 135d 29       		.uleb128 0x29
 6973 135e 2B070000 		.4byte	.LASF133
 6974 1362 01       		.byte	0x1
 6975 1363 230B     		.2byte	0xb23
 6976 1365 00000000 		.4byte	.LFB158
 6977 1369 C8000000 		.4byte	.LFE158-.LFB158
 6978 136d 01       		.uleb128 0x1
 6979 136e 9C       		.byte	0x9c
 6980 136f 0C140000 		.4byte	0x140c
 6981 1373 28       		.uleb128 0x28
 6982 1374 1C000000 		.4byte	.LBB141
 6983 1378 36000000 		.4byte	.LBE141-.LBB141
 6984 137c AB130000 		.4byte	0x13ab
 6985 1380 1A       		.uleb128 0x1a
 6986 1381 ED0E0000 		.4byte	.LASF134
 6987 1385 01       		.byte	0x1
 6988 1386 4D0B     		.2byte	0xb4d
 6989 1388 12140000 		.4byte	0x1412
 6990 138c 2F090000 		.4byte	.LLST64
 6991 1390 32       		.uleb128 0x32
 6992 1391 FC090000 		.4byte	.LASF135
 6993 1395 01       		.byte	0x1
 6994 1396 4E0B     		.2byte	0xb4e
 6995 1398 05060000 		.4byte	0x605
 6996 139c A5CB96AD 		.sleb128 -1515870811
 6996      7A
 6997 13a1 1F       		.uleb128 0x1f
 6998 13a2 52000000 		.4byte	.LVL219
 6999 13a6 A7220000 		.4byte	0x22a7
 7000 13aa 00       		.byte	0
 7001 13ab 1C       		.uleb128 0x1c
 7002 13ac 52000000 		.4byte	.LBB142
 7003 13b0 76000000 		.4byte	.LBE142-.LBB142
 7004 13b4 1A       		.uleb128 0x1a
 7005 13b5 6D080000 		.4byte	.LASF136
 7006 13b9 01       		.byte	0x1
 7007 13ba 5B0B     		.2byte	0xb5b
 7008 13bc 40010000 		.4byte	0x140
 7009 13c0 42090000 		.4byte	.LLST65
 7010 13c4 2A       		.uleb128 0x2a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 226


 7011 13c5 B1030000 		.4byte	0x3b1
 7012 13c9 5C000000 		.4byte	.LBB143
 7013 13cd 12000000 		.4byte	.LBE143-.LBB143
 7014 13d1 01       		.byte	0x1
 7015 13d2 5B0B     		.2byte	0xb5b
 7016 13d4 E8130000 		.4byte	0x13e8
 7017 13d8 1C       		.uleb128 0x1c
 7018 13d9 5C000000 		.4byte	.LBB144
 7019 13dd 12000000 		.4byte	.LBE144-.LBB144
 7020 13e1 1D       		.uleb128 0x1d
 7021 13e2 BD030000 		.4byte	0x3bd
 7022 13e6 00       		.byte	0
 7023 13e7 00       		.byte	0
 7024 13e8 1C       		.uleb128 0x1c
 7025 13e9 80000000 		.4byte	.LBB145
 7026 13ed 3E000000 		.4byte	.LBE145-.LBB145
 7027 13f1 23       		.uleb128 0x23
 7028 13f2 0E060000 		.4byte	.LASF137
 7029 13f6 01       		.byte	0x1
 7030 13f7 5B0B     		.2byte	0xb5b
 7031 13f9 17140000 		.4byte	0x1417
 7032 13fd 0B       		.uleb128 0xb
 7033 13fe 73       		.byte	0x73
 7034 13ff 00       		.sleb128 0
 7035 1400 44       		.byte	0x44
 7036 1401 1E       		.byte	0x1e
 7037 1402 03       		.byte	0x3
 7038 1403 30000000 		.4byte	pxReadyTasksLists
 7039 1407 22       		.byte	0x22
 7040 1408 9F       		.byte	0x9f
 7041 1409 00       		.byte	0
 7042 140a 00       		.byte	0
 7043 140b 00       		.byte	0
 7044 140c 06       		.uleb128 0x6
 7045 140d 04       		.byte	0x4
 7046 140e 05060000 		.4byte	0x605
 7047 1412 07       		.uleb128 0x7
 7048 1413 0C140000 		.4byte	0x140c
 7049 1417 07       		.uleb128 0x7
 7050 1418 DD100000 		.4byte	0x10dd
 7051 141c 29       		.uleb128 0x29
 7052 141d 34000000 		.4byte	.LASF138
 7053 1421 01       		.byte	0x1
 7054 1422 5E06     		.2byte	0x65e
 7055 1424 00000000 		.4byte	.LFB145
 7056 1428 B8000000 		.4byte	.LFE145-.LFB145
 7057 142c 01       		.uleb128 0x1
 7058 142d 9C       		.byte	0x9c
 7059 142e F2140000 		.4byte	0x14f2
 7060 1432 19       		.uleb128 0x19
 7061 1433 49070000 		.4byte	.LASF139
 7062 1437 01       		.byte	0x1
 7063 1438 5E06     		.2byte	0x65e
 7064 143a 43020000 		.4byte	0x243
 7065 143e 60090000 		.4byte	.LLST66
 7066 1442 1A       		.uleb128 0x1a
 7067 1443 39060000 		.4byte	.LASF75
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 227


 7068 1447 01       		.byte	0x1
 7069 1448 6006     		.2byte	0x660
 7070 144a AF040000 		.4byte	0x4af
 7071 144e 7E090000 		.4byte	.LLST67
 7072 1452 2A       		.uleb128 0x2a
 7073 1453 B1030000 		.4byte	0x3b1
 7074 1457 6E000000 		.4byte	.LBB146
 7075 145b 12000000 		.4byte	.LBE146-.LBB146
 7076 145f 01       		.byte	0x1
 7077 1460 A206     		.2byte	0x6a2
 7078 1462 76140000 		.4byte	0x1476
 7079 1466 1C       		.uleb128 0x1c
 7080 1467 6E000000 		.4byte	.LBB147
 7081 146b 12000000 		.4byte	.LBE147-.LBB147
 7082 146f 1D       		.uleb128 0x1d
 7083 1470 BD030000 		.4byte	0x3bd
 7084 1474 00       		.byte	0
 7085 1475 00       		.byte	0
 7086 1476 1F       		.uleb128 0x1f
 7087 1477 08000000 		.4byte	.LVL226
 7088 147b 35220000 		.4byte	0x2235
 7089 147f 25       		.uleb128 0x25
 7090 1480 18000000 		.4byte	.LVL228
 7091 1484 57220000 		.4byte	0x2257
 7092 1488 93140000 		.4byte	0x1493
 7093 148c 21       		.uleb128 0x21
 7094 148d 01       		.uleb128 0x1
 7095 148e 50       		.byte	0x50
 7096 148f 02       		.uleb128 0x2
 7097 1490 75       		.byte	0x75
 7098 1491 00       		.sleb128 0
 7099 1492 00       		.byte	0
 7100 1493 25       		.uleb128 0x25
 7101 1494 24000000 		.4byte	.LVL229
 7102 1498 57220000 		.4byte	0x2257
 7103 149c A7140000 		.4byte	0x14a7
 7104 14a0 21       		.uleb128 0x21
 7105 14a1 01       		.uleb128 0x1
 7106 14a2 50       		.byte	0x50
 7107 14a3 02       		.uleb128 0x2
 7108 14a4 74       		.byte	0x74
 7109 14a5 18       		.sleb128 24
 7110 14a6 00       		.byte	0
 7111 14a7 25       		.uleb128 0x25
 7112 14a8 2C000000 		.4byte	.LVL230
 7113 14ac 40220000 		.4byte	0x2240
 7114 14b0 C4140000 		.4byte	0x14c4
 7115 14b4 21       		.uleb128 0x21
 7116 14b5 01       		.uleb128 0x1
 7117 14b6 50       		.byte	0x50
 7118 14b7 05       		.uleb128 0x5
 7119 14b8 03       		.byte	0x3
 7120 14b9 00000000 		.4byte	.LANCHOR0
 7121 14bd 21       		.uleb128 0x21
 7122 14be 01       		.uleb128 0x1
 7123 14bf 51       		.byte	0x51
 7124 14c0 02       		.uleb128 0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 228


 7125 14c1 75       		.byte	0x75
 7126 14c2 00       		.sleb128 0
 7127 14c3 00       		.byte	0
 7128 14c4 1F       		.uleb128 0x1f
 7129 14c5 40000000 		.4byte	.LVL231
 7130 14c9 4C220000 		.4byte	0x224c
 7131 14cd 1F       		.uleb128 0x1f
 7132 14ce 4C000000 		.4byte	.LVL232
 7133 14d2 35220000 		.4byte	0x2235
 7134 14d6 1F       		.uleb128 0x1f
 7135 14d7 50000000 		.4byte	.LVL233
 7136 14db 88040000 		.4byte	0x488
 7137 14df 1F       		.uleb128 0x1f
 7138 14e0 54000000 		.4byte	.LVL234
 7139 14e4 4C220000 		.4byte	0x224c
 7140 14e8 1F       		.uleb128 0x1f
 7141 14e9 AC000000 		.4byte	.LVL238
 7142 14ed 5D130000 		.4byte	0x135d
 7143 14f1 00       		.byte	0
 7144 14f2 29       		.uleb128 0x29
 7145 14f3 A1040000 		.4byte	.LASF140
 7146 14f7 01       		.byte	0x1
 7147 14f8 690B     		.2byte	0xb69
 7148 14fa 00000000 		.4byte	.LFB159
 7149 14fe 34000000 		.4byte	.LFE159-.LFB159
 7150 1502 01       		.uleb128 0x1
 7151 1503 9C       		.byte	0x9c
 7152 1504 6B150000 		.4byte	0x156b
 7153 1508 19       		.uleb128 0x19
 7154 1509 28000000 		.4byte	.LASF141
 7155 150d 01       		.byte	0x1
 7156 150e 690B     		.2byte	0xb69
 7157 1510 17140000 		.4byte	0x1417
 7158 1514 91090000 		.4byte	.LLST68
 7159 1518 19       		.uleb128 0x19
 7160 1519 6F020000 		.4byte	.LASF93
 7161 151d 01       		.byte	0x1
 7162 151e 690B     		.2byte	0xb69
 7163 1520 4E080000 		.4byte	0x84e
 7164 1524 B2090000 		.4byte	.LLST69
 7165 1528 2A       		.uleb128 0x2a
 7166 1529 B1030000 		.4byte	0x3b1
 7167 152d 02000000 		.4byte	.LBB148
 7168 1531 12000000 		.4byte	.LBE148-.LBB148
 7169 1535 01       		.byte	0x1
 7170 1536 6B0B     		.2byte	0xb6b
 7171 1538 4C150000 		.4byte	0x154c
 7172 153c 1C       		.uleb128 0x1c
 7173 153d 02000000 		.4byte	.LBB149
 7174 1541 12000000 		.4byte	.LBE149-.LBB149
 7175 1545 1D       		.uleb128 0x1d
 7176 1546 BD030000 		.4byte	0x3bd
 7177 154a 00       		.byte	0
 7178 154b 00       		.byte	0
 7179 154c 1F       		.uleb128 0x1f
 7180 154d 24000000 		.4byte	.LVL243
 7181 1551 63220000 		.4byte	0x2263
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 229


 7182 1555 20       		.uleb128 0x20
 7183 1556 2C000000 		.4byte	.LVL244
 7184 155a C0070000 		.4byte	0x7c0
 7185 155e 21       		.uleb128 0x21
 7186 155f 01       		.uleb128 0x1
 7187 1560 50       		.byte	0x50
 7188 1561 02       		.uleb128 0x2
 7189 1562 74       		.byte	0x74
 7190 1563 00       		.sleb128 0
 7191 1564 21       		.uleb128 0x21
 7192 1565 01       		.uleb128 0x1
 7193 1566 51       		.byte	0x51
 7194 1567 01       		.uleb128 0x1
 7195 1568 31       		.byte	0x31
 7196 1569 00       		.byte	0
 7197 156a 00       		.byte	0
 7198 156b 29       		.uleb128 0x29
 7199 156c 2B050000 		.4byte	.LASF142
 7200 1570 01       		.byte	0x1
 7201 1571 7A0B     		.2byte	0xb7a
 7202 1573 00000000 		.4byte	.LFB160
 7203 1577 5C000000 		.4byte	.LFE160-.LFB160
 7204 157b 01       		.uleb128 0x1
 7205 157c 9C       		.byte	0x9c
 7206 157d 24160000 		.4byte	0x1624
 7207 1581 19       		.uleb128 0x19
 7208 1582 28000000 		.4byte	.LASF141
 7209 1586 01       		.byte	0x1
 7210 1587 7A0B     		.2byte	0xb7a
 7211 1589 DD100000 		.4byte	0x10dd
 7212 158d DE090000 		.4byte	.LLST70
 7213 1591 19       		.uleb128 0x19
 7214 1592 C20B0000 		.4byte	.LASF28
 7215 1596 01       		.byte	0x1
 7216 1597 7A0B     		.2byte	0xb7a
 7217 1599 4E080000 		.4byte	0x84e
 7218 159d 2E0A0000 		.4byte	.LLST71
 7219 15a1 19       		.uleb128 0x19
 7220 15a2 6F020000 		.4byte	.LASF93
 7221 15a6 01       		.byte	0x1
 7222 15a7 7A0B     		.2byte	0xb7a
 7223 15a9 4E080000 		.4byte	0x84e
 7224 15ad 5A0A0000 		.4byte	.LLST72
 7225 15b1 2A       		.uleb128 0x2a
 7226 15b2 B1030000 		.4byte	0x3b1
 7227 15b6 02000000 		.4byte	.LBB150
 7228 15ba 14000000 		.4byte	.LBE150-.LBB150
 7229 15be 01       		.byte	0x1
 7230 15bf 7C0B     		.2byte	0xb7c
 7231 15c1 D5150000 		.4byte	0x15d5
 7232 15c5 1C       		.uleb128 0x1c
 7233 15c6 02000000 		.4byte	.LBB151
 7234 15ca 14000000 		.4byte	.LBE151-.LBB151
 7235 15ce 1D       		.uleb128 0x1d
 7236 15cf BD030000 		.4byte	0x3bd
 7237 15d3 00       		.byte	0
 7238 15d4 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 230


 7239 15d5 2A       		.uleb128 0x2a
 7240 15d6 B1030000 		.4byte	0x3b1
 7241 15da 1E000000 		.4byte	.LBB152
 7242 15de 12000000 		.4byte	.LBE152-.LBB152
 7243 15e2 01       		.byte	0x1
 7244 15e3 800B     		.2byte	0xb80
 7245 15e5 F9150000 		.4byte	0x15f9
 7246 15e9 1C       		.uleb128 0x1c
 7247 15ea 1E000000 		.4byte	.LBB153
 7248 15ee 12000000 		.4byte	.LBE153-.LBB153
 7249 15f2 1D       		.uleb128 0x1d
 7250 15f3 BD030000 		.4byte	0x3bd
 7251 15f7 00       		.byte	0
 7252 15f8 00       		.byte	0
 7253 15f9 25       		.uleb128 0x25
 7254 15fa 4E000000 		.4byte	.LVL255
 7255 15fe 40220000 		.4byte	0x2240
 7256 1602 0E160000 		.4byte	0x160e
 7257 1606 21       		.uleb128 0x21
 7258 1607 01       		.uleb128 0x1
 7259 1608 50       		.byte	0x50
 7260 1609 03       		.uleb128 0x3
 7261 160a F3       		.byte	0xf3
 7262 160b 01       		.uleb128 0x1
 7263 160c 50       		.byte	0x50
 7264 160d 00       		.byte	0
 7265 160e 20       		.uleb128 0x20
 7266 160f 56000000 		.4byte	.LVL256
 7267 1613 C0070000 		.4byte	0x7c0
 7268 1617 21       		.uleb128 0x21
 7269 1618 01       		.uleb128 0x1
 7270 1619 50       		.byte	0x50
 7271 161a 02       		.uleb128 0x2
 7272 161b 74       		.byte	0x74
 7273 161c 00       		.sleb128 0
 7274 161d 21       		.uleb128 0x21
 7275 161e 01       		.uleb128 0x1
 7276 161f 51       		.byte	0x51
 7277 1620 01       		.uleb128 0x1
 7278 1621 31       		.byte	0x31
 7279 1622 00       		.byte	0
 7280 1623 00       		.byte	0
 7281 1624 29       		.uleb128 0x29
 7282 1625 E90D0000 		.4byte	.LASF143
 7283 1629 01       		.byte	0x1
 7284 162a 940B     		.2byte	0xb94
 7285 162c 00000000 		.4byte	.LFB161
 7286 1630 3C000000 		.4byte	.LFE161-.LFB161
 7287 1634 01       		.uleb128 0x1
 7288 1635 9C       		.byte	0x9c
 7289 1636 AE160000 		.4byte	0x16ae
 7290 163a 19       		.uleb128 0x19
 7291 163b 28000000 		.4byte	.LASF141
 7292 163f 01       		.byte	0x1
 7293 1640 940B     		.2byte	0xb94
 7294 1642 17140000 		.4byte	0x1417
 7295 1646 860A0000 		.4byte	.LLST73
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 231


 7296 164a 19       		.uleb128 0x19
 7297 164b 6F020000 		.4byte	.LASF93
 7298 164f 01       		.byte	0x1
 7299 1650 940B     		.2byte	0xb94
 7300 1652 4B010000 		.4byte	0x14b
 7301 1656 A70A0000 		.4byte	.LLST74
 7302 165a 19       		.uleb128 0x19
 7303 165b 9F0C0000 		.4byte	.LASF144
 7304 165f 01       		.byte	0x1
 7305 1660 940B     		.2byte	0xb94
 7306 1662 49080000 		.4byte	0x849
 7307 1666 C50A0000 		.4byte	.LLST75
 7308 166a 2A       		.uleb128 0x2a
 7309 166b B1030000 		.4byte	0x3b1
 7310 166f 04000000 		.4byte	.LBB154
 7311 1673 16000000 		.4byte	.LBE154-.LBB154
 7312 1677 01       		.byte	0x1
 7313 1678 960B     		.2byte	0xb96
 7314 167a 8E160000 		.4byte	0x168e
 7315 167e 1C       		.uleb128 0x1c
 7316 167f 04000000 		.4byte	.LBB155
 7317 1683 16000000 		.4byte	.LBE155-.LBB155
 7318 1687 1D       		.uleb128 0x1d
 7319 1688 BD030000 		.4byte	0x3bd
 7320 168c 00       		.byte	0
 7321 168d 00       		.byte	0
 7322 168e 1F       		.uleb128 0x1f
 7323 168f 26000000 		.4byte	.LVL262
 7324 1693 40220000 		.4byte	0x2240
 7325 1697 20       		.uleb128 0x20
 7326 1698 34000000 		.4byte	.LVL264
 7327 169c C0070000 		.4byte	0x7c0
 7328 16a0 21       		.uleb128 0x21
 7329 16a1 01       		.uleb128 0x1
 7330 16a2 50       		.byte	0x50
 7331 16a3 02       		.uleb128 0x2
 7332 16a4 74       		.byte	0x74
 7333 16a5 00       		.sleb128 0
 7334 16a6 21       		.uleb128 0x21
 7335 16a7 01       		.uleb128 0x1
 7336 16a8 51       		.byte	0x51
 7337 16a9 02       		.uleb128 0x2
 7338 16aa 75       		.byte	0x75
 7339 16ab 00       		.sleb128 0
 7340 16ac 00       		.byte	0
 7341 16ad 00       		.byte	0
 7342 16ae 27       		.uleb128 0x27
 7343 16af A90B0000 		.4byte	.LASF145
 7344 16b3 01       		.byte	0x1
 7345 16b4 B30B     		.2byte	0xbb3
 7346 16b6 35010000 		.4byte	0x135
 7347 16ba 00000000 		.4byte	.LFB162
 7348 16be 88000000 		.4byte	.LFE162-.LFB162
 7349 16c2 01       		.uleb128 0x1
 7350 16c3 9C       		.byte	0x9c
 7351 16c4 72170000 		.4byte	0x1772
 7352 16c8 19       		.uleb128 0x19
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 232


 7353 16c9 28000000 		.4byte	.LASF141
 7354 16cd 01       		.byte	0x1
 7355 16ce B30B     		.2byte	0xbb3
 7356 16d0 7D170000 		.4byte	0x177d
 7357 16d4 F10A0000 		.4byte	.LLST76
 7358 16d8 1A       		.uleb128 0x1a
 7359 16d9 8F090000 		.4byte	.LASF146
 7360 16dd 01       		.byte	0x1
 7361 16de B50B     		.2byte	0xbb5
 7362 16e0 AF040000 		.4byte	0x4af
 7363 16e4 120B0000 		.4byte	.LLST77
 7364 16e8 1A       		.uleb128 0x1a
 7365 16e9 01050000 		.4byte	.LASF74
 7366 16ed 01       		.byte	0x1
 7367 16ee B60B     		.2byte	0xbb6
 7368 16f0 35010000 		.4byte	0x135
 7369 16f4 250B0000 		.4byte	.LLST78
 7370 16f8 2A       		.uleb128 0x2a
 7371 16f9 B1030000 		.4byte	0x3b1
 7372 16fd 08000000 		.4byte	.LBB156
 7373 1701 12000000 		.4byte	.LBE156-.LBB156
 7374 1705 01       		.byte	0x1
 7375 1706 C60B     		.2byte	0xbc6
 7376 1708 1C170000 		.4byte	0x171c
 7377 170c 1C       		.uleb128 0x1c
 7378 170d 08000000 		.4byte	.LBB157
 7379 1711 12000000 		.4byte	.LBE157-.LBB157
 7380 1715 1D       		.uleb128 0x1d
 7381 1716 BD030000 		.4byte	0x3bd
 7382 171a 00       		.byte	0
 7383 171b 00       		.byte	0
 7384 171c 25       		.uleb128 0x25
 7385 171d 24000000 		.4byte	.LVL270
 7386 1721 57220000 		.4byte	0x2257
 7387 1725 30170000 		.4byte	0x1730
 7388 1729 21       		.uleb128 0x21
 7389 172a 01       		.uleb128 0x1
 7390 172b 50       		.byte	0x50
 7391 172c 02       		.uleb128 0x2
 7392 172d 75       		.byte	0x75
 7393 172e 00       		.sleb128 0
 7394 172f 00       		.byte	0
 7395 1730 25       		.uleb128 0x25
 7396 1731 34000000 		.4byte	.LVL271
 7397 1735 57220000 		.4byte	0x2257
 7398 1739 44170000 		.4byte	0x1744
 7399 173d 21       		.uleb128 0x21
 7400 173e 01       		.uleb128 0x1
 7401 173f 50       		.byte	0x50
 7402 1740 02       		.uleb128 0x2
 7403 1741 75       		.byte	0x75
 7404 1742 00       		.sleb128 0
 7405 1743 00       		.byte	0
 7406 1744 25       		.uleb128 0x25
 7407 1745 56000000 		.4byte	.LVL272
 7408 1749 40220000 		.4byte	0x2240
 7409 174d 58170000 		.4byte	0x1758
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 233


 7410 1751 21       		.uleb128 0x21
 7411 1752 01       		.uleb128 0x1
 7412 1753 51       		.byte	0x51
 7413 1754 02       		.uleb128 0x2
 7414 1755 75       		.byte	0x75
 7415 1756 00       		.sleb128 0
 7416 1757 00       		.byte	0
 7417 1758 20       		.uleb128 0x20
 7418 1759 60000000 		.4byte	.LVL273
 7419 175d 40220000 		.4byte	0x2240
 7420 1761 21       		.uleb128 0x21
 7421 1762 01       		.uleb128 0x1
 7422 1763 50       		.byte	0x50
 7423 1764 05       		.uleb128 0x5
 7424 1765 03       		.byte	0x3
 7425 1766 14000000 		.4byte	.LANCHOR0+20
 7426 176a 21       		.uleb128 0x21
 7427 176b 01       		.uleb128 0x1
 7428 176c 51       		.byte	0x51
 7429 176d 02       		.uleb128 0x2
 7430 176e 75       		.byte	0x75
 7431 176f 00       		.sleb128 0
 7432 1770 00       		.byte	0
 7433 1771 00       		.byte	0
 7434 1772 06       		.uleb128 0x6
 7435 1773 04       		.byte	0x4
 7436 1774 78170000 		.4byte	0x1778
 7437 1778 07       		.uleb128 0x7
 7438 1779 38020000 		.4byte	0x238
 7439 177d 07       		.uleb128 0x7
 7440 177e 72170000 		.4byte	0x1772
 7441 1782 29       		.uleb128 0x29
 7442 1783 CB0E0000 		.4byte	.LASF147
 7443 1787 01       		.byte	0x1
 7444 1788 F70B     		.2byte	0xbf7
 7445 178a 00000000 		.4byte	.LFB163
 7446 178e 84000000 		.4byte	.LFE163-.LFB163
 7447 1792 01       		.uleb128 0x1
 7448 1793 9C       		.byte	0x9c
 7449 1794 3E180000 		.4byte	0x183e
 7450 1798 19       		.uleb128 0x19
 7451 1799 590C0000 		.4byte	.LASF148
 7452 179d 01       		.byte	0x1
 7453 179e F70B     		.2byte	0xbf7
 7454 17a0 32020000 		.4byte	0x232
 7455 17a4 440B0000 		.4byte	.LLST79
 7456 17a8 19       		.uleb128 0x19
 7457 17a9 C20B0000 		.4byte	.LASF28
 7458 17ad 01       		.byte	0x1
 7459 17ae F70B     		.2byte	0xbf7
 7460 17b0 4E080000 		.4byte	0x84e
 7461 17b4 650B0000 		.4byte	.LLST80
 7462 17b8 1A       		.uleb128 0x1a
 7463 17b9 8F090000 		.4byte	.LASF146
 7464 17bd 01       		.byte	0x1
 7465 17be F90B     		.2byte	0xbf9
 7466 17c0 AF040000 		.4byte	0x4af
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 234


 7467 17c4 860B0000 		.4byte	.LLST81
 7468 17c8 2A       		.uleb128 0x2a
 7469 17c9 B1030000 		.4byte	0x3b1
 7470 17cd 08000000 		.4byte	.LBB158
 7471 17d1 12000000 		.4byte	.LBE158-.LBB158
 7472 17d5 01       		.byte	0x1
 7473 17d6 FD0B     		.2byte	0xbfd
 7474 17d8 EC170000 		.4byte	0x17ec
 7475 17dc 1C       		.uleb128 0x1c
 7476 17dd 08000000 		.4byte	.LBB159
 7477 17e1 12000000 		.4byte	.LBE159-.LBB159
 7478 17e5 1D       		.uleb128 0x1d
 7479 17e6 BD030000 		.4byte	0x3bd
 7480 17ea 00       		.byte	0
 7481 17eb 00       		.byte	0
 7482 17ec 2A       		.uleb128 0x2a
 7483 17ed B1030000 		.4byte	0x3b1
 7484 17f1 26000000 		.4byte	.LBB160
 7485 17f5 12000000 		.4byte	.LBE160-.LBB160
 7486 17f9 01       		.byte	0x1
 7487 17fa 050C     		.2byte	0xc05
 7488 17fc 10180000 		.4byte	0x1810
 7489 1800 1C       		.uleb128 0x1c
 7490 1801 26000000 		.4byte	.LBB161
 7491 1805 12000000 		.4byte	.LBE161-.LBB161
 7492 1809 1D       		.uleb128 0x1d
 7493 180a BD030000 		.4byte	0x3bd
 7494 180e 00       		.byte	0
 7495 180f 00       		.byte	0
 7496 1810 1F       		.uleb128 0x1f
 7497 1811 3C000000 		.4byte	.LVL282
 7498 1815 57220000 		.4byte	0x2257
 7499 1819 25       		.uleb128 0x25
 7500 181a 44000000 		.4byte	.LVL283
 7501 181e 57220000 		.4byte	0x2257
 7502 1822 2D180000 		.4byte	0x182d
 7503 1826 21       		.uleb128 0x21
 7504 1827 01       		.uleb128 0x1
 7505 1828 50       		.byte	0x50
 7506 1829 02       		.uleb128 0x2
 7507 182a 76       		.byte	0x76
 7508 182b 00       		.sleb128 0
 7509 182c 00       		.byte	0
 7510 182d 20       		.uleb128 0x20
 7511 182e 6A000000 		.4byte	.LVL284
 7512 1832 40220000 		.4byte	0x2240
 7513 1836 21       		.uleb128 0x21
 7514 1837 01       		.uleb128 0x1
 7515 1838 51       		.byte	0x51
 7516 1839 02       		.uleb128 0x2
 7517 183a 76       		.byte	0x76
 7518 183b 00       		.sleb128 0
 7519 183c 00       		.byte	0
 7520 183d 00       		.byte	0
 7521 183e 29       		.uleb128 0x29
 7522 183f 960E0000 		.4byte	.LASF149
 7523 1843 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 235


 7524 1844 190C     		.2byte	0xc19
 7525 1846 00000000 		.4byte	.LFB164
 7526 184a 34000000 		.4byte	.LFE164-.LFB164
 7527 184e 01       		.uleb128 0x1
 7528 184f 9C       		.byte	0x9c
 7529 1850 9B180000 		.4byte	0x189b
 7530 1854 19       		.uleb128 0x19
 7531 1855 7E010000 		.4byte	.LASF150
 7532 1859 01       		.byte	0x1
 7533 185a 190C     		.2byte	0xc19
 7534 185c A1180000 		.4byte	0x18a1
 7535 1860 990B0000 		.4byte	.LLST82
 7536 1864 2A       		.uleb128 0x2a
 7537 1865 B1030000 		.4byte	0x3b1
 7538 1869 02000000 		.4byte	.LBB162
 7539 186d 12000000 		.4byte	.LBE162-.LBB162
 7540 1871 01       		.byte	0x1
 7541 1872 1B0C     		.2byte	0xc1b
 7542 1874 88180000 		.4byte	0x1888
 7543 1878 1C       		.uleb128 0x1c
 7544 1879 02000000 		.4byte	.LBB163
 7545 187d 12000000 		.4byte	.LBE163-.LBB163
 7546 1881 1D       		.uleb128 0x1d
 7547 1882 BD030000 		.4byte	0x3bd
 7548 1886 00       		.byte	0
 7549 1887 00       		.byte	0
 7550 1888 1F       		.uleb128 0x1f
 7551 1889 1C000000 		.4byte	.LVL288
 7552 188d 35220000 		.4byte	0x2235
 7553 1891 1F       		.uleb128 0x1f
 7554 1892 2E000000 		.4byte	.LVL289
 7555 1896 4C220000 		.4byte	0x224c
 7556 189a 00       		.byte	0
 7557 189b 06       		.uleb128 0x6
 7558 189c 04       		.byte	0x4
 7559 189d A9020000 		.4byte	0x2a9
 7560 18a1 07       		.uleb128 0x7
 7561 18a2 9B180000 		.4byte	0x189b
 7562 18a6 29       		.uleb128 0x29
 7563 18a7 2D0D0000 		.4byte	.LASF151
 7564 18ab 01       		.byte	0x1
 7565 18ac 250C     		.2byte	0xc25
 7566 18ae 00000000 		.4byte	.LFB165
 7567 18b2 14000000 		.4byte	.LFE165-.LFB165
 7568 18b6 01       		.uleb128 0x1
 7569 18b7 9C       		.byte	0x9c
 7570 18b8 CB180000 		.4byte	0x18cb
 7571 18bc 22       		.uleb128 0x22
 7572 18bd 7E010000 		.4byte	.LASF150
 7573 18c1 01       		.byte	0x1
 7574 18c2 250C     		.2byte	0xc25
 7575 18c4 A1180000 		.4byte	0x18a1
 7576 18c8 01       		.uleb128 0x1
 7577 18c9 50       		.byte	0x50
 7578 18ca 00       		.byte	0
 7579 18cb 27       		.uleb128 0x27
 7580 18cc 370C0000 		.4byte	.LASF152
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 236


 7581 18d0 01       		.byte	0x1
 7582 18d1 2D0C     		.2byte	0xc2d
 7583 18d3 35010000 		.4byte	0x135
 7584 18d7 00000000 		.4byte	.LFB166
 7585 18db 80000000 		.4byte	.LFE166-.LFB166
 7586 18df 01       		.uleb128 0x1
 7587 18e0 9C       		.byte	0x9c
 7588 18e1 AE190000 		.4byte	0x19ae
 7589 18e5 19       		.uleb128 0x19
 7590 18e6 7E010000 		.4byte	.LASF150
 7591 18ea 01       		.byte	0x1
 7592 18eb 2D0C     		.2byte	0xc2d
 7593 18ed A1180000 		.4byte	0x18a1
 7594 18f1 C50B0000 		.4byte	.LLST83
 7595 18f5 19       		.uleb128 0x19
 7596 18f6 EA060000 		.4byte	.LASF153
 7597 18fa 01       		.byte	0x1
 7598 18fb 2D0C     		.2byte	0xc2d
 7599 18fd D2120000 		.4byte	0x12d2
 7600 1901 F10B0000 		.4byte	.LLST84
 7601 1905 1A       		.uleb128 0x1a
 7602 1906 01050000 		.4byte	.LASF74
 7603 190a 01       		.byte	0x1
 7604 190b 2F0C     		.2byte	0xc2f
 7605 190d 35010000 		.4byte	0x135
 7606 1911 680C0000 		.4byte	.LLST85
 7607 1915 2A       		.uleb128 0x2a
 7608 1916 B1030000 		.4byte	0x3b1
 7609 191a 04000000 		.4byte	.LBB164
 7610 191e 14000000 		.4byte	.LBE164-.LBB164
 7611 1922 01       		.byte	0x1
 7612 1923 310C     		.2byte	0xc31
 7613 1925 39190000 		.4byte	0x1939
 7614 1929 1C       		.uleb128 0x1c
 7615 192a 04000000 		.4byte	.LBB165
 7616 192e 14000000 		.4byte	.LBE165-.LBB165
 7617 1932 1D       		.uleb128 0x1d
 7618 1933 BD030000 		.4byte	0x3bd
 7619 1937 00       		.byte	0
 7620 1938 00       		.byte	0
 7621 1939 2A       		.uleb128 0x2a
 7622 193a B1030000 		.4byte	0x3b1
 7623 193e 1A000000 		.4byte	.LBB166
 7624 1942 14000000 		.4byte	.LBE166-.LBB166
 7625 1946 01       		.byte	0x1
 7626 1947 320C     		.2byte	0xc32
 7627 1949 5D190000 		.4byte	0x195d
 7628 194d 1C       		.uleb128 0x1c
 7629 194e 1A000000 		.4byte	.LBB167
 7630 1952 14000000 		.4byte	.LBE167-.LBB167
 7631 1956 1D       		.uleb128 0x1d
 7632 1957 BD030000 		.4byte	0x3bd
 7633 195b 00       		.byte	0
 7634 195c 00       		.byte	0
 7635 195d 28       		.uleb128 0x28
 7636 195e 32000000 		.4byte	.LBB168
 7637 1962 42000000 		.4byte	.LBE168-.LBB168
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 237


 7638 1966 9B190000 		.4byte	0x199b
 7639 196a 1A       		.uleb128 0x1a
 7640 196b 73090000 		.4byte	.LASF96
 7641 196f 01       		.byte	0x1
 7642 1970 370C     		.2byte	0xc37
 7643 1972 4E080000 		.4byte	0x84e
 7644 1976 9E0C0000 		.4byte	.LLST86
 7645 197a 1A       		.uleb128 0x1a
 7646 197b 1E070000 		.4byte	.LASF154
 7647 197f 01       		.byte	0x1
 7648 1980 380C     		.2byte	0xc38
 7649 1982 4E080000 		.4byte	0x84e
 7650 1986 BC0C0000 		.4byte	.LLST87
 7651 198a 20       		.uleb128 0x20
 7652 198b 62000000 		.4byte	.LVL299
 7653 198f A6180000 		.4byte	0x18a6
 7654 1993 21       		.uleb128 0x21
 7655 1994 01       		.uleb128 0x1
 7656 1995 50       		.byte	0x50
 7657 1996 02       		.uleb128 0x2
 7658 1997 75       		.byte	0x75
 7659 1998 00       		.sleb128 0
 7660 1999 00       		.byte	0
 7661 199a 00       		.byte	0
 7662 199b 1F       		.uleb128 0x1f
 7663 199c 32000000 		.4byte	.LVL295
 7664 19a0 35220000 		.4byte	0x2235
 7665 19a4 1F       		.uleb128 0x1f
 7666 19a5 78000000 		.4byte	.LVL308
 7667 19a9 4C220000 		.4byte	0x224c
 7668 19ad 00       		.byte	0
 7669 19ae 2D       		.uleb128 0x2d
 7670 19af 950A0000 		.4byte	.LASF156
 7671 19b3 01       		.byte	0x1
 7672 19b4 6C0C     		.2byte	0xc6c
 7673 19b6 00000000 		.4byte	.LFB167
 7674 19ba 10000000 		.4byte	.LFE167-.LFB167
 7675 19be 01       		.uleb128 0x1
 7676 19bf 9C       		.byte	0x9c
 7677 19c0 29       		.uleb128 0x29
 7678 19c1 7C020000 		.4byte	.LASF157
 7679 19c5 01       		.byte	0x1
 7680 19c6 420D     		.2byte	0xd42
 7681 19c8 00000000 		.4byte	.LFB169
 7682 19cc 1C000000 		.4byte	.LFE169-.LFB169
 7683 19d0 01       		.uleb128 0x1
 7684 19d1 9C       		.byte	0x9c
 7685 19d2 151A0000 		.4byte	0x1a15
 7686 19d6 19       		.uleb128 0x19
 7687 19d7 9E020000 		.4byte	.LASF158
 7688 19db 01       		.byte	0x1
 7689 19dc 420D     		.2byte	0xd42
 7690 19de 43020000 		.4byte	0x243
 7691 19e2 DA0C0000 		.4byte	.LLST88
 7692 19e6 19       		.uleb128 0x19
 7693 19e7 A1060000 		.4byte	.LASF159
 7694 19eb 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 238


 7695 19ec 420D     		.2byte	0xd42
 7696 19ee 35010000 		.4byte	0x135
 7697 19f2 ED0C0000 		.4byte	.LLST89
 7698 19f6 22       		.uleb128 0x22
 7699 19f7 5C090000 		.4byte	.LASF160
 7700 19fb 01       		.byte	0x1
 7701 19fc 420D     		.2byte	0xd42
 7702 19fe B0000000 		.4byte	0xb0
 7703 1a02 01       		.uleb128 0x1
 7704 1a03 52       		.byte	0x52
 7705 1a04 1A       		.uleb128 0x1a
 7706 1a05 39060000 		.4byte	.LASF75
 7707 1a09 01       		.byte	0x1
 7708 1a0a 440D     		.2byte	0xd44
 7709 1a0c AF040000 		.4byte	0x4af
 7710 1a10 1B0D0000 		.4byte	.LLST90
 7711 1a14 00       		.byte	0
 7712 1a15 27       		.uleb128 0x27
 7713 1a16 5A0E0000 		.4byte	.LASF161
 7714 1a1a 01       		.byte	0x1
 7715 1a1b 520D     		.2byte	0xd52
 7716 1a1d B0000000 		.4byte	0xb0
 7717 1a21 00000000 		.4byte	.LFB170
 7718 1a25 20000000 		.4byte	.LFE170-.LFB170
 7719 1a29 01       		.uleb128 0x1
 7720 1a2a 9C       		.byte	0x9c
 7721 1a2b 701A0000 		.4byte	0x1a70
 7722 1a2f 19       		.uleb128 0x19
 7723 1a30 50040000 		.4byte	.LASF120
 7724 1a34 01       		.byte	0x1
 7725 1a35 520D     		.2byte	0xd52
 7726 1a37 43020000 		.4byte	0x243
 7727 1a3b 2E0D0000 		.4byte	.LLST91
 7728 1a3f 19       		.uleb128 0x19
 7729 1a40 A1060000 		.4byte	.LASF159
 7730 1a44 01       		.byte	0x1
 7731 1a45 520D     		.2byte	0xd52
 7732 1a47 35010000 		.4byte	0x135
 7733 1a4b 5A0D0000 		.4byte	.LLST92
 7734 1a4f 1A       		.uleb128 0x1a
 7735 1a50 6A090000 		.4byte	.LASF162
 7736 1a54 01       		.byte	0x1
 7737 1a55 540D     		.2byte	0xd54
 7738 1a57 B0000000 		.4byte	0xb0
 7739 1a5b 850D0000 		.4byte	.LLST93
 7740 1a5f 1A       		.uleb128 0x1a
 7741 1a60 39060000 		.4byte	.LASF75
 7742 1a64 01       		.byte	0x1
 7743 1a65 550D     		.2byte	0xd55
 7744 1a67 AF040000 		.4byte	0x4af
 7745 1a6b BB0D0000 		.4byte	.LLST94
 7746 1a6f 00       		.byte	0
 7747 1a70 27       		.uleb128 0x27
 7748 1a71 B4000000 		.4byte	.LASF163
 7749 1a75 01       		.byte	0x1
 7750 1a76 B70E     		.2byte	0xeb7
 7751 1a78 43020000 		.4byte	0x243
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 239


 7752 1a7c 00000000 		.4byte	.LFB175
 7753 1a80 0C000000 		.4byte	.LFE175-.LFB175
 7754 1a84 01       		.uleb128 0x1
 7755 1a85 9C       		.byte	0x9c
 7756 1a86 991A0000 		.4byte	0x1a99
 7757 1a8a 23       		.uleb128 0x23
 7758 1a8b 01050000 		.4byte	.LASF74
 7759 1a8f 01       		.byte	0x1
 7760 1a90 B90E     		.2byte	0xeb9
 7761 1a92 43020000 		.4byte	0x243
 7762 1a96 01       		.uleb128 0x1
 7763 1a97 50       		.byte	0x50
 7764 1a98 00       		.byte	0
 7765 1a99 27       		.uleb128 0x27
 7766 1a9a D90A0000 		.4byte	.LASF164
 7767 1a9e 01       		.byte	0x1
 7768 1a9f C80E     		.2byte	0xec8
 7769 1aa1 35010000 		.4byte	0x135
 7770 1aa5 00000000 		.4byte	.LFB176
 7771 1aa9 20000000 		.4byte	.LFE176-.LFB176
 7772 1aad 01       		.uleb128 0x1
 7773 1aae 9C       		.byte	0x9c
 7774 1aaf C21A0000 		.4byte	0x1ac2
 7775 1ab3 23       		.uleb128 0x23
 7776 1ab4 01050000 		.4byte	.LASF74
 7777 1ab8 01       		.byte	0x1
 7778 1ab9 CA0E     		.2byte	0xeca
 7779 1abb 35010000 		.4byte	0x135
 7780 1abf 01       		.uleb128 0x1
 7781 1ac0 50       		.byte	0x50
 7782 1ac1 00       		.byte	0
 7783 1ac2 27       		.uleb128 0x27
 7784 1ac3 8C000000 		.4byte	.LASF165
 7785 1ac7 01       		.byte	0x1
 7786 1ac8 2911     		.2byte	0x1129
 7787 1aca 4B010000 		.4byte	0x14b
 7788 1ace 00000000 		.4byte	.LFB177
 7789 1ad2 20000000 		.4byte	.LFE177-.LFB177
 7790 1ad6 01       		.uleb128 0x1
 7791 1ad7 9C       		.byte	0x9c
 7792 1ad8 EB1A0000 		.4byte	0x1aeb
 7793 1adc 23       		.uleb128 0x23
 7794 1add 98060000 		.4byte	.LASF101
 7795 1ae1 01       		.byte	0x1
 7796 1ae2 2B11     		.2byte	0x112b
 7797 1ae4 4B010000 		.4byte	0x14b
 7798 1ae8 01       		.uleb128 0x1
 7799 1ae9 50       		.byte	0x50
 7800 1aea 00       		.byte	0
 7801 1aeb 27       		.uleb128 0x27
 7802 1aec 88070000 		.4byte	.LASF166
 7803 1af0 01       		.byte	0x1
 7804 1af1 4A11     		.2byte	0x114a
 7805 1af3 EB000000 		.4byte	0xeb
 7806 1af7 00000000 		.4byte	.LFB178
 7807 1afb 80000000 		.4byte	.LFE178-.LFB178
 7808 1aff 01       		.uleb128 0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 240


 7809 1b00 9C       		.byte	0x9c
 7810 1b01 731B0000 		.4byte	0x1b73
 7811 1b05 19       		.uleb128 0x19
 7812 1b06 ED0C0000 		.4byte	.LASF167
 7813 1b0a 01       		.byte	0x1
 7814 1b0b 4A11     		.2byte	0x114a
 7815 1b0d 35010000 		.4byte	0x135
 7816 1b11 CE0D0000 		.4byte	.LLST95
 7817 1b15 19       		.uleb128 0x19
 7818 1b16 6F020000 		.4byte	.LASF93
 7819 1b1a 01       		.byte	0x1
 7820 1b1b 4A11     		.2byte	0x114a
 7821 1b1d 4B010000 		.4byte	0x14b
 7822 1b21 FA0D0000 		.4byte	.LLST96
 7823 1b25 1A       		.uleb128 0x1a
 7824 1b26 290E0000 		.4byte	.LASF168
 7825 1b2a 01       		.byte	0x1
 7826 1b2b 4C11     		.2byte	0x114c
 7827 1b2d EB000000 		.4byte	0xeb
 7828 1b31 260E0000 		.4byte	.LLST97
 7829 1b35 1F       		.uleb128 0x1f
 7830 1b36 0A000000 		.4byte	.LVL326
 7831 1b3a 35220000 		.4byte	0x2235
 7832 1b3e 25       		.uleb128 0x25
 7833 1b3f 2A000000 		.4byte	.LVL327
 7834 1b43 C0070000 		.4byte	0x7c0
 7835 1b47 571B0000 		.4byte	0x1b57
 7836 1b4b 21       		.uleb128 0x21
 7837 1b4c 01       		.uleb128 0x1
 7838 1b4d 50       		.byte	0x50
 7839 1b4e 02       		.uleb128 0x2
 7840 1b4f 74       		.byte	0x74
 7841 1b50 00       		.sleb128 0
 7842 1b51 21       		.uleb128 0x21
 7843 1b52 01       		.uleb128 0x1
 7844 1b53 51       		.byte	0x51
 7845 1b54 01       		.uleb128 0x1
 7846 1b55 31       		.byte	0x31
 7847 1b56 00       		.byte	0
 7848 1b57 1F       		.uleb128 0x1f
 7849 1b58 3E000000 		.4byte	.LVL328
 7850 1b5c 4C220000 		.4byte	0x224c
 7851 1b60 1F       		.uleb128 0x1f
 7852 1b61 42000000 		.4byte	.LVL329
 7853 1b65 35220000 		.4byte	0x2235
 7854 1b69 1F       		.uleb128 0x1f
 7855 1b6a 74000000 		.4byte	.LVL331
 7856 1b6e 4C220000 		.4byte	0x224c
 7857 1b72 00       		.byte	0
 7858 1b73 27       		.uleb128 0x27
 7859 1b74 190E0000 		.4byte	.LASF169
 7860 1b78 01       		.byte	0x1
 7861 1b79 8E11     		.2byte	0x118e
 7862 1b7b 35010000 		.4byte	0x135
 7863 1b7f 00000000 		.4byte	.LFB179
 7864 1b83 A4000000 		.4byte	.LFE179-.LFB179
 7865 1b87 01       		.uleb128 0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 241


 7866 1b88 9C       		.byte	0x9c
 7867 1b89 1B1C0000 		.4byte	0x1c1b
 7868 1b8d 19       		.uleb128 0x19
 7869 1b8e 4E060000 		.4byte	.LASF170
 7870 1b92 01       		.byte	0x1
 7871 1b93 8E11     		.2byte	0x118e
 7872 1b95 EB000000 		.4byte	0xeb
 7873 1b99 440E0000 		.4byte	.LLST98
 7874 1b9d 19       		.uleb128 0x19
 7875 1b9e AB0E0000 		.4byte	.LASF171
 7876 1ba2 01       		.byte	0x1
 7877 1ba3 8E11     		.2byte	0x118e
 7878 1ba5 EB000000 		.4byte	0xeb
 7879 1ba9 700E0000 		.4byte	.LLST99
 7880 1bad 19       		.uleb128 0x19
 7881 1bae 7B080000 		.4byte	.LASF172
 7882 1bb2 01       		.byte	0x1
 7883 1bb3 8E11     		.2byte	0x118e
 7884 1bb5 1B1C0000 		.4byte	0x1c1b
 7885 1bb9 B50E0000 		.4byte	.LLST100
 7886 1bbd 19       		.uleb128 0x19
 7887 1bbe 6F020000 		.4byte	.LASF93
 7888 1bc2 01       		.byte	0x1
 7889 1bc3 8E11     		.2byte	0x118e
 7890 1bc5 4B010000 		.4byte	0x14b
 7891 1bc9 FA0E0000 		.4byte	.LLST101
 7892 1bcd 1A       		.uleb128 0x1a
 7893 1bce 01050000 		.4byte	.LASF74
 7894 1bd2 01       		.byte	0x1
 7895 1bd3 9011     		.2byte	0x1190
 7896 1bd5 35010000 		.4byte	0x135
 7897 1bd9 260F0000 		.4byte	.LLST102
 7898 1bdd 1F       		.uleb128 0x1f
 7899 1bde 0E000000 		.4byte	.LVL334
 7900 1be2 35220000 		.4byte	0x2235
 7901 1be6 25       		.uleb128 0x25
 7902 1be7 40000000 		.4byte	.LVL335
 7903 1beb C0070000 		.4byte	0x7c0
 7904 1bef FF1B0000 		.4byte	0x1bff
 7905 1bf3 21       		.uleb128 0x21
 7906 1bf4 01       		.uleb128 0x1
 7907 1bf5 50       		.byte	0x50
 7908 1bf6 02       		.uleb128 0x2
 7909 1bf7 76       		.byte	0x76
 7910 1bf8 00       		.sleb128 0
 7911 1bf9 21       		.uleb128 0x21
 7912 1bfa 01       		.uleb128 0x1
 7913 1bfb 51       		.byte	0x51
 7914 1bfc 01       		.uleb128 0x1
 7915 1bfd 31       		.byte	0x31
 7916 1bfe 00       		.byte	0
 7917 1bff 1F       		.uleb128 0x1f
 7918 1c00 54000000 		.4byte	.LVL336
 7919 1c04 4C220000 		.4byte	0x224c
 7920 1c08 1F       		.uleb128 0x1f
 7921 1c09 58000000 		.4byte	.LVL337
 7922 1c0d 35220000 		.4byte	0x2235
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 242


 7923 1c11 1F       		.uleb128 0x1f
 7924 1c12 98000000 		.4byte	.LVL343
 7925 1c16 4C220000 		.4byte	0x224c
 7926 1c1a 00       		.byte	0
 7927 1c1b 06       		.uleb128 0x6
 7928 1c1c 04       		.byte	0x4
 7929 1c1d EB000000 		.4byte	0xeb
 7930 1c21 27       		.uleb128 0x27
 7931 1c22 0F0D0000 		.4byte	.LASF173
 7932 1c26 01       		.byte	0x1
 7933 1c27 DE11     		.2byte	0x11de
 7934 1c29 35010000 		.4byte	0x135
 7935 1c2d 00000000 		.4byte	.LFB180
 7936 1c31 E4000000 		.4byte	.LFE180-.LFB180
 7937 1c35 01       		.uleb128 0x1
 7938 1c36 9C       		.byte	0x9c
 7939 1c37 2E1D0000 		.4byte	0x1d2e
 7940 1c3b 19       		.uleb128 0x19
 7941 1c3c B9050000 		.4byte	.LASF174
 7942 1c40 01       		.byte	0x1
 7943 1c41 DE11     		.2byte	0x11de
 7944 1c43 43020000 		.4byte	0x243
 7945 1c47 500F0000 		.4byte	.LLST103
 7946 1c4b 19       		.uleb128 0x19
 7947 1c4c 84000000 		.4byte	.LASF175
 7948 1c50 01       		.byte	0x1
 7949 1c51 DE11     		.2byte	0x11de
 7950 1c53 EB000000 		.4byte	0xeb
 7951 1c57 7C0F0000 		.4byte	.LLST104
 7952 1c5b 19       		.uleb128 0x19
 7953 1c5c C8020000 		.4byte	.LASF176
 7954 1c60 01       		.byte	0x1
 7955 1c61 DE11     		.2byte	0x11de
 7956 1c63 79020000 		.4byte	0x279
 7957 1c67 C10F0000 		.4byte	.LLST105
 7958 1c6b 19       		.uleb128 0x19
 7959 1c6c 0A040000 		.4byte	.LASF177
 7960 1c70 01       		.byte	0x1
 7961 1c71 DE11     		.2byte	0x11de
 7962 1c73 1B1C0000 		.4byte	0x1c1b
 7963 1c77 E20F0000 		.4byte	.LLST106
 7964 1c7b 1A       		.uleb128 0x1a
 7965 1c7c 39060000 		.4byte	.LASF75
 7966 1c80 01       		.byte	0x1
 7967 1c81 E011     		.2byte	0x11e0
 7968 1c83 AF040000 		.4byte	0x4af
 7969 1c87 27100000 		.4byte	.LLST107
 7970 1c8b 1A       		.uleb128 0x1a
 7971 1c8c 01050000 		.4byte	.LASF74
 7972 1c90 01       		.byte	0x1
 7973 1c91 E111     		.2byte	0x11e1
 7974 1c93 35010000 		.4byte	0x135
 7975 1c97 48100000 		.4byte	.LLST108
 7976 1c9b 1A       		.uleb128 0x1a
 7977 1c9c 45030000 		.4byte	.LASF178
 7978 1ca0 01       		.byte	0x1
 7979 1ca1 E211     		.2byte	0x11e2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 243


 7980 1ca3 CA000000 		.4byte	0xca
 7981 1ca7 72100000 		.4byte	.LLST109
 7982 1cab 2A       		.uleb128 0x2a
 7983 1cac B1030000 		.4byte	0x3b1
 7984 1cb0 04000000 		.4byte	.LBB169
 7985 1cb4 1A000000 		.4byte	.LBE169-.LBB169
 7986 1cb8 01       		.byte	0x1
 7987 1cb9 E411     		.2byte	0x11e4
 7988 1cbb CF1C0000 		.4byte	0x1ccf
 7989 1cbf 1C       		.uleb128 0x1c
 7990 1cc0 04000000 		.4byte	.LBB170
 7991 1cc4 1A000000 		.4byte	.LBE170-.LBB170
 7992 1cc8 1D       		.uleb128 0x1d
 7993 1cc9 BD030000 		.4byte	0x3bd
 7994 1ccd 00       		.byte	0
 7995 1cce 00       		.byte	0
 7996 1ccf 2A       		.uleb128 0x2a
 7997 1cd0 B1030000 		.4byte	0x3b1
 7998 1cd4 9E000000 		.4byte	.LBB171
 7999 1cd8 12000000 		.4byte	.LBE171-.LBB171
 8000 1cdc 01       		.byte	0x1
 8001 1cdd 1C12     		.2byte	0x121c
 8002 1cdf F31C0000 		.4byte	0x1cf3
 8003 1ce3 1C       		.uleb128 0x1c
 8004 1ce4 9E000000 		.4byte	.LBB172
 8005 1ce8 12000000 		.4byte	.LBE172-.LBB172
 8006 1cec 1D       		.uleb128 0x1d
 8007 1ced BD030000 		.4byte	0x3bd
 8008 1cf1 00       		.byte	0
 8009 1cf2 00       		.byte	0
 8010 1cf3 1F       		.uleb128 0x1f
 8011 1cf4 22000000 		.4byte	.LVL350
 8012 1cf8 35220000 		.4byte	0x2235
 8013 1cfc 25       		.uleb128 0x25
 8014 1cfd 78000000 		.4byte	.LVL355
 8015 1d01 57220000 		.4byte	0x2257
 8016 1d05 101D0000 		.4byte	0x1d10
 8017 1d09 21       		.uleb128 0x21
 8018 1d0a 01       		.uleb128 0x1
 8019 1d0b 50       		.byte	0x50
 8020 1d0c 02       		.uleb128 0x2
 8021 1d0d 76       		.byte	0x76
 8022 1d0e 00       		.sleb128 0
 8023 1d0f 00       		.byte	0
 8024 1d10 25       		.uleb128 0x25
 8025 1d11 9A000000 		.4byte	.LVL356
 8026 1d15 40220000 		.4byte	0x2240
 8027 1d19 241D0000 		.4byte	0x1d24
 8028 1d1d 21       		.uleb128 0x21
 8029 1d1e 01       		.uleb128 0x1
 8030 1d1f 51       		.byte	0x51
 8031 1d20 02       		.uleb128 0x2
 8032 1d21 76       		.byte	0x76
 8033 1d22 00       		.sleb128 0
 8034 1d23 00       		.byte	0
 8035 1d24 1F       		.uleb128 0x1f
 8036 1d25 D2000000 		.4byte	.LVL358
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 244


 8037 1d29 4C220000 		.4byte	0x224c
 8038 1d2d 00       		.byte	0
 8039 1d2e 27       		.uleb128 0x27
 8040 1d2f E4000000 		.4byte	.LASF179
 8041 1d33 01       		.byte	0x1
 8042 1d34 4812     		.2byte	0x1248
 8043 1d36 35010000 		.4byte	0x135
 8044 1d3a 00000000 		.4byte	.LFB181
 8045 1d3e 20010000 		.4byte	.LFE181-.LFB181
 8046 1d42 01       		.uleb128 0x1
 8047 1d43 9C       		.byte	0x9c
 8048 1d44 AE1E0000 		.4byte	0x1eae
 8049 1d48 19       		.uleb128 0x19
 8050 1d49 B9050000 		.4byte	.LASF174
 8051 1d4d 01       		.byte	0x1
 8052 1d4e 4812     		.2byte	0x1248
 8053 1d50 43020000 		.4byte	0x243
 8054 1d54 85100000 		.4byte	.LLST110
 8055 1d58 19       		.uleb128 0x19
 8056 1d59 84000000 		.4byte	.LASF175
 8057 1d5d 01       		.byte	0x1
 8058 1d5e 4812     		.2byte	0x1248
 8059 1d60 EB000000 		.4byte	0xeb
 8060 1d64 B1100000 		.4byte	.LLST111
 8061 1d68 19       		.uleb128 0x19
 8062 1d69 C8020000 		.4byte	.LASF176
 8063 1d6d 01       		.byte	0x1
 8064 1d6e 4812     		.2byte	0x1248
 8065 1d70 79020000 		.4byte	0x279
 8066 1d74 F6100000 		.4byte	.LLST112
 8067 1d78 19       		.uleb128 0x19
 8068 1d79 0A040000 		.4byte	.LASF177
 8069 1d7d 01       		.byte	0x1
 8070 1d7e 4812     		.2byte	0x1248
 8071 1d80 1B1C0000 		.4byte	0x1c1b
 8072 1d84 17110000 		.4byte	.LLST113
 8073 1d88 19       		.uleb128 0x19
 8074 1d89 2B030000 		.4byte	.LASF180
 8075 1d8d 01       		.byte	0x1
 8076 1d8e 4812     		.2byte	0x1248
 8077 1d90 AE1E0000 		.4byte	0x1eae
 8078 1d94 5C110000 		.4byte	.LLST114
 8079 1d98 1A       		.uleb128 0x1a
 8080 1d99 39060000 		.4byte	.LASF75
 8081 1d9d 01       		.byte	0x1
 8082 1d9e 4A12     		.2byte	0x124a
 8083 1da0 AF040000 		.4byte	0x4af
 8084 1da4 7C110000 		.4byte	.LLST115
 8085 1da8 1A       		.uleb128 0x1a
 8086 1da9 45030000 		.4byte	.LASF178
 8087 1dad 01       		.byte	0x1
 8088 1dae 4B12     		.2byte	0x124b
 8089 1db0 CA000000 		.4byte	0xca
 8090 1db4 9D110000 		.4byte	.LLST116
 8091 1db8 1A       		.uleb128 0x1a
 8092 1db9 01050000 		.4byte	.LASF74
 8093 1dbd 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 245


 8094 1dbe 4C12     		.2byte	0x124c
 8095 1dc0 35010000 		.4byte	0x135
 8096 1dc4 B0110000 		.4byte	.LLST117
 8097 1dc8 2B       		.uleb128 0x2b
 8098 1dc9 F00A0000 		.4byte	.LASF113
 8099 1dcd 01       		.byte	0x1
 8100 1dce 4D12     		.2byte	0x124d
 8101 1dd0 40010000 		.4byte	0x140
 8102 1dd4 2A       		.uleb128 0x2a
 8103 1dd5 B1030000 		.4byte	0x3b1
 8104 1dd9 08000000 		.4byte	.LBB173
 8105 1ddd 1A000000 		.4byte	.LBE173-.LBB173
 8106 1de1 01       		.byte	0x1
 8107 1de2 4F12     		.2byte	0x124f
 8108 1de4 F81D0000 		.4byte	0x1df8
 8109 1de8 1C       		.uleb128 0x1c
 8110 1de9 08000000 		.4byte	.LBB174
 8111 1ded 1A000000 		.4byte	.LBE174-.LBB174
 8112 1df1 1D       		.uleb128 0x1d
 8113 1df2 BD030000 		.4byte	0x3bd
 8114 1df6 00       		.byte	0
 8115 1df7 00       		.byte	0
 8116 1df8 2A       		.uleb128 0x2a
 8117 1df9 C9030000 		.4byte	0x3c9
 8118 1dfd 26000000 		.4byte	.LBB175
 8119 1e01 14000000 		.4byte	.LBE175-.LBB175
 8120 1e05 01       		.byte	0x1
 8121 1e06 6512     		.2byte	0x1265
 8122 1e08 211E0000 		.4byte	0x1e21
 8123 1e0c 1C       		.uleb128 0x1c
 8124 1e0d 26000000 		.4byte	.LBB176
 8125 1e11 14000000 		.4byte	.LBE176-.LBB176
 8126 1e15 1D       		.uleb128 0x1d
 8127 1e16 D9030000 		.4byte	0x3d9
 8128 1e1a 1D       		.uleb128 0x1d
 8129 1e1b E4030000 		.4byte	0x3e4
 8130 1e1f 00       		.byte	0
 8131 1e20 00       		.byte	0
 8132 1e21 2A       		.uleb128 0x2a
 8133 1e22 B1030000 		.4byte	0x3b1
 8134 1e26 98000000 		.4byte	.LBB177
 8135 1e2a 12000000 		.4byte	.LBE177-.LBB177
 8136 1e2e 01       		.byte	0x1
 8137 1e2f 9612     		.2byte	0x1296
 8138 1e31 451E0000 		.4byte	0x1e45
 8139 1e35 1C       		.uleb128 0x1c
 8140 1e36 98000000 		.4byte	.LBB178
 8141 1e3a 12000000 		.4byte	.LBE178-.LBB178
 8142 1e3e 1D       		.uleb128 0x1d
 8143 1e3f BD030000 		.4byte	0x3bd
 8144 1e43 00       		.byte	0
 8145 1e44 00       		.byte	0
 8146 1e45 2A       		.uleb128 0x2a
 8147 1e46 F0030000 		.4byte	0x3f0
 8148 1e4a 08010000 		.4byte	.LBB179
 8149 1e4e 04000000 		.4byte	.LBE179-.LBB179
 8150 1e52 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 246


 8151 1e53 BA12     		.2byte	0x12ba
 8152 1e55 631E0000 		.4byte	0x1e63
 8153 1e59 2C       		.uleb128 0x2c
 8154 1e5a FC030000 		.4byte	0x3fc
 8155 1e5e DA110000 		.4byte	.LLST118
 8156 1e62 00       		.byte	0
 8157 1e63 1F       		.uleb128 0x1f
 8158 1e64 26000000 		.4byte	.LVL364
 8159 1e68 7A220000 		.4byte	0x227a
 8160 1e6c 25       		.uleb128 0x25
 8161 1e6d BC000000 		.4byte	.LVL370
 8162 1e71 57220000 		.4byte	0x2257
 8163 1e75 801E0000 		.4byte	0x1e80
 8164 1e79 21       		.uleb128 0x21
 8165 1e7a 01       		.uleb128 0x1
 8166 1e7b 50       		.byte	0x50
 8167 1e7c 02       		.uleb128 0x2
 8168 1e7d 78       		.byte	0x78
 8169 1e7e 00       		.sleb128 0
 8170 1e7f 00       		.byte	0
 8171 1e80 25       		.uleb128 0x25
 8172 1e81 DE000000 		.4byte	.LVL371
 8173 1e85 40220000 		.4byte	0x2240
 8174 1e89 941E0000 		.4byte	0x1e94
 8175 1e8d 21       		.uleb128 0x21
 8176 1e8e 01       		.uleb128 0x1
 8177 1e8f 51       		.byte	0x51
 8178 1e90 02       		.uleb128 0x2
 8179 1e91 78       		.byte	0x78
 8180 1e92 00       		.sleb128 0
 8181 1e93 00       		.byte	0
 8182 1e94 20       		.uleb128 0x20
 8183 1e95 EA000000 		.4byte	.LVL373
 8184 1e99 40220000 		.4byte	0x2240
 8185 1e9d 21       		.uleb128 0x21
 8186 1e9e 01       		.uleb128 0x1
 8187 1e9f 50       		.byte	0x50
 8188 1ea0 05       		.uleb128 0x5
 8189 1ea1 03       		.byte	0x3
 8190 1ea2 14000000 		.4byte	.LANCHOR0+20
 8191 1ea6 21       		.uleb128 0x21
 8192 1ea7 01       		.uleb128 0x1
 8193 1ea8 51       		.byte	0x51
 8194 1ea9 02       		.uleb128 0x2
 8195 1eaa 74       		.byte	0x74
 8196 1eab 18       		.sleb128 24
 8197 1eac 00       		.byte	0
 8198 1ead 00       		.byte	0
 8199 1eae 06       		.uleb128 0x6
 8200 1eaf 04       		.byte	0x4
 8201 1eb0 35010000 		.4byte	0x135
 8202 1eb4 29       		.uleb128 0x29
 8203 1eb5 A60A0000 		.4byte	.LASF181
 8204 1eb9 01       		.byte	0x1
 8205 1eba C412     		.2byte	0x12c4
 8206 1ebc 00000000 		.4byte	.LFB182
 8207 1ec0 CC000000 		.4byte	.LFE182-.LFB182
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 247


 8208 1ec4 01       		.uleb128 0x1
 8209 1ec5 9C       		.byte	0x9c
 8210 1ec6 F01F0000 		.4byte	0x1ff0
 8211 1eca 19       		.uleb128 0x19
 8212 1ecb B9050000 		.4byte	.LASF174
 8213 1ecf 01       		.byte	0x1
 8214 1ed0 C412     		.2byte	0x12c4
 8215 1ed2 43020000 		.4byte	0x243
 8216 1ed6 ED110000 		.4byte	.LLST119
 8217 1eda 19       		.uleb128 0x19
 8218 1edb 2B030000 		.4byte	.LASF180
 8219 1edf 01       		.byte	0x1
 8220 1ee0 C412     		.2byte	0x12c4
 8221 1ee2 AE1E0000 		.4byte	0x1eae
 8222 1ee6 19120000 		.4byte	.LLST120
 8223 1eea 1A       		.uleb128 0x1a
 8224 1eeb 39060000 		.4byte	.LASF75
 8225 1eef 01       		.byte	0x1
 8226 1ef0 C612     		.2byte	0x12c6
 8227 1ef2 AF040000 		.4byte	0x4af
 8228 1ef6 45120000 		.4byte	.LLST121
 8229 1efa 1A       		.uleb128 0x1a
 8230 1efb 45030000 		.4byte	.LASF178
 8231 1eff 01       		.byte	0x1
 8232 1f00 C712     		.2byte	0x12c7
 8233 1f02 CA000000 		.4byte	0xca
 8234 1f06 66120000 		.4byte	.LLST122
 8235 1f0a 2B       		.uleb128 0x2b
 8236 1f0b F00A0000 		.4byte	.LASF113
 8237 1f0f 01       		.byte	0x1
 8238 1f10 C812     		.2byte	0x12c8
 8239 1f12 40010000 		.4byte	0x140
 8240 1f16 2A       		.uleb128 0x2a
 8241 1f17 B1030000 		.4byte	0x3b1
 8242 1f1b 04000000 		.4byte	.LBB181
 8243 1f1f 16000000 		.4byte	.LBE181-.LBB181
 8244 1f23 01       		.byte	0x1
 8245 1f24 CA12     		.2byte	0x12ca
 8246 1f26 3A1F0000 		.4byte	0x1f3a
 8247 1f2a 1C       		.uleb128 0x1c
 8248 1f2b 04000000 		.4byte	.LBB182
 8249 1f2f 16000000 		.4byte	.LBE182-.LBB182
 8250 1f33 1D       		.uleb128 0x1d
 8251 1f34 BD030000 		.4byte	0x3bd
 8252 1f38 00       		.byte	0
 8253 1f39 00       		.byte	0
 8254 1f3a 2A       		.uleb128 0x2a
 8255 1f3b C9030000 		.4byte	0x3c9
 8256 1f3f 1E000000 		.4byte	.LBB183
 8257 1f43 14000000 		.4byte	.LBE183-.LBB183
 8258 1f47 01       		.byte	0x1
 8259 1f48 E012     		.2byte	0x12e0
 8260 1f4a 631F0000 		.4byte	0x1f63
 8261 1f4e 1C       		.uleb128 0x1c
 8262 1f4f 1E000000 		.4byte	.LBB184
 8263 1f53 14000000 		.4byte	.LBE184-.LBB184
 8264 1f57 1D       		.uleb128 0x1d
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 248


 8265 1f58 D9030000 		.4byte	0x3d9
 8266 1f5c 1D       		.uleb128 0x1d
 8267 1f5d E4030000 		.4byte	0x3e4
 8268 1f61 00       		.byte	0
 8269 1f62 00       		.byte	0
 8270 1f63 2A       		.uleb128 0x2a
 8271 1f64 B1030000 		.4byte	0x3b1
 8272 1f68 4C000000 		.4byte	.LBB185
 8273 1f6c 12000000 		.4byte	.LBE185-.LBB185
 8274 1f70 01       		.byte	0x1
 8275 1f71 F012     		.2byte	0x12f0
 8276 1f73 871F0000 		.4byte	0x1f87
 8277 1f77 1C       		.uleb128 0x1c
 8278 1f78 4C000000 		.4byte	.LBB186
 8279 1f7c 12000000 		.4byte	.LBE186-.LBB186
 8280 1f80 1D       		.uleb128 0x1d
 8281 1f81 BD030000 		.4byte	0x3bd
 8282 1f85 00       		.byte	0
 8283 1f86 00       		.byte	0
 8284 1f87 2A       		.uleb128 0x2a
 8285 1f88 F0030000 		.4byte	0x3f0
 8286 1f8c BA000000 		.4byte	.LBB187
 8287 1f90 12000000 		.4byte	.LBE187-.LBB187
 8288 1f94 01       		.byte	0x1
 8289 1f95 1413     		.2byte	0x1314
 8290 1f97 A51F0000 		.4byte	0x1fa5
 8291 1f9b 2C       		.uleb128 0x2c
 8292 1f9c FC030000 		.4byte	0x3fc
 8293 1fa0 79120000 		.4byte	.LLST123
 8294 1fa4 00       		.byte	0
 8295 1fa5 1F       		.uleb128 0x1f
 8296 1fa6 1E000000 		.4byte	.LVL379
 8297 1faa 7A220000 		.4byte	0x227a
 8298 1fae 25       		.uleb128 0x25
 8299 1faf 6E000000 		.4byte	.LVL383
 8300 1fb3 57220000 		.4byte	0x2257
 8301 1fb7 C21F0000 		.4byte	0x1fc2
 8302 1fbb 21       		.uleb128 0x21
 8303 1fbc 01       		.uleb128 0x1
 8304 1fbd 50       		.byte	0x50
 8305 1fbe 02       		.uleb128 0x2
 8306 1fbf 77       		.byte	0x77
 8307 1fc0 00       		.sleb128 0
 8308 1fc1 00       		.byte	0
 8309 1fc2 25       		.uleb128 0x25
 8310 1fc3 90000000 		.4byte	.LVL384
 8311 1fc7 40220000 		.4byte	0x2240
 8312 1fcb D61F0000 		.4byte	0x1fd6
 8313 1fcf 21       		.uleb128 0x21
 8314 1fd0 01       		.uleb128 0x1
 8315 1fd1 51       		.byte	0x51
 8316 1fd2 02       		.uleb128 0x2
 8317 1fd3 77       		.byte	0x77
 8318 1fd4 00       		.sleb128 0
 8319 1fd5 00       		.byte	0
 8320 1fd6 20       		.uleb128 0x20
 8321 1fd7 9C000000 		.4byte	.LVL385
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 249


 8322 1fdb 40220000 		.4byte	0x2240
 8323 1fdf 21       		.uleb128 0x21
 8324 1fe0 01       		.uleb128 0x1
 8325 1fe1 50       		.byte	0x50
 8326 1fe2 05       		.uleb128 0x5
 8327 1fe3 03       		.byte	0x3
 8328 1fe4 14000000 		.4byte	.LANCHOR0+20
 8329 1fe8 21       		.uleb128 0x21
 8330 1fe9 01       		.uleb128 0x1
 8331 1fea 51       		.byte	0x51
 8332 1feb 02       		.uleb128 0x2
 8333 1fec 74       		.byte	0x74
 8334 1fed 18       		.sleb128 24
 8335 1fee 00       		.byte	0
 8336 1fef 00       		.byte	0
 8337 1ff0 27       		.uleb128 0x27
 8338 1ff1 25010000 		.4byte	.LASF182
 8339 1ff5 01       		.byte	0x1
 8340 1ff6 1D13     		.2byte	0x131d
 8341 1ff8 35010000 		.4byte	0x135
 8342 1ffc 00000000 		.4byte	.LFB183
 8343 2000 34000000 		.4byte	.LFE183-.LFB183
 8344 2004 01       		.uleb128 0x1
 8345 2005 9C       		.byte	0x9c
 8346 2006 4D200000 		.4byte	0x204d
 8347 200a 19       		.uleb128 0x19
 8348 200b 99070000 		.4byte	.LASF78
 8349 200f 01       		.byte	0x1
 8350 2010 1D13     		.2byte	0x131d
 8351 2012 43020000 		.4byte	0x243
 8352 2016 8C120000 		.4byte	.LLST124
 8353 201a 1A       		.uleb128 0x1a
 8354 201b 39060000 		.4byte	.LASF75
 8355 201f 01       		.byte	0x1
 8356 2020 1F13     		.2byte	0x131f
 8357 2022 AF040000 		.4byte	0x4af
 8358 2026 9F120000 		.4byte	.LLST125
 8359 202a 1A       		.uleb128 0x1a
 8360 202b 01050000 		.4byte	.LASF74
 8361 202f 01       		.byte	0x1
 8362 2030 2013     		.2byte	0x1320
 8363 2032 35010000 		.4byte	0x135
 8364 2036 BD120000 		.4byte	.LLST126
 8365 203a 1F       		.uleb128 0x1f
 8366 203b 10000000 		.4byte	.LVL391
 8367 203f 35220000 		.4byte	0x2235
 8368 2043 1F       		.uleb128 0x1f
 8369 2044 2A000000 		.4byte	.LVL396
 8370 2048 4C220000 		.4byte	0x224c
 8371 204c 00       		.byte	0
 8372 204d 0B       		.uleb128 0xb
 8373 204e 38020000 		.4byte	0x238
 8374 2052 5D200000 		.4byte	0x205d
 8375 2056 0C       		.uleb128 0xc
 8376 2057 A9000000 		.4byte	0xa9
 8377 205b 06       		.byte	0x6
 8378 205c 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 250


 8379 205d 23       		.uleb128 0x23
 8380 205e 8D0C0000 		.4byte	.LASF183
 8381 2062 01       		.byte	0x1
 8382 2063 5F01     		.2byte	0x15f
 8383 2065 4D200000 		.4byte	0x204d
 8384 2069 05       		.uleb128 0x5
 8385 206a 03       		.byte	0x3
 8386 206b 30000000 		.4byte	pxReadyTasksLists
 8387 206f 23       		.uleb128 0x23
 8388 2070 DB0C0000 		.4byte	.LASF184
 8389 2074 01       		.byte	0x1
 8390 2075 6001     		.2byte	0x160
 8391 2077 38020000 		.4byte	0x238
 8392 207b 05       		.uleb128 0x5
 8393 207c 03       		.byte	0x3
 8394 207d BC000000 		.4byte	xDelayedTaskList1
 8395 2081 23       		.uleb128 0x23
 8396 2082 09050000 		.4byte	.LASF185
 8397 2086 01       		.byte	0x1
 8398 2087 6101     		.2byte	0x161
 8399 2089 38020000 		.4byte	0x238
 8400 208d 05       		.uleb128 0x5
 8401 208e 03       		.byte	0x3
 8402 208f D0000000 		.4byte	xDelayedTaskList2
 8403 2093 23       		.uleb128 0x23
 8404 2094 480E0000 		.4byte	.LASF186
 8405 2098 01       		.byte	0x1
 8406 2099 6201     		.2byte	0x162
 8407 209b A5200000 		.4byte	0x20a5
 8408 209f 05       		.uleb128 0x5
 8409 20a0 03       		.byte	0x3
 8410 20a1 28000000 		.4byte	pxDelayedTaskList
 8411 20a5 08       		.uleb128 0x8
 8412 20a6 DD100000 		.4byte	0x10dd
 8413 20aa 23       		.uleb128 0x23
 8414 20ab 58070000 		.4byte	.LASF187
 8415 20af 01       		.byte	0x1
 8416 20b0 6301     		.2byte	0x163
 8417 20b2 A5200000 		.4byte	0x20a5
 8418 20b6 05       		.uleb128 0x5
 8419 20b7 03       		.byte	0x3
 8420 20b8 F8000000 		.4byte	pxOverflowDelayedTaskList
 8421 20bc 23       		.uleb128 0x23
 8422 20bd D1010000 		.4byte	.LASF188
 8423 20c1 01       		.byte	0x1
 8424 20c2 6401     		.2byte	0x164
 8425 20c4 38020000 		.4byte	0x238
 8426 20c8 05       		.uleb128 0x5
 8427 20c9 03       		.byte	0x3
 8428 20ca 14000000 		.4byte	xPendingReadyList
 8429 20ce 23       		.uleb128 0x23
 8430 20cf 9F070000 		.4byte	.LASF189
 8431 20d3 01       		.byte	0x1
 8432 20d4 6801     		.2byte	0x168
 8433 20d6 38020000 		.4byte	0x238
 8434 20da 05       		.uleb128 0x5
 8435 20db 03       		.byte	0x3
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 251


 8436 20dc E4000000 		.4byte	xTasksWaitingTermination
 8437 20e0 23       		.uleb128 0x23
 8438 20e1 FA0B0000 		.4byte	.LASF190
 8439 20e5 01       		.byte	0x1
 8440 20e6 6901     		.2byte	0x169
 8441 20e8 2D020000 		.4byte	0x22d
 8442 20ec 05       		.uleb128 0x5
 8443 20ed 03       		.byte	0x3
 8444 20ee 10010000 		.4byte	uxDeletedTasksWaitingCleanUp
 8445 20f2 23       		.uleb128 0x23
 8446 20f3 FE000000 		.4byte	.LASF191
 8447 20f7 01       		.byte	0x1
 8448 20f8 6F01     		.2byte	0x16f
 8449 20fa 38020000 		.4byte	0x238
 8450 20fe 05       		.uleb128 0x5
 8451 20ff 03       		.byte	0x3
 8452 2100 00000000 		.4byte	xSuspendedTaskList
 8453 2104 23       		.uleb128 0x23
 8454 2105 6D000000 		.4byte	.LASF192
 8455 2109 01       		.byte	0x1
 8456 210a 7401     		.2byte	0x174
 8457 210c 2D020000 		.4byte	0x22d
 8458 2110 05       		.uleb128 0x5
 8459 2111 03       		.byte	0x3
 8460 2112 FC000000 		.4byte	uxCurrentNumberOfTasks
 8461 2116 23       		.uleb128 0x23
 8462 2117 220D0000 		.4byte	.LASF193
 8463 211b 01       		.byte	0x1
 8464 211c 7501     		.2byte	0x175
 8465 211e 28210000 		.4byte	0x2128
 8466 2122 05       		.uleb128 0x5
 8467 2123 03       		.byte	0x3
 8468 2124 14010000 		.4byte	xTickCount
 8469 2128 08       		.uleb128 0x8
 8470 2129 4B010000 		.4byte	0x14b
 8471 212d 23       		.uleb128 0x23
 8472 212e 2F080000 		.4byte	.LASF194
 8473 2132 01       		.byte	0x1
 8474 2133 7601     		.2byte	0x176
 8475 2135 2D020000 		.4byte	0x22d
 8476 2139 05       		.uleb128 0x5
 8477 213a 03       		.byte	0x3
 8478 213b 0C010000 		.4byte	uxTopReadyPriority
 8479 213f 23       		.uleb128 0x23
 8480 2140 090A0000 		.4byte	.LASF195
 8481 2144 01       		.byte	0x1
 8482 2145 7701     		.2byte	0x177
 8483 2147 51210000 		.4byte	0x2151
 8484 214b 05       		.uleb128 0x5
 8485 214c 03       		.byte	0x3
 8486 214d 04010000 		.4byte	xSchedulerRunning
 8487 2151 08       		.uleb128 0x8
 8488 2152 35010000 		.4byte	0x135
 8489 2156 23       		.uleb128 0x23
 8490 2157 590A0000 		.4byte	.LASF196
 8491 215b 01       		.byte	0x1
 8492 215c 7801     		.2byte	0x178
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 252


 8493 215e 2D020000 		.4byte	0x22d
 8494 2162 05       		.uleb128 0x5
 8495 2163 03       		.byte	0x3
 8496 2164 24010000 		.4byte	uxPendedTicks
 8497 2168 23       		.uleb128 0x23
 8498 2169 A6000000 		.4byte	.LASF197
 8499 216d 01       		.byte	0x1
 8500 216e 7901     		.2byte	0x179
 8501 2170 51210000 		.4byte	0x2151
 8502 2174 05       		.uleb128 0x5
 8503 2175 03       		.byte	0x3
 8504 2176 28010000 		.4byte	xYieldPending
 8505 217a 23       		.uleb128 0x23
 8506 217b FF0C0000 		.4byte	.LASF198
 8507 217f 01       		.byte	0x1
 8508 2180 7A01     		.2byte	0x17a
 8509 2182 51210000 		.4byte	0x2151
 8510 2186 05       		.uleb128 0x5
 8511 2187 03       		.byte	0x3
 8512 2188 20010000 		.4byte	xNumOfOverflows
 8513 218c 23       		.uleb128 0x23
 8514 218d 690C0000 		.4byte	.LASF199
 8515 2191 01       		.byte	0x1
 8516 2192 7B01     		.2byte	0x17b
 8517 2194 40010000 		.4byte	0x140
 8518 2198 05       		.uleb128 0x5
 8519 2199 03       		.byte	0x3
 8520 219a 08010000 		.4byte	uxTaskNumber
 8521 219e 23       		.uleb128 0x23
 8522 219f F1070000 		.4byte	.LASF200
 8523 21a3 01       		.byte	0x1
 8524 21a4 7C01     		.2byte	0x17c
 8525 21a6 28210000 		.4byte	0x2128
 8526 21aa 05       		.uleb128 0x5
 8527 21ab 03       		.byte	0x3
 8528 21ac 2C000000 		.4byte	xNextTaskUnblockTime
 8529 21b0 23       		.uleb128 0x23
 8530 21b1 7D0C0000 		.4byte	.LASF201
 8531 21b5 01       		.byte	0x1
 8532 21b6 7D01     		.2byte	0x17d
 8533 21b8 43020000 		.4byte	0x243
 8534 21bc 05       		.uleb128 0x5
 8535 21bd 03       		.byte	0x3
 8536 21be 1C010000 		.4byte	xIdleTaskHandle
 8537 21c2 23       		.uleb128 0x23
 8538 21c3 C2040000 		.4byte	.LASF202
 8539 21c7 01       		.byte	0x1
 8540 21c8 8701     		.2byte	0x187
 8541 21ca 2D020000 		.4byte	0x22d
 8542 21ce 05       		.uleb128 0x5
 8543 21cf 03       		.byte	0x3
 8544 21d0 18010000 		.4byte	uxSchedulerSuspended
 8545 21d4 33       		.uleb128 0x33
 8546 21d5 99010000 		.4byte	.LASF203
 8547 21d9 09       		.byte	0x9
 8548 21da F907     		.2byte	0x7f9
 8549 21dc E0210000 		.4byte	0x21e0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 253


 8550 21e0 08       		.uleb128 0x8
 8551 21e1 E0000000 		.4byte	0xe0
 8552 21e5 34       		.uleb128 0x34
 8553 21e6 05070000 		.4byte	.LASF204
 8554 21ea 01       		.byte	0x1
 8555 21eb 5C01     		.2byte	0x15c
 8556 21ed F7210000 		.4byte	0x21f7
 8557 21f1 05       		.uleb128 0x5
 8558 21f2 03       		.byte	0x3
 8559 21f3 00000000 		.4byte	pxCurrentTCB
 8560 21f7 08       		.uleb128 0x8
 8561 21f8 AF040000 		.4byte	0x4af
 8562 21fc 35       		.uleb128 0x35
 8563 21fd CE060000 		.4byte	.LASF205
 8564 2201 CE060000 		.4byte	.LASF205
 8565 2205 0A       		.byte	0xa
 8566 2206 82       		.byte	0x82
 8567 2207 35       		.uleb128 0x35
 8568 2208 4A0D0000 		.4byte	.LASF206
 8569 220c 4A0D0000 		.4byte	.LASF206
 8570 2210 0B       		.byte	0xb
 8571 2211 19       		.byte	0x19
 8572 2212 36       		.uleb128 0x36
 8573 2213 5D040000 		.4byte	.LASF207
 8574 2217 5D040000 		.4byte	.LASF207
 8575 221b 07       		.byte	0x7
 8576 221c 6301     		.2byte	0x163
 8577 221e 35       		.uleb128 0x35
 8578 221f 5F0D0000 		.4byte	.LASF208
 8579 2223 5F0D0000 		.4byte	.LASF208
 8580 2227 0A       		.byte	0xa
 8581 2228 66       		.byte	0x66
 8582 2229 36       		.uleb128 0x36
 8583 222a 090E0000 		.4byte	.LASF209
 8584 222e 090E0000 		.4byte	.LASF209
 8585 2232 07       		.byte	0x7
 8586 2233 5801     		.2byte	0x158
 8587 2235 35       		.uleb128 0x35
 8588 2236 C80C0000 		.4byte	.LASF210
 8589 223a C80C0000 		.4byte	.LASF210
 8590 223e 02       		.byte	0x2
 8591 223f 61       		.byte	0x61
 8592 2240 36       		.uleb128 0x36
 8593 2241 FB030000 		.4byte	.LASF211
 8594 2245 FB030000 		.4byte	.LASF211
 8595 2249 07       		.byte	0x7
 8596 224a 8501     		.2byte	0x185
 8597 224c 35       		.uleb128 0x35
 8598 224d 970B0000 		.4byte	.LASF212
 8599 2251 970B0000 		.4byte	.LASF212
 8600 2255 02       		.byte	0x2
 8601 2256 62       		.byte	0x62
 8602 2257 36       		.uleb128 0x36
 8603 2258 4C0C0000 		.4byte	.LASF213
 8604 225c 4C0C0000 		.4byte	.LASF213
 8605 2260 07       		.byte	0x7
 8606 2261 9401     		.2byte	0x194
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 254


 8607 2263 36       		.uleb128 0x36
 8608 2264 3D0B0000 		.4byte	.LASF214
 8609 2268 3D0B0000 		.4byte	.LASF214
 8610 226c 07       		.byte	0x7
 8611 226d 7001     		.2byte	0x170
 8612 226f 35       		.uleb128 0x35
 8613 2270 94040000 		.4byte	.LASF215
 8614 2274 94040000 		.4byte	.LASF215
 8615 2278 0A       		.byte	0xa
 8616 2279 81       		.byte	0x81
 8617 227a 35       		.uleb128 0x35
 8618 227b F60E0000 		.4byte	.LASF216
 8619 227f F60E0000 		.4byte	.LASF216
 8620 2283 02       		.byte	0x2
 8621 2284 75       		.byte	0x75
 8622 2285 36       		.uleb128 0x36
 8623 2286 DA030000 		.4byte	.LASF217
 8624 228a DA030000 		.4byte	.LASF217
 8625 228e 0C       		.byte	0xc
 8626 228f EF04     		.2byte	0x4ef
 8627 2291 35       		.uleb128 0x35
 8628 2292 94030000 		.4byte	.LASF218
 8629 2296 94030000 		.4byte	.LASF218
 8630 229a 0A       		.byte	0xa
 8631 229b 8B       		.byte	0x8b
 8632 229c 35       		.uleb128 0x35
 8633 229d 1D080000 		.4byte	.LASF219
 8634 22a1 1D080000 		.4byte	.LASF219
 8635 22a5 0A       		.byte	0xa
 8636 22a6 92       		.byte	0x92
 8637 22a7 36       		.uleb128 0x36
 8638 22a8 F0050000 		.4byte	.LASF220
 8639 22ac F0050000 		.4byte	.LASF220
 8640 22b0 01       		.byte	0x1
 8641 22b1 9701     		.2byte	0x197
 8642 22b3 00       		.byte	0
 8643              		.section	.debug_abbrev,"",%progbits
 8644              	.Ldebug_abbrev0:
 8645 0000 01       		.uleb128 0x1
 8646 0001 11       		.uleb128 0x11
 8647 0002 01       		.byte	0x1
 8648 0003 25       		.uleb128 0x25
 8649 0004 0E       		.uleb128 0xe
 8650 0005 13       		.uleb128 0x13
 8651 0006 0B       		.uleb128 0xb
 8652 0007 03       		.uleb128 0x3
 8653 0008 0E       		.uleb128 0xe
 8654 0009 1B       		.uleb128 0x1b
 8655 000a 0E       		.uleb128 0xe
 8656 000b 55       		.uleb128 0x55
 8657 000c 17       		.uleb128 0x17
 8658 000d 11       		.uleb128 0x11
 8659 000e 01       		.uleb128 0x1
 8660 000f 10       		.uleb128 0x10
 8661 0010 17       		.uleb128 0x17
 8662 0011 00       		.byte	0
 8663 0012 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 255


 8664 0013 02       		.uleb128 0x2
 8665 0014 16       		.uleb128 0x16
 8666 0015 00       		.byte	0
 8667 0016 03       		.uleb128 0x3
 8668 0017 0E       		.uleb128 0xe
 8669 0018 3A       		.uleb128 0x3a
 8670 0019 0B       		.uleb128 0xb
 8671 001a 3B       		.uleb128 0x3b
 8672 001b 0B       		.uleb128 0xb
 8673 001c 49       		.uleb128 0x49
 8674 001d 13       		.uleb128 0x13
 8675 001e 00       		.byte	0
 8676 001f 00       		.byte	0
 8677 0020 03       		.uleb128 0x3
 8678 0021 24       		.uleb128 0x24
 8679 0022 00       		.byte	0
 8680 0023 0B       		.uleb128 0xb
 8681 0024 0B       		.uleb128 0xb
 8682 0025 3E       		.uleb128 0x3e
 8683 0026 0B       		.uleb128 0xb
 8684 0027 03       		.uleb128 0x3
 8685 0028 0E       		.uleb128 0xe
 8686 0029 00       		.byte	0
 8687 002a 00       		.byte	0
 8688 002b 04       		.uleb128 0x4
 8689 002c 24       		.uleb128 0x24
 8690 002d 00       		.byte	0
 8691 002e 0B       		.uleb128 0xb
 8692 002f 0B       		.uleb128 0xb
 8693 0030 3E       		.uleb128 0x3e
 8694 0031 0B       		.uleb128 0xb
 8695 0032 03       		.uleb128 0x3
 8696 0033 08       		.uleb128 0x8
 8697 0034 00       		.byte	0
 8698 0035 00       		.byte	0
 8699 0036 05       		.uleb128 0x5
 8700 0037 0F       		.uleb128 0xf
 8701 0038 00       		.byte	0
 8702 0039 0B       		.uleb128 0xb
 8703 003a 0B       		.uleb128 0xb
 8704 003b 00       		.byte	0
 8705 003c 00       		.byte	0
 8706 003d 06       		.uleb128 0x6
 8707 003e 0F       		.uleb128 0xf
 8708 003f 00       		.byte	0
 8709 0040 0B       		.uleb128 0xb
 8710 0041 0B       		.uleb128 0xb
 8711 0042 49       		.uleb128 0x49
 8712 0043 13       		.uleb128 0x13
 8713 0044 00       		.byte	0
 8714 0045 00       		.byte	0
 8715 0046 07       		.uleb128 0x7
 8716 0047 26       		.uleb128 0x26
 8717 0048 00       		.byte	0
 8718 0049 49       		.uleb128 0x49
 8719 004a 13       		.uleb128 0x13
 8720 004b 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 256


 8721 004c 00       		.byte	0
 8722 004d 08       		.uleb128 0x8
 8723 004e 35       		.uleb128 0x35
 8724 004f 00       		.byte	0
 8725 0050 49       		.uleb128 0x49
 8726 0051 13       		.uleb128 0x13
 8727 0052 00       		.byte	0
 8728 0053 00       		.byte	0
 8729 0054 09       		.uleb128 0x9
 8730 0055 15       		.uleb128 0x15
 8731 0056 01       		.byte	0x1
 8732 0057 27       		.uleb128 0x27
 8733 0058 19       		.uleb128 0x19
 8734 0059 01       		.uleb128 0x1
 8735 005a 13       		.uleb128 0x13
 8736 005b 00       		.byte	0
 8737 005c 00       		.byte	0
 8738 005d 0A       		.uleb128 0xa
 8739 005e 05       		.uleb128 0x5
 8740 005f 00       		.byte	0
 8741 0060 49       		.uleb128 0x49
 8742 0061 13       		.uleb128 0x13
 8743 0062 00       		.byte	0
 8744 0063 00       		.byte	0
 8745 0064 0B       		.uleb128 0xb
 8746 0065 01       		.uleb128 0x1
 8747 0066 01       		.byte	0x1
 8748 0067 49       		.uleb128 0x49
 8749 0068 13       		.uleb128 0x13
 8750 0069 01       		.uleb128 0x1
 8751 006a 13       		.uleb128 0x13
 8752 006b 00       		.byte	0
 8753 006c 00       		.byte	0
 8754 006d 0C       		.uleb128 0xc
 8755 006e 21       		.uleb128 0x21
 8756 006f 00       		.byte	0
 8757 0070 49       		.uleb128 0x49
 8758 0071 13       		.uleb128 0x13
 8759 0072 2F       		.uleb128 0x2f
 8760 0073 0B       		.uleb128 0xb
 8761 0074 00       		.byte	0
 8762 0075 00       		.byte	0
 8763 0076 0D       		.uleb128 0xd
 8764 0077 13       		.uleb128 0x13
 8765 0078 01       		.byte	0x1
 8766 0079 03       		.uleb128 0x3
 8767 007a 0E       		.uleb128 0xe
 8768 007b 0B       		.uleb128 0xb
 8769 007c 0B       		.uleb128 0xb
 8770 007d 3A       		.uleb128 0x3a
 8771 007e 0B       		.uleb128 0xb
 8772 007f 3B       		.uleb128 0x3b
 8773 0080 0B       		.uleb128 0xb
 8774 0081 01       		.uleb128 0x1
 8775 0082 13       		.uleb128 0x13
 8776 0083 00       		.byte	0
 8777 0084 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 257


 8778 0085 0E       		.uleb128 0xe
 8779 0086 0D       		.uleb128 0xd
 8780 0087 00       		.byte	0
 8781 0088 03       		.uleb128 0x3
 8782 0089 0E       		.uleb128 0xe
 8783 008a 3A       		.uleb128 0x3a
 8784 008b 0B       		.uleb128 0xb
 8785 008c 3B       		.uleb128 0x3b
 8786 008d 0B       		.uleb128 0xb
 8787 008e 49       		.uleb128 0x49
 8788 008f 13       		.uleb128 0x13
 8789 0090 38       		.uleb128 0x38
 8790 0091 0B       		.uleb128 0xb
 8791 0092 00       		.byte	0
 8792 0093 00       		.byte	0
 8793 0094 0F       		.uleb128 0xf
 8794 0095 04       		.uleb128 0x4
 8795 0096 01       		.byte	0x1
 8796 0097 0B       		.uleb128 0xb
 8797 0098 0B       		.uleb128 0xb
 8798 0099 49       		.uleb128 0x49
 8799 009a 13       		.uleb128 0x13
 8800 009b 3A       		.uleb128 0x3a
 8801 009c 0B       		.uleb128 0xb
 8802 009d 3B       		.uleb128 0x3b
 8803 009e 0B       		.uleb128 0xb
 8804 009f 01       		.uleb128 0x1
 8805 00a0 13       		.uleb128 0x13
 8806 00a1 00       		.byte	0
 8807 00a2 00       		.byte	0
 8808 00a3 10       		.uleb128 0x10
 8809 00a4 28       		.uleb128 0x28
 8810 00a5 00       		.byte	0
 8811 00a6 03       		.uleb128 0x3
 8812 00a7 0E       		.uleb128 0xe
 8813 00a8 1C       		.uleb128 0x1c
 8814 00a9 0B       		.uleb128 0xb
 8815 00aa 00       		.byte	0
 8816 00ab 00       		.byte	0
 8817 00ac 11       		.uleb128 0x11
 8818 00ad 13       		.uleb128 0x13
 8819 00ae 01       		.byte	0x1
 8820 00af 03       		.uleb128 0x3
 8821 00b0 0E       		.uleb128 0xe
 8822 00b1 0B       		.uleb128 0xb
 8823 00b2 0B       		.uleb128 0xb
 8824 00b3 3A       		.uleb128 0x3a
 8825 00b4 0B       		.uleb128 0xb
 8826 00b5 3B       		.uleb128 0x3b
 8827 00b6 05       		.uleb128 0x5
 8828 00b7 01       		.uleb128 0x1
 8829 00b8 13       		.uleb128 0x13
 8830 00b9 00       		.byte	0
 8831 00ba 00       		.byte	0
 8832 00bb 12       		.uleb128 0x12
 8833 00bc 0D       		.uleb128 0xd
 8834 00bd 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 258


 8835 00be 03       		.uleb128 0x3
 8836 00bf 0E       		.uleb128 0xe
 8837 00c0 3A       		.uleb128 0x3a
 8838 00c1 0B       		.uleb128 0xb
 8839 00c2 3B       		.uleb128 0x3b
 8840 00c3 05       		.uleb128 0x5
 8841 00c4 49       		.uleb128 0x49
 8842 00c5 13       		.uleb128 0x13
 8843 00c6 38       		.uleb128 0x38
 8844 00c7 0B       		.uleb128 0xb
 8845 00c8 00       		.byte	0
 8846 00c9 00       		.byte	0
 8847 00ca 13       		.uleb128 0x13
 8848 00cb 16       		.uleb128 0x16
 8849 00cc 00       		.byte	0
 8850 00cd 03       		.uleb128 0x3
 8851 00ce 0E       		.uleb128 0xe
 8852 00cf 3A       		.uleb128 0x3a
 8853 00d0 0B       		.uleb128 0xb
 8854 00d1 3B       		.uleb128 0x3b
 8855 00d2 05       		.uleb128 0x5
 8856 00d3 49       		.uleb128 0x49
 8857 00d4 13       		.uleb128 0x13
 8858 00d5 00       		.byte	0
 8859 00d6 00       		.byte	0
 8860 00d7 14       		.uleb128 0x14
 8861 00d8 2E       		.uleb128 0x2e
 8862 00d9 01       		.byte	0x1
 8863 00da 03       		.uleb128 0x3
 8864 00db 0E       		.uleb128 0xe
 8865 00dc 3A       		.uleb128 0x3a
 8866 00dd 0B       		.uleb128 0xb
 8867 00de 3B       		.uleb128 0x3b
 8868 00df 0B       		.uleb128 0xb
 8869 00e0 27       		.uleb128 0x27
 8870 00e1 19       		.uleb128 0x19
 8871 00e2 20       		.uleb128 0x20
 8872 00e3 0B       		.uleb128 0xb
 8873 00e4 01       		.uleb128 0x1
 8874 00e5 13       		.uleb128 0x13
 8875 00e6 00       		.byte	0
 8876 00e7 00       		.byte	0
 8877 00e8 15       		.uleb128 0x15
 8878 00e9 34       		.uleb128 0x34
 8879 00ea 00       		.byte	0
 8880 00eb 03       		.uleb128 0x3
 8881 00ec 0E       		.uleb128 0xe
 8882 00ed 3A       		.uleb128 0x3a
 8883 00ee 0B       		.uleb128 0xb
 8884 00ef 3B       		.uleb128 0x3b
 8885 00f0 0B       		.uleb128 0xb
 8886 00f1 49       		.uleb128 0x49
 8887 00f2 13       		.uleb128 0x13
 8888 00f3 00       		.byte	0
 8889 00f4 00       		.byte	0
 8890 00f5 16       		.uleb128 0x16
 8891 00f6 2E       		.uleb128 0x2e
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 259


 8892 00f7 01       		.byte	0x1
 8893 00f8 03       		.uleb128 0x3
 8894 00f9 0E       		.uleb128 0xe
 8895 00fa 3A       		.uleb128 0x3a
 8896 00fb 0B       		.uleb128 0xb
 8897 00fc 3B       		.uleb128 0x3b
 8898 00fd 0B       		.uleb128 0xb
 8899 00fe 27       		.uleb128 0x27
 8900 00ff 19       		.uleb128 0x19
 8901 0100 49       		.uleb128 0x49
 8902 0101 13       		.uleb128 0x13
 8903 0102 20       		.uleb128 0x20
 8904 0103 0B       		.uleb128 0xb
 8905 0104 01       		.uleb128 0x1
 8906 0105 13       		.uleb128 0x13
 8907 0106 00       		.byte	0
 8908 0107 00       		.byte	0
 8909 0108 17       		.uleb128 0x17
 8910 0109 05       		.uleb128 0x5
 8911 010a 00       		.byte	0
 8912 010b 03       		.uleb128 0x3
 8913 010c 0E       		.uleb128 0xe
 8914 010d 3A       		.uleb128 0x3a
 8915 010e 0B       		.uleb128 0xb
 8916 010f 3B       		.uleb128 0x3b
 8917 0110 0B       		.uleb128 0xb
 8918 0111 49       		.uleb128 0x49
 8919 0112 13       		.uleb128 0x13
 8920 0113 00       		.byte	0
 8921 0114 00       		.byte	0
 8922 0115 18       		.uleb128 0x18
 8923 0116 2E       		.uleb128 0x2e
 8924 0117 01       		.byte	0x1
 8925 0118 03       		.uleb128 0x3
 8926 0119 0E       		.uleb128 0xe
 8927 011a 3A       		.uleb128 0x3a
 8928 011b 0B       		.uleb128 0xb
 8929 011c 3B       		.uleb128 0x3b
 8930 011d 05       		.uleb128 0x5
 8931 011e 27       		.uleb128 0x27
 8932 011f 19       		.uleb128 0x19
 8933 0120 49       		.uleb128 0x49
 8934 0121 13       		.uleb128 0x13
 8935 0122 11       		.uleb128 0x11
 8936 0123 01       		.uleb128 0x1
 8937 0124 12       		.uleb128 0x12
 8938 0125 06       		.uleb128 0x6
 8939 0126 40       		.uleb128 0x40
 8940 0127 18       		.uleb128 0x18
 8941 0128 9742     		.uleb128 0x2117
 8942 012a 19       		.uleb128 0x19
 8943 012b 01       		.uleb128 0x1
 8944 012c 13       		.uleb128 0x13
 8945 012d 00       		.byte	0
 8946 012e 00       		.byte	0
 8947 012f 19       		.uleb128 0x19
 8948 0130 05       		.uleb128 0x5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 260


 8949 0131 00       		.byte	0
 8950 0132 03       		.uleb128 0x3
 8951 0133 0E       		.uleb128 0xe
 8952 0134 3A       		.uleb128 0x3a
 8953 0135 0B       		.uleb128 0xb
 8954 0136 3B       		.uleb128 0x3b
 8955 0137 05       		.uleb128 0x5
 8956 0138 49       		.uleb128 0x49
 8957 0139 13       		.uleb128 0x13
 8958 013a 02       		.uleb128 0x2
 8959 013b 17       		.uleb128 0x17
 8960 013c 00       		.byte	0
 8961 013d 00       		.byte	0
 8962 013e 1A       		.uleb128 0x1a
 8963 013f 34       		.uleb128 0x34
 8964 0140 00       		.byte	0
 8965 0141 03       		.uleb128 0x3
 8966 0142 0E       		.uleb128 0xe
 8967 0143 3A       		.uleb128 0x3a
 8968 0144 0B       		.uleb128 0xb
 8969 0145 3B       		.uleb128 0x3b
 8970 0146 05       		.uleb128 0x5
 8971 0147 49       		.uleb128 0x49
 8972 0148 13       		.uleb128 0x13
 8973 0149 02       		.uleb128 0x2
 8974 014a 17       		.uleb128 0x17
 8975 014b 00       		.byte	0
 8976 014c 00       		.byte	0
 8977 014d 1B       		.uleb128 0x1b
 8978 014e 1D       		.uleb128 0x1d
 8979 014f 01       		.byte	0x1
 8980 0150 31       		.uleb128 0x31
 8981 0151 13       		.uleb128 0x13
 8982 0152 11       		.uleb128 0x11
 8983 0153 01       		.uleb128 0x1
 8984 0154 12       		.uleb128 0x12
 8985 0155 06       		.uleb128 0x6
 8986 0156 58       		.uleb128 0x58
 8987 0157 0B       		.uleb128 0xb
 8988 0158 59       		.uleb128 0x59
 8989 0159 05       		.uleb128 0x5
 8990 015a 00       		.byte	0
 8991 015b 00       		.byte	0
 8992 015c 1C       		.uleb128 0x1c
 8993 015d 0B       		.uleb128 0xb
 8994 015e 01       		.byte	0x1
 8995 015f 11       		.uleb128 0x11
 8996 0160 01       		.uleb128 0x1
 8997 0161 12       		.uleb128 0x12
 8998 0162 06       		.uleb128 0x6
 8999 0163 00       		.byte	0
 9000 0164 00       		.byte	0
 9001 0165 1D       		.uleb128 0x1d
 9002 0166 34       		.uleb128 0x34
 9003 0167 00       		.byte	0
 9004 0168 31       		.uleb128 0x31
 9005 0169 13       		.uleb128 0x13
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 261


 9006 016a 00       		.byte	0
 9007 016b 00       		.byte	0
 9008 016c 1E       		.uleb128 0x1e
 9009 016d 2E       		.uleb128 0x2e
 9010 016e 01       		.byte	0x1
 9011 016f 03       		.uleb128 0x3
 9012 0170 0E       		.uleb128 0xe
 9013 0171 3A       		.uleb128 0x3a
 9014 0172 0B       		.uleb128 0xb
 9015 0173 3B       		.uleb128 0x3b
 9016 0174 05       		.uleb128 0x5
 9017 0175 27       		.uleb128 0x27
 9018 0176 19       		.uleb128 0x19
 9019 0177 11       		.uleb128 0x11
 9020 0178 01       		.uleb128 0x1
 9021 0179 12       		.uleb128 0x12
 9022 017a 06       		.uleb128 0x6
 9023 017b 40       		.uleb128 0x40
 9024 017c 18       		.uleb128 0x18
 9025 017d 9742     		.uleb128 0x2117
 9026 017f 19       		.uleb128 0x19
 9027 0180 01       		.uleb128 0x1
 9028 0181 13       		.uleb128 0x13
 9029 0182 00       		.byte	0
 9030 0183 00       		.byte	0
 9031 0184 1F       		.uleb128 0x1f
 9032 0185 898201   		.uleb128 0x4109
 9033 0188 00       		.byte	0
 9034 0189 11       		.uleb128 0x11
 9035 018a 01       		.uleb128 0x1
 9036 018b 31       		.uleb128 0x31
 9037 018c 13       		.uleb128 0x13
 9038 018d 00       		.byte	0
 9039 018e 00       		.byte	0
 9040 018f 20       		.uleb128 0x20
 9041 0190 898201   		.uleb128 0x4109
 9042 0193 01       		.byte	0x1
 9043 0194 11       		.uleb128 0x11
 9044 0195 01       		.uleb128 0x1
 9045 0196 31       		.uleb128 0x31
 9046 0197 13       		.uleb128 0x13
 9047 0198 00       		.byte	0
 9048 0199 00       		.byte	0
 9049 019a 21       		.uleb128 0x21
 9050 019b 8A8201   		.uleb128 0x410a
 9051 019e 00       		.byte	0
 9052 019f 02       		.uleb128 0x2
 9053 01a0 18       		.uleb128 0x18
 9054 01a1 9142     		.uleb128 0x2111
 9055 01a3 18       		.uleb128 0x18
 9056 01a4 00       		.byte	0
 9057 01a5 00       		.byte	0
 9058 01a6 22       		.uleb128 0x22
 9059 01a7 05       		.uleb128 0x5
 9060 01a8 00       		.byte	0
 9061 01a9 03       		.uleb128 0x3
 9062 01aa 0E       		.uleb128 0xe
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 262


 9063 01ab 3A       		.uleb128 0x3a
 9064 01ac 0B       		.uleb128 0xb
 9065 01ad 3B       		.uleb128 0x3b
 9066 01ae 05       		.uleb128 0x5
 9067 01af 49       		.uleb128 0x49
 9068 01b0 13       		.uleb128 0x13
 9069 01b1 02       		.uleb128 0x2
 9070 01b2 18       		.uleb128 0x18
 9071 01b3 00       		.byte	0
 9072 01b4 00       		.byte	0
 9073 01b5 23       		.uleb128 0x23
 9074 01b6 34       		.uleb128 0x34
 9075 01b7 00       		.byte	0
 9076 01b8 03       		.uleb128 0x3
 9077 01b9 0E       		.uleb128 0xe
 9078 01ba 3A       		.uleb128 0x3a
 9079 01bb 0B       		.uleb128 0xb
 9080 01bc 3B       		.uleb128 0x3b
 9081 01bd 05       		.uleb128 0x5
 9082 01be 49       		.uleb128 0x49
 9083 01bf 13       		.uleb128 0x13
 9084 01c0 02       		.uleb128 0x2
 9085 01c1 18       		.uleb128 0x18
 9086 01c2 00       		.byte	0
 9087 01c3 00       		.byte	0
 9088 01c4 24       		.uleb128 0x24
 9089 01c5 34       		.uleb128 0x34
 9090 01c6 00       		.byte	0
 9091 01c7 03       		.uleb128 0x3
 9092 01c8 08       		.uleb128 0x8
 9093 01c9 3A       		.uleb128 0x3a
 9094 01ca 0B       		.uleb128 0xb
 9095 01cb 3B       		.uleb128 0x3b
 9096 01cc 05       		.uleb128 0x5
 9097 01cd 49       		.uleb128 0x49
 9098 01ce 13       		.uleb128 0x13
 9099 01cf 02       		.uleb128 0x2
 9100 01d0 17       		.uleb128 0x17
 9101 01d1 00       		.byte	0
 9102 01d2 00       		.byte	0
 9103 01d3 25       		.uleb128 0x25
 9104 01d4 898201   		.uleb128 0x4109
 9105 01d7 01       		.byte	0x1
 9106 01d8 11       		.uleb128 0x11
 9107 01d9 01       		.uleb128 0x1
 9108 01da 31       		.uleb128 0x31
 9109 01db 13       		.uleb128 0x13
 9110 01dc 01       		.uleb128 0x1
 9111 01dd 13       		.uleb128 0x13
 9112 01de 00       		.byte	0
 9113 01df 00       		.byte	0
 9114 01e0 26       		.uleb128 0x26
 9115 01e1 2E       		.uleb128 0x2e
 9116 01e2 01       		.byte	0x1
 9117 01e3 03       		.uleb128 0x3
 9118 01e4 0E       		.uleb128 0xe
 9119 01e5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 263


 9120 01e6 0B       		.uleb128 0xb
 9121 01e7 3B       		.uleb128 0x3b
 9122 01e8 05       		.uleb128 0x5
 9123 01e9 27       		.uleb128 0x27
 9124 01ea 19       		.uleb128 0x19
 9125 01eb 8701     		.uleb128 0x87
 9126 01ed 19       		.uleb128 0x19
 9127 01ee 11       		.uleb128 0x11
 9128 01ef 01       		.uleb128 0x1
 9129 01f0 12       		.uleb128 0x12
 9130 01f1 06       		.uleb128 0x6
 9131 01f2 40       		.uleb128 0x40
 9132 01f3 18       		.uleb128 0x18
 9133 01f4 9742     		.uleb128 0x2117
 9134 01f6 19       		.uleb128 0x19
 9135 01f7 01       		.uleb128 0x1
 9136 01f8 13       		.uleb128 0x13
 9137 01f9 00       		.byte	0
 9138 01fa 00       		.byte	0
 9139 01fb 27       		.uleb128 0x27
 9140 01fc 2E       		.uleb128 0x2e
 9141 01fd 01       		.byte	0x1
 9142 01fe 3F       		.uleb128 0x3f
 9143 01ff 19       		.uleb128 0x19
 9144 0200 03       		.uleb128 0x3
 9145 0201 0E       		.uleb128 0xe
 9146 0202 3A       		.uleb128 0x3a
 9147 0203 0B       		.uleb128 0xb
 9148 0204 3B       		.uleb128 0x3b
 9149 0205 05       		.uleb128 0x5
 9150 0206 27       		.uleb128 0x27
 9151 0207 19       		.uleb128 0x19
 9152 0208 49       		.uleb128 0x49
 9153 0209 13       		.uleb128 0x13
 9154 020a 11       		.uleb128 0x11
 9155 020b 01       		.uleb128 0x1
 9156 020c 12       		.uleb128 0x12
 9157 020d 06       		.uleb128 0x6
 9158 020e 40       		.uleb128 0x40
 9159 020f 18       		.uleb128 0x18
 9160 0210 9742     		.uleb128 0x2117
 9161 0212 19       		.uleb128 0x19
 9162 0213 01       		.uleb128 0x1
 9163 0214 13       		.uleb128 0x13
 9164 0215 00       		.byte	0
 9165 0216 00       		.byte	0
 9166 0217 28       		.uleb128 0x28
 9167 0218 0B       		.uleb128 0xb
 9168 0219 01       		.byte	0x1
 9169 021a 11       		.uleb128 0x11
 9170 021b 01       		.uleb128 0x1
 9171 021c 12       		.uleb128 0x12
 9172 021d 06       		.uleb128 0x6
 9173 021e 01       		.uleb128 0x1
 9174 021f 13       		.uleb128 0x13
 9175 0220 00       		.byte	0
 9176 0221 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 264


 9177 0222 29       		.uleb128 0x29
 9178 0223 2E       		.uleb128 0x2e
 9179 0224 01       		.byte	0x1
 9180 0225 3F       		.uleb128 0x3f
 9181 0226 19       		.uleb128 0x19
 9182 0227 03       		.uleb128 0x3
 9183 0228 0E       		.uleb128 0xe
 9184 0229 3A       		.uleb128 0x3a
 9185 022a 0B       		.uleb128 0xb
 9186 022b 3B       		.uleb128 0x3b
 9187 022c 05       		.uleb128 0x5
 9188 022d 27       		.uleb128 0x27
 9189 022e 19       		.uleb128 0x19
 9190 022f 11       		.uleb128 0x11
 9191 0230 01       		.uleb128 0x1
 9192 0231 12       		.uleb128 0x12
 9193 0232 06       		.uleb128 0x6
 9194 0233 40       		.uleb128 0x40
 9195 0234 18       		.uleb128 0x18
 9196 0235 9742     		.uleb128 0x2117
 9197 0237 19       		.uleb128 0x19
 9198 0238 01       		.uleb128 0x1
 9199 0239 13       		.uleb128 0x13
 9200 023a 00       		.byte	0
 9201 023b 00       		.byte	0
 9202 023c 2A       		.uleb128 0x2a
 9203 023d 1D       		.uleb128 0x1d
 9204 023e 01       		.byte	0x1
 9205 023f 31       		.uleb128 0x31
 9206 0240 13       		.uleb128 0x13
 9207 0241 11       		.uleb128 0x11
 9208 0242 01       		.uleb128 0x1
 9209 0243 12       		.uleb128 0x12
 9210 0244 06       		.uleb128 0x6
 9211 0245 58       		.uleb128 0x58
 9212 0246 0B       		.uleb128 0xb
 9213 0247 59       		.uleb128 0x59
 9214 0248 05       		.uleb128 0x5
 9215 0249 01       		.uleb128 0x1
 9216 024a 13       		.uleb128 0x13
 9217 024b 00       		.byte	0
 9218 024c 00       		.byte	0
 9219 024d 2B       		.uleb128 0x2b
 9220 024e 34       		.uleb128 0x34
 9221 024f 00       		.byte	0
 9222 0250 03       		.uleb128 0x3
 9223 0251 0E       		.uleb128 0xe
 9224 0252 3A       		.uleb128 0x3a
 9225 0253 0B       		.uleb128 0xb
 9226 0254 3B       		.uleb128 0x3b
 9227 0255 05       		.uleb128 0x5
 9228 0256 49       		.uleb128 0x49
 9229 0257 13       		.uleb128 0x13
 9230 0258 00       		.byte	0
 9231 0259 00       		.byte	0
 9232 025a 2C       		.uleb128 0x2c
 9233 025b 05       		.uleb128 0x5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 265


 9234 025c 00       		.byte	0
 9235 025d 31       		.uleb128 0x31
 9236 025e 13       		.uleb128 0x13
 9237 025f 02       		.uleb128 0x2
 9238 0260 17       		.uleb128 0x17
 9239 0261 00       		.byte	0
 9240 0262 00       		.byte	0
 9241 0263 2D       		.uleb128 0x2d
 9242 0264 2E       		.uleb128 0x2e
 9243 0265 00       		.byte	0
 9244 0266 3F       		.uleb128 0x3f
 9245 0267 19       		.uleb128 0x19
 9246 0268 03       		.uleb128 0x3
 9247 0269 0E       		.uleb128 0xe
 9248 026a 3A       		.uleb128 0x3a
 9249 026b 0B       		.uleb128 0xb
 9250 026c 3B       		.uleb128 0x3b
 9251 026d 05       		.uleb128 0x5
 9252 026e 27       		.uleb128 0x27
 9253 026f 19       		.uleb128 0x19
 9254 0270 11       		.uleb128 0x11
 9255 0271 01       		.uleb128 0x1
 9256 0272 12       		.uleb128 0x12
 9257 0273 06       		.uleb128 0x6
 9258 0274 40       		.uleb128 0x40
 9259 0275 18       		.uleb128 0x18
 9260 0276 9742     		.uleb128 0x2117
 9261 0278 19       		.uleb128 0x19
 9262 0279 00       		.byte	0
 9263 027a 00       		.byte	0
 9264 027b 2E       		.uleb128 0x2e
 9265 027c 34       		.uleb128 0x34
 9266 027d 00       		.byte	0
 9267 027e 03       		.uleb128 0x3
 9268 027f 0E       		.uleb128 0xe
 9269 0280 3A       		.uleb128 0x3a
 9270 0281 0B       		.uleb128 0xb
 9271 0282 3B       		.uleb128 0x3b
 9272 0283 05       		.uleb128 0x5
 9273 0284 49       		.uleb128 0x49
 9274 0285 13       		.uleb128 0x13
 9275 0286 1C       		.uleb128 0x1c
 9276 0287 0B       		.uleb128 0xb
 9277 0288 00       		.byte	0
 9278 0289 00       		.byte	0
 9279 028a 2F       		.uleb128 0x2f
 9280 028b 2E       		.uleb128 0x2e
 9281 028c 00       		.byte	0
 9282 028d 3F       		.uleb128 0x3f
 9283 028e 19       		.uleb128 0x19
 9284 028f 03       		.uleb128 0x3
 9285 0290 0E       		.uleb128 0xe
 9286 0291 3A       		.uleb128 0x3a
 9287 0292 0B       		.uleb128 0xb
 9288 0293 3B       		.uleb128 0x3b
 9289 0294 05       		.uleb128 0x5
 9290 0295 27       		.uleb128 0x27
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 266


 9291 0296 19       		.uleb128 0x19
 9292 0297 49       		.uleb128 0x49
 9293 0298 13       		.uleb128 0x13
 9294 0299 11       		.uleb128 0x11
 9295 029a 01       		.uleb128 0x1
 9296 029b 12       		.uleb128 0x12
 9297 029c 06       		.uleb128 0x6
 9298 029d 40       		.uleb128 0x40
 9299 029e 18       		.uleb128 0x18
 9300 029f 9742     		.uleb128 0x2117
 9301 02a1 19       		.uleb128 0x19
 9302 02a2 00       		.byte	0
 9303 02a3 00       		.byte	0
 9304 02a4 30       		.uleb128 0x30
 9305 02a5 0B       		.uleb128 0xb
 9306 02a6 01       		.byte	0x1
 9307 02a7 55       		.uleb128 0x55
 9308 02a8 17       		.uleb128 0x17
 9309 02a9 00       		.byte	0
 9310 02aa 00       		.byte	0
 9311 02ab 31       		.uleb128 0x31
 9312 02ac 0B       		.uleb128 0xb
 9313 02ad 01       		.byte	0x1
 9314 02ae 55       		.uleb128 0x55
 9315 02af 17       		.uleb128 0x17
 9316 02b0 01       		.uleb128 0x1
 9317 02b1 13       		.uleb128 0x13
 9318 02b2 00       		.byte	0
 9319 02b3 00       		.byte	0
 9320 02b4 32       		.uleb128 0x32
 9321 02b5 34       		.uleb128 0x34
 9322 02b6 00       		.byte	0
 9323 02b7 03       		.uleb128 0x3
 9324 02b8 0E       		.uleb128 0xe
 9325 02b9 3A       		.uleb128 0x3a
 9326 02ba 0B       		.uleb128 0xb
 9327 02bb 3B       		.uleb128 0x3b
 9328 02bc 05       		.uleb128 0x5
 9329 02bd 49       		.uleb128 0x49
 9330 02be 13       		.uleb128 0x13
 9331 02bf 1C       		.uleb128 0x1c
 9332 02c0 0D       		.uleb128 0xd
 9333 02c1 00       		.byte	0
 9334 02c2 00       		.byte	0
 9335 02c3 33       		.uleb128 0x33
 9336 02c4 34       		.uleb128 0x34
 9337 02c5 00       		.byte	0
 9338 02c6 03       		.uleb128 0x3
 9339 02c7 0E       		.uleb128 0xe
 9340 02c8 3A       		.uleb128 0x3a
 9341 02c9 0B       		.uleb128 0xb
 9342 02ca 3B       		.uleb128 0x3b
 9343 02cb 05       		.uleb128 0x5
 9344 02cc 49       		.uleb128 0x49
 9345 02cd 13       		.uleb128 0x13
 9346 02ce 3F       		.uleb128 0x3f
 9347 02cf 19       		.uleb128 0x19
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 267


 9348 02d0 3C       		.uleb128 0x3c
 9349 02d1 19       		.uleb128 0x19
 9350 02d2 00       		.byte	0
 9351 02d3 00       		.byte	0
 9352 02d4 34       		.uleb128 0x34
 9353 02d5 34       		.uleb128 0x34
 9354 02d6 00       		.byte	0
 9355 02d7 03       		.uleb128 0x3
 9356 02d8 0E       		.uleb128 0xe
 9357 02d9 3A       		.uleb128 0x3a
 9358 02da 0B       		.uleb128 0xb
 9359 02db 3B       		.uleb128 0x3b
 9360 02dc 05       		.uleb128 0x5
 9361 02dd 49       		.uleb128 0x49
 9362 02de 13       		.uleb128 0x13
 9363 02df 3F       		.uleb128 0x3f
 9364 02e0 19       		.uleb128 0x19
 9365 02e1 02       		.uleb128 0x2
 9366 02e2 18       		.uleb128 0x18
 9367 02e3 00       		.byte	0
 9368 02e4 00       		.byte	0
 9369 02e5 35       		.uleb128 0x35
 9370 02e6 2E       		.uleb128 0x2e
 9371 02e7 00       		.byte	0
 9372 02e8 3F       		.uleb128 0x3f
 9373 02e9 19       		.uleb128 0x19
 9374 02ea 3C       		.uleb128 0x3c
 9375 02eb 19       		.uleb128 0x19
 9376 02ec 6E       		.uleb128 0x6e
 9377 02ed 0E       		.uleb128 0xe
 9378 02ee 03       		.uleb128 0x3
 9379 02ef 0E       		.uleb128 0xe
 9380 02f0 3A       		.uleb128 0x3a
 9381 02f1 0B       		.uleb128 0xb
 9382 02f2 3B       		.uleb128 0x3b
 9383 02f3 0B       		.uleb128 0xb
 9384 02f4 00       		.byte	0
 9385 02f5 00       		.byte	0
 9386 02f6 36       		.uleb128 0x36
 9387 02f7 2E       		.uleb128 0x2e
 9388 02f8 00       		.byte	0
 9389 02f9 3F       		.uleb128 0x3f
 9390 02fa 19       		.uleb128 0x19
 9391 02fb 3C       		.uleb128 0x3c
 9392 02fc 19       		.uleb128 0x19
 9393 02fd 6E       		.uleb128 0x6e
 9394 02fe 0E       		.uleb128 0xe
 9395 02ff 03       		.uleb128 0x3
 9396 0300 0E       		.uleb128 0xe
 9397 0301 3A       		.uleb128 0x3a
 9398 0302 0B       		.uleb128 0xb
 9399 0303 3B       		.uleb128 0x3b
 9400 0304 05       		.uleb128 0x5
 9401 0305 00       		.byte	0
 9402 0306 00       		.byte	0
 9403 0307 00       		.byte	0
 9404              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 268


 9405              	.Ldebug_loc0:
 9406              	.LLST0:
 9407 0000 00000000 		.4byte	.LVL0
 9408 0004 36000000 		.4byte	.LVL2
 9409 0008 0100     		.2byte	0x1
 9410 000a 50       		.byte	0x50
 9411 000b 36000000 		.4byte	.LVL2
 9412 000f 38000000 		.4byte	.LVL3
 9413 0013 0400     		.2byte	0x4
 9414 0015 F3       		.byte	0xf3
 9415 0016 01       		.uleb128 0x1
 9416 0017 50       		.byte	0x50
 9417 0018 9F       		.byte	0x9f
 9418 0019 38000000 		.4byte	.LVL3
 9419 001d 3A000000 		.4byte	.LVL4
 9420 0021 0100     		.2byte	0x1
 9421 0023 50       		.byte	0x50
 9422 0024 3A000000 		.4byte	.LVL4
 9423 0028 3C000000 		.4byte	.LVL5
 9424 002c 0100     		.2byte	0x1
 9425 002e 52       		.byte	0x52
 9426 002f 3C000000 		.4byte	.LVL5
 9427 0033 3E000000 		.4byte	.LVL6
 9428 0037 0100     		.2byte	0x1
 9429 0039 50       		.byte	0x50
 9430 003a 3E000000 		.4byte	.LVL6
 9431 003e 40000000 		.4byte	.LVL7
 9432 0042 0400     		.2byte	0x4
 9433 0044 F3       		.byte	0xf3
 9434 0045 01       		.uleb128 0x1
 9435 0046 50       		.byte	0x50
 9436 0047 9F       		.byte	0x9f
 9437 0048 40000000 		.4byte	.LVL7
 9438 004c 42000000 		.4byte	.LVL8
 9439 0050 0100     		.2byte	0x1
 9440 0052 50       		.byte	0x50
 9441 0053 42000000 		.4byte	.LVL8
 9442 0057 4C000000 		.4byte	.LFE146
 9443 005b 0400     		.2byte	0x4
 9444 005d F3       		.byte	0xf3
 9445 005e 01       		.uleb128 0x1
 9446 005f 50       		.byte	0x50
 9447 0060 9F       		.byte	0x9f
 9448 0061 00000000 		.4byte	0
 9449 0065 00000000 		.4byte	0
 9450              	.LLST1:
 9451 0069 00000000 		.4byte	.LVL0
 9452 006d 42000000 		.4byte	.LVL8
 9453 0071 0200     		.2byte	0x2
 9454 0073 30       		.byte	0x30
 9455 0074 9F       		.byte	0x9f
 9456 0075 42000000 		.4byte	.LVL8
 9457 0079 4C000000 		.4byte	.LFE146
 9458 007d 0100     		.2byte	0x1
 9459 007f 50       		.byte	0x50
 9460 0080 00000000 		.4byte	0
 9461 0084 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 269


 9462              	.LLST2:
 9463 0088 00000000 		.4byte	.LVL0
 9464 008c 36000000 		.4byte	.LVL2
 9465 0090 0100     		.2byte	0x1
 9466 0092 50       		.byte	0x50
 9467 0093 36000000 		.4byte	.LVL2
 9468 0097 38000000 		.4byte	.LVL3
 9469 009b 0400     		.2byte	0x4
 9470 009d F3       		.byte	0xf3
 9471 009e 01       		.uleb128 0x1
 9472 009f 50       		.byte	0x50
 9473 00a0 9F       		.byte	0x9f
 9474 00a1 38000000 		.4byte	.LVL3
 9475 00a5 3A000000 		.4byte	.LVL4
 9476 00a9 0100     		.2byte	0x1
 9477 00ab 50       		.byte	0x50
 9478 00ac 3A000000 		.4byte	.LVL4
 9479 00b0 3C000000 		.4byte	.LVL5
 9480 00b4 0100     		.2byte	0x1
 9481 00b6 52       		.byte	0x52
 9482 00b7 3C000000 		.4byte	.LVL5
 9483 00bb 3E000000 		.4byte	.LVL6
 9484 00bf 0100     		.2byte	0x1
 9485 00c1 50       		.byte	0x50
 9486 00c2 3E000000 		.4byte	.LVL6
 9487 00c6 40000000 		.4byte	.LVL7
 9488 00ca 0400     		.2byte	0x4
 9489 00cc F3       		.byte	0xf3
 9490 00cd 01       		.uleb128 0x1
 9491 00ce 50       		.byte	0x50
 9492 00cf 9F       		.byte	0x9f
 9493 00d0 40000000 		.4byte	.LVL7
 9494 00d4 42000000 		.4byte	.LVL8
 9495 00d8 0100     		.2byte	0x1
 9496 00da 50       		.byte	0x50
 9497 00db 42000000 		.4byte	.LVL8
 9498 00df 4C000000 		.4byte	.LFE146
 9499 00e3 0400     		.2byte	0x4
 9500 00e5 F3       		.byte	0xf3
 9501 00e6 01       		.uleb128 0x1
 9502 00e7 50       		.byte	0x50
 9503 00e8 9F       		.byte	0x9f
 9504 00e9 00000000 		.4byte	0
 9505 00ed 00000000 		.4byte	0
 9506              	.LLST3:
 9507 00f1 22000000 		.4byte	.LVL9
 9508 00f5 24000000 		.4byte	.LVL10
 9509 00f9 0100     		.2byte	0x1
 9510 00fb 52       		.byte	0x52
 9511 00fc 00000000 		.4byte	0
 9512 0100 00000000 		.4byte	0
 9513              	.LLST4:
 9514 0104 00000000 		.4byte	.LVL11
 9515 0108 06000000 		.4byte	.LVL12
 9516 010c 0100     		.2byte	0x1
 9517 010e 50       		.byte	0x50
 9518 010f 06000000 		.4byte	.LVL12
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 270


 9519 0113 12000000 		.4byte	.LFE173
 9520 0117 0100     		.2byte	0x1
 9521 0119 54       		.byte	0x54
 9522 011a 00000000 		.4byte	0
 9523 011e 00000000 		.4byte	0
 9524              	.LLST5:
 9525 0122 00000000 		.4byte	.LVL15
 9526 0126 18000000 		.4byte	.LVL18
 9527 012a 0100     		.2byte	0x1
 9528 012c 50       		.byte	0x50
 9529 012d 18000000 		.4byte	.LVL18
 9530 0131 9E000000 		.4byte	.LFE137
 9531 0135 0100     		.2byte	0x1
 9532 0137 5A       		.byte	0x5a
 9533 0138 00000000 		.4byte	0
 9534 013c 00000000 		.4byte	0
 9535              	.LLST6:
 9536 0140 00000000 		.4byte	.LVL15
 9537 0144 16000000 		.4byte	.LVL17
 9538 0148 0100     		.2byte	0x1
 9539 014a 51       		.byte	0x51
 9540 014b 16000000 		.4byte	.LVL17
 9541 014f 9E000000 		.4byte	.LFE137
 9542 0153 0100     		.2byte	0x1
 9543 0155 59       		.byte	0x59
 9544 0156 00000000 		.4byte	0
 9545 015a 00000000 		.4byte	0
 9546              	.LLST7:
 9547 015e 00000000 		.4byte	.LVL15
 9548 0162 14000000 		.4byte	.LVL16
 9549 0166 0100     		.2byte	0x1
 9550 0168 52       		.byte	0x52
 9551 0169 14000000 		.4byte	.LVL16
 9552 016d 28000000 		.4byte	.LVL20
 9553 0171 0100     		.2byte	0x1
 9554 0173 55       		.byte	0x55
 9555 0174 28000000 		.4byte	.LVL20
 9556 0178 30000000 		.4byte	.LVL22
 9557 017c 0700     		.2byte	0x7
 9558 017e 72       		.byte	0x72
 9559 017f 81808080 		.sleb128 -1073741823
 9559      7C
 9560 0184 9F       		.byte	0x9f
 9561 0185 30000000 		.4byte	.LVL22
 9562 0189 9E000000 		.4byte	.LFE137
 9563 018d 0400     		.2byte	0x4
 9564 018f F3       		.byte	0xf3
 9565 0190 01       		.uleb128 0x1
 9566 0191 52       		.byte	0x52
 9567 0192 9F       		.byte	0x9f
 9568 0193 00000000 		.4byte	0
 9569 0197 00000000 		.4byte	0
 9570              	.LLST8:
 9571 019b 00000000 		.4byte	.LVL15
 9572 019f 1B000000 		.4byte	.LVL19-1
 9573 01a3 0100     		.2byte	0x1
 9574 01a5 53       		.byte	0x53
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 271


 9575 01a6 1B000000 		.4byte	.LVL19-1
 9576 01aa 9E000000 		.4byte	.LFE137
 9577 01ae 0100     		.2byte	0x1
 9578 01b0 58       		.byte	0x58
 9579 01b1 00000000 		.4byte	0
 9580 01b5 00000000 		.4byte	0
 9581              	.LLST9:
 9582 01b9 00000000 		.4byte	.LVL15
 9583 01bd 52000000 		.4byte	.LVL25
 9584 01c1 0200     		.2byte	0x2
 9585 01c3 91       		.byte	0x91
 9586 01c4 00       		.sleb128 0
 9587 01c5 52000000 		.4byte	.LVL25
 9588 01c9 9E000000 		.4byte	.LFE137
 9589 01cd 0100     		.2byte	0x1
 9590 01cf 57       		.byte	0x57
 9591 01d0 00000000 		.4byte	0
 9592 01d4 00000000 		.4byte	0
 9593              	.LLST10:
 9594 01d8 30000000 		.4byte	.LVL22
 9595 01dc 48000000 		.4byte	.LVL24
 9596 01e0 0100     		.2byte	0x1
 9597 01e2 53       		.byte	0x53
 9598 01e3 6C000000 		.4byte	.LVL28
 9599 01e7 70000000 		.4byte	.LVL29
 9600 01eb 0200     		.2byte	0x2
 9601 01ed 30       		.byte	0x30
 9602 01ee 9F       		.byte	0x9f
 9603 01ef 70000000 		.4byte	.LVL29
 9604 01f3 84000000 		.4byte	.LVL31
 9605 01f7 0100     		.2byte	0x1
 9606 01f9 53       		.byte	0x53
 9607 01fa 00000000 		.4byte	0
 9608 01fe 00000000 		.4byte	0
 9609              	.LLST11:
 9610 0202 02000000 		.4byte	.LVL33
 9611 0206 06000000 		.4byte	.LVL34
 9612 020a 0200     		.2byte	0x2
 9613 020c 30       		.byte	0x30
 9614 020d 9F       		.byte	0x9f
 9615 020e 06000000 		.4byte	.LVL34
 9616 0212 1C000000 		.4byte	.LVL37
 9617 0216 0100     		.2byte	0x1
 9618 0218 54       		.byte	0x54
 9619 0219 00000000 		.4byte	0
 9620 021d 00000000 		.4byte	0
 9621              	.LLST12:
 9622 0221 00000000 		.4byte	.LVL43
 9623 0225 07000000 		.4byte	.LVL44-1
 9624 0229 0100     		.2byte	0x1
 9625 022b 50       		.byte	0x50
 9626 022c 07000000 		.4byte	.LVL44-1
 9627 0230 A2000000 		.4byte	.LVL48
 9628 0234 0100     		.2byte	0x1
 9629 0236 54       		.byte	0x54
 9630 0237 A2000000 		.4byte	.LVL48
 9631 023b AC000000 		.4byte	.LFE138
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 272


 9632 023f 0400     		.2byte	0x4
 9633 0241 F3       		.byte	0xf3
 9634 0242 01       		.uleb128 0x1
 9635 0243 50       		.byte	0x50
 9636 0244 9F       		.byte	0x9f
 9637 0245 00000000 		.4byte	0
 9638 0249 00000000 		.4byte	0
 9639              	.LLST13:
 9640 024d 10000000 		.4byte	.LVL50
 9641 0251 34000000 		.4byte	.LVL53
 9642 0255 0100     		.2byte	0x1
 9643 0257 55       		.byte	0x55
 9644 0258 00000000 		.4byte	0
 9645 025c 00000000 		.4byte	0
 9646              	.LLST14:
 9647 0260 00000000 		.4byte	.LVL54
 9648 0264 02000000 		.4byte	.LVL55
 9649 0268 0100     		.2byte	0x1
 9650 026a 50       		.byte	0x50
 9651 026b 02000000 		.4byte	.LVL55
 9652 026f 28000000 		.4byte	.LFE168
 9653 0273 0400     		.2byte	0x4
 9654 0275 F3       		.byte	0xf3
 9655 0276 01       		.uleb128 0x1
 9656 0277 50       		.byte	0x50
 9657 0278 9F       		.byte	0x9f
 9658 0279 00000000 		.4byte	0
 9659 027d 00000000 		.4byte	0
 9660              	.LLST15:
 9661 0281 00000000 		.4byte	.LVL57
 9662 0285 10000000 		.4byte	.LVL59
 9663 0289 0100     		.2byte	0x1
 9664 028b 50       		.byte	0x50
 9665 028c 10000000 		.4byte	.LVL59
 9666 0290 2E000000 		.4byte	.LVL63
 9667 0294 0100     		.2byte	0x1
 9668 0296 54       		.byte	0x54
 9669 0297 2E000000 		.4byte	.LVL63
 9670 029b 68000000 		.4byte	.LFE184
 9671 029f 0400     		.2byte	0x4
 9672 02a1 F3       		.byte	0xf3
 9673 02a2 01       		.uleb128 0x1
 9674 02a3 50       		.byte	0x50
 9675 02a4 9F       		.byte	0x9f
 9676 02a5 00000000 		.4byte	0
 9677 02a9 00000000 		.4byte	0
 9678              	.LLST16:
 9679 02ad 00000000 		.4byte	.LVL57
 9680 02b1 15000000 		.4byte	.LVL60-1
 9681 02b5 0100     		.2byte	0x1
 9682 02b7 51       		.byte	0x51
 9683 02b8 15000000 		.4byte	.LVL60-1
 9684 02bc 64000000 		.4byte	.LVL68
 9685 02c0 0100     		.2byte	0x1
 9686 02c2 56       		.byte	0x56
 9687 02c3 64000000 		.4byte	.LVL68
 9688 02c7 68000000 		.4byte	.LFE184
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 273


 9689 02cb 0400     		.2byte	0x4
 9690 02cd F3       		.byte	0xf3
 9691 02ce 01       		.uleb128 0x1
 9692 02cf 51       		.byte	0x51
 9693 02d0 9F       		.byte	0x9f
 9694 02d1 00000000 		.4byte	0
 9695 02d5 00000000 		.4byte	0
 9696              	.LLST17:
 9697 02d9 2E000000 		.4byte	.LVL63
 9698 02dd 64000000 		.4byte	.LVL68
 9699 02e1 0100     		.2byte	0x1
 9700 02e3 54       		.byte	0x54
 9701 02e4 00000000 		.4byte	0
 9702 02e8 00000000 		.4byte	0
 9703              	.LLST18:
 9704 02ec 0C000000 		.4byte	.LVL58
 9705 02f0 4E000000 		.4byte	.LVL66
 9706 02f4 0100     		.2byte	0x1
 9707 02f6 55       		.byte	0x55
 9708 02f7 00000000 		.4byte	0
 9709 02fb 00000000 		.4byte	0
 9710              	.LLST19:
 9711 02ff 00000000 		.4byte	.LVL69
 9712 0303 10000000 		.4byte	.LVL70
 9713 0307 0100     		.2byte	0x1
 9714 0309 50       		.byte	0x50
 9715 030a 10000000 		.4byte	.LVL70
 9716 030e 62000000 		.4byte	.LFE136
 9717 0312 0100     		.2byte	0x1
 9718 0314 56       		.byte	0x56
 9719 0315 00000000 		.4byte	0
 9720 0319 00000000 		.4byte	0
 9721              	.LLST20:
 9722 031d 00000000 		.4byte	.LVL69
 9723 0321 13000000 		.4byte	.LVL71-1
 9724 0325 0100     		.2byte	0x1
 9725 0327 51       		.byte	0x51
 9726 0328 13000000 		.4byte	.LVL71-1
 9727 032c 62000000 		.4byte	.LFE136
 9728 0330 0100     		.2byte	0x1
 9729 0332 57       		.byte	0x57
 9730 0333 00000000 		.4byte	0
 9731 0337 00000000 		.4byte	0
 9732              	.LLST21:
 9733 033b 00000000 		.4byte	.LVL69
 9734 033f 13000000 		.4byte	.LVL71-1
 9735 0343 0100     		.2byte	0x1
 9736 0345 52       		.byte	0x52
 9737 0346 13000000 		.4byte	.LVL71-1
 9738 034a 62000000 		.4byte	.LFE136
 9739 034e 0400     		.2byte	0x4
 9740 0350 F3       		.byte	0xf3
 9741 0351 01       		.uleb128 0x1
 9742 0352 52       		.byte	0x52
 9743 0353 9F       		.byte	0x9f
 9744 0354 00000000 		.4byte	0
 9745 0358 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 274


 9746              	.LLST22:
 9747 035c 00000000 		.4byte	.LVL69
 9748 0360 13000000 		.4byte	.LVL71-1
 9749 0364 0100     		.2byte	0x1
 9750 0366 53       		.byte	0x53
 9751 0367 13000000 		.4byte	.LVL71-1
 9752 036b 62000000 		.4byte	.LFE136
 9753 036f 0100     		.2byte	0x1
 9754 0371 58       		.byte	0x58
 9755 0372 00000000 		.4byte	0
 9756 0376 00000000 		.4byte	0
 9757              	.LLST23:
 9758 037a 1E000000 		.4byte	.LVL73
 9759 037e 2A000000 		.4byte	.LVL74
 9760 0382 0100     		.2byte	0x1
 9761 0384 50       		.byte	0x50
 9762 0385 2A000000 		.4byte	.LVL74
 9763 0389 30000000 		.4byte	.LVL76
 9764 038d 0100     		.2byte	0x1
 9765 038f 54       		.byte	0x54
 9766 0390 32000000 		.4byte	.LVL77
 9767 0394 62000000 		.4byte	.LFE136
 9768 0398 0100     		.2byte	0x1
 9769 039a 54       		.byte	0x54
 9770 039b 00000000 		.4byte	0
 9771 039f 00000000 		.4byte	0
 9772              	.LLST24:
 9773 03a3 54000000 		.4byte	.LVL79
 9774 03a7 58000000 		.4byte	.LVL80
 9775 03ab 0200     		.2byte	0x2
 9776 03ad 31       		.byte	0x31
 9777 03ae 9F       		.byte	0x9f
 9778 03af 5C000000 		.4byte	.LVL81
 9779 03b3 62000000 		.4byte	.LFE136
 9780 03b7 0100     		.2byte	0x1
 9781 03b9 50       		.byte	0x50
 9782 03ba 00000000 		.4byte	0
 9783 03be 00000000 		.4byte	0
 9784              	.LLST25:
 9785 03c2 14000000 		.4byte	.LVL71
 9786 03c6 1A000000 		.4byte	.LVL72
 9787 03ca 0100     		.2byte	0x1
 9788 03cc 50       		.byte	0x50
 9789 03cd 1A000000 		.4byte	.LVL72
 9790 03d1 30000000 		.4byte	.LVL76
 9791 03d5 0100     		.2byte	0x1
 9792 03d7 59       		.byte	0x59
 9793 03d8 30000000 		.4byte	.LVL76
 9794 03dc 32000000 		.4byte	.LVL77
 9795 03e0 0100     		.2byte	0x1
 9796 03e2 50       		.byte	0x50
 9797 03e3 00000000 		.4byte	0
 9798 03e7 00000000 		.4byte	0
 9799              	.LLST26:
 9800 03eb 00000000 		.4byte	.LVL82
 9801 03ef 07000000 		.4byte	.LVL83-1
 9802 03f3 0100     		.2byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 275


 9803 03f5 50       		.byte	0x50
 9804 03f6 07000000 		.4byte	.LVL83-1
 9805 03fa 10000000 		.4byte	.LVL84
 9806 03fe 0100     		.2byte	0x1
 9807 0400 54       		.byte	0x54
 9808 0401 00000000 		.4byte	0
 9809 0405 00000000 		.4byte	0
 9810              	.LLST27:
 9811 0409 10000000 		.4byte	.LVL84
 9812 040d A8000000 		.4byte	.LVL92
 9813 0411 0100     		.2byte	0x1
 9814 0413 54       		.byte	0x54
 9815 0414 00000000 		.4byte	0
 9816 0418 00000000 		.4byte	0
 9817              	.LLST28:
 9818 041c 00000000 		.4byte	.LVL93
 9819 0420 07000000 		.4byte	.LVL94-1
 9820 0424 0100     		.2byte	0x1
 9821 0426 50       		.byte	0x50
 9822 0427 07000000 		.4byte	.LVL94-1
 9823 042b 10000000 		.4byte	.LVL95
 9824 042f 0100     		.2byte	0x1
 9825 0431 54       		.byte	0x54
 9826 0432 00000000 		.4byte	0
 9827 0436 00000000 		.4byte	0
 9828              	.LLST29:
 9829 043a 10000000 		.4byte	.LVL95
 9830 043e 12000000 		.4byte	.LVL96
 9831 0442 0100     		.2byte	0x1
 9832 0444 54       		.byte	0x54
 9833 0445 00000000 		.4byte	0
 9834 0449 00000000 		.4byte	0
 9835              	.LLST30:
 9836 044d 12000000 		.4byte	.LVL96
 9837 0451 1A000000 		.4byte	.LVL98
 9838 0455 0100     		.2byte	0x1
 9839 0457 54       		.byte	0x54
 9840 0458 1A000000 		.4byte	.LVL98
 9841 045c 20000000 		.4byte	.LFE142
 9842 0460 0100     		.2byte	0x1
 9843 0462 50       		.byte	0x50
 9844 0463 00000000 		.4byte	0
 9845 0467 00000000 		.4byte	0
 9846              	.LLST31:
 9847 046b 00000000 		.4byte	.LVL99
 9848 046f 07000000 		.4byte	.LVL100-1
 9849 0473 0100     		.2byte	0x1
 9850 0475 50       		.byte	0x50
 9851 0476 07000000 		.4byte	.LVL100-1
 9852 047a 24000000 		.4byte	.LVL101
 9853 047e 0100     		.2byte	0x1
 9854 0480 54       		.byte	0x54
 9855 0481 00000000 		.4byte	0
 9856 0485 00000000 		.4byte	0
 9857              	.LLST32:
 9858 0489 24000000 		.4byte	.LVL101
 9859 048d 2C000000 		.4byte	.LVL104
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 276


 9860 0491 0100     		.2byte	0x1
 9861 0493 54       		.byte	0x54
 9862 0494 00000000 		.4byte	0
 9863 0498 00000000 		.4byte	0
 9864              	.LLST33:
 9865 049c 26000000 		.4byte	.LVL102
 9866 04a0 2A000000 		.4byte	.LVL103
 9867 04a4 0100     		.2byte	0x1
 9868 04a6 53       		.byte	0x53
 9869 04a7 00000000 		.4byte	0
 9870 04ab 00000000 		.4byte	0
 9871              	.LLST34:
 9872 04af 00000000 		.4byte	.LVL105
 9873 04b3 25000000 		.4byte	.LVL108-1
 9874 04b7 0100     		.2byte	0x1
 9875 04b9 50       		.byte	0x50
 9876 04ba 25000000 		.4byte	.LVL108-1
 9877 04be 2E000000 		.4byte	.LVL109
 9878 04c2 0100     		.2byte	0x1
 9879 04c4 54       		.byte	0x54
 9880 04c5 00000000 		.4byte	0
 9881 04c9 00000000 		.4byte	0
 9882              	.LLST35:
 9883 04cd 00000000 		.4byte	.LVL105
 9884 04d1 22000000 		.4byte	.LVL107
 9885 04d5 0100     		.2byte	0x1
 9886 04d7 51       		.byte	0x51
 9887 04d8 22000000 		.4byte	.LVL107
 9888 04dc 74000000 		.4byte	.LVL112
 9889 04e0 0100     		.2byte	0x1
 9890 04e2 55       		.byte	0x55
 9891 04e3 74000000 		.4byte	.LVL112
 9892 04e7 95000000 		.4byte	.LVL114-1
 9893 04eb 0200     		.2byte	0x2
 9894 04ed 74       		.byte	0x74
 9895 04ee 2C       		.sleb128 44
 9896 04ef 00000000 		.4byte	0
 9897 04f3 00000000 		.4byte	0
 9898              	.LLST36:
 9899 04f7 2E000000 		.4byte	.LVL109
 9900 04fb D0000000 		.4byte	.LVL118
 9901 04ff 0100     		.2byte	0x1
 9902 0501 54       		.byte	0x54
 9903 0502 00000000 		.4byte	0
 9904 0506 00000000 		.4byte	0
 9905              	.LLST37:
 9906 050a 30000000 		.4byte	.LVL110
 9907 050e 7C000000 		.4byte	.LVL113
 9908 0512 0100     		.2byte	0x1
 9909 0514 53       		.byte	0x53
 9910 0515 00000000 		.4byte	0
 9911 0519 00000000 		.4byte	0
 9912              	.LLST38:
 9913 051d 68000000 		.4byte	.LVL111
 9914 0521 7C000000 		.4byte	.LVL113
 9915 0525 0100     		.2byte	0x1
 9916 0527 53       		.byte	0x53
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 277


 9917 0528 00000000 		.4byte	0
 9918 052c 00000000 		.4byte	0
 9919              	.LLST39:
 9920 0530 00000000 		.4byte	.LVL105
 9921 0534 68000000 		.4byte	.LVL111
 9922 0538 0200     		.2byte	0x2
 9923 053a 30       		.byte	0x30
 9924 053b 9F       		.byte	0x9f
 9925 053c 68000000 		.4byte	.LVL111
 9926 0540 CA000000 		.4byte	.LVL116
 9927 0544 0100     		.2byte	0x1
 9928 0546 56       		.byte	0x56
 9929 0547 00000000 		.4byte	0
 9930 054b 00000000 		.4byte	0
 9931              	.LLST40:
 9932 054f 00000000 		.4byte	.LVL119
 9933 0553 27000000 		.4byte	.LVL121-1
 9934 0557 0100     		.2byte	0x1
 9935 0559 50       		.byte	0x50
 9936 055a 27000000 		.4byte	.LVL121-1
 9937 055e 80000000 		.4byte	.LVL126
 9938 0562 0100     		.2byte	0x1
 9939 0564 54       		.byte	0x54
 9940 0565 80000000 		.4byte	.LVL126
 9941 0569 88000000 		.4byte	.LFE147
 9942 056d 0400     		.2byte	0x4
 9943 056f F3       		.byte	0xf3
 9944 0570 01       		.uleb128 0x1
 9945 0571 50       		.byte	0x50
 9946 0572 9F       		.byte	0x9f
 9947 0573 00000000 		.4byte	0
 9948 0577 00000000 		.4byte	0
 9949              	.LLST41:
 9950 057b 00000000 		.4byte	.LVL119
 9951 057f 27000000 		.4byte	.LVL121-1
 9952 0583 0100     		.2byte	0x1
 9953 0585 50       		.byte	0x50
 9954 0586 27000000 		.4byte	.LVL121-1
 9955 058a 80000000 		.4byte	.LVL126
 9956 058e 0100     		.2byte	0x1
 9957 0590 54       		.byte	0x54
 9958 0591 80000000 		.4byte	.LVL126
 9959 0595 88000000 		.4byte	.LFE147
 9960 0599 0400     		.2byte	0x4
 9961 059b F3       		.byte	0xf3
 9962 059c 01       		.uleb128 0x1
 9963 059d 50       		.byte	0x50
 9964 059e 9F       		.byte	0x9f
 9965 059f 00000000 		.4byte	0
 9966 05a3 00000000 		.4byte	0
 9967              	.LLST42:
 9968 05a7 00000000 		.4byte	.LVL127
 9969 05ab 1B000000 		.4byte	.LVL130-1
 9970 05af 0100     		.2byte	0x1
 9971 05b1 50       		.byte	0x50
 9972 05b2 1B000000 		.4byte	.LVL130-1
 9973 05b6 98000000 		.4byte	.LVL139
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 278


 9974 05ba 0100     		.2byte	0x1
 9975 05bc 54       		.byte	0x54
 9976 05bd 98000000 		.4byte	.LVL139
 9977 05c1 A4000000 		.4byte	.LFE148
 9978 05c5 0400     		.2byte	0x4
 9979 05c7 F3       		.byte	0xf3
 9980 05c8 01       		.uleb128 0x1
 9981 05c9 50       		.byte	0x50
 9982 05ca 9F       		.byte	0x9f
 9983 05cb 00000000 		.4byte	0
 9984 05cf 00000000 		.4byte	0
 9985              	.LLST43:
 9986 05d3 02000000 		.4byte	.LVL128
 9987 05d7 54000000 		.4byte	.LVL132
 9988 05db 0200     		.2byte	0x2
 9989 05dd 30       		.byte	0x30
 9990 05de 9F       		.byte	0x9f
 9991 05df 54000000 		.4byte	.LVL132
 9992 05e3 80000000 		.4byte	.LVL135
 9993 05e7 0100     		.2byte	0x1
 9994 05e9 55       		.byte	0x55
 9995 05ea 80000000 		.4byte	.LVL135
 9996 05ee 90000000 		.4byte	.LVL137
 9997 05f2 0200     		.2byte	0x2
 9998 05f4 30       		.byte	0x30
 9999 05f5 9F       		.byte	0x9f
 10000 05f6 90000000 		.4byte	.LVL137
 10001 05fa 98000000 		.4byte	.LVL139
 10002 05fe 0100     		.2byte	0x1
 10003 0600 55       		.byte	0x55
 10004 0601 98000000 		.4byte	.LVL139
 10005 0605 A4000000 		.4byte	.LFE148
 10006 0609 0100     		.2byte	0x1
 10007 060b 50       		.byte	0x50
 10008 060c 00000000 		.4byte	0
 10009 0610 00000000 		.4byte	0
 10010              	.LLST44:
 10011 0614 02000000 		.4byte	.LVL128
 10012 0618 1B000000 		.4byte	.LVL130-1
 10013 061c 0100     		.2byte	0x1
 10014 061e 50       		.byte	0x50
 10015 061f 1B000000 		.4byte	.LVL130-1
 10016 0623 98000000 		.4byte	.LVL139
 10017 0627 0100     		.2byte	0x1
 10018 0629 54       		.byte	0x54
 10019 062a 98000000 		.4byte	.LVL139
 10020 062e A4000000 		.4byte	.LFE148
 10021 0632 0400     		.2byte	0x4
 10022 0634 F3       		.byte	0xf3
 10023 0635 01       		.uleb128 0x1
 10024 0636 50       		.byte	0x50
 10025 0637 9F       		.byte	0x9f
 10026 0638 00000000 		.4byte	0
 10027 063c 00000000 		.4byte	0
 10028              	.LLST45:
 10029 0640 90000000 		.4byte	.LVL137
 10030 0644 94000000 		.4byte	.LVL138
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 279


 10031 0648 0100     		.2byte	0x1
 10032 064a 57       		.byte	0x57
 10033 064b 00000000 		.4byte	0
 10034 064f 00000000 		.4byte	0
 10035              	.LLST46:
 10036 0653 16000000 		.4byte	.LVL140
 10037 0657 1D000000 		.4byte	.LVL141-1
 10038 065b 0100     		.2byte	0x1
 10039 065d 50       		.byte	0x50
 10040 065e 1E000000 		.4byte	.LVL141
 10041 0662 49000000 		.4byte	.LVL142-1
 10042 0666 0100     		.2byte	0x1
 10043 0668 50       		.byte	0x50
 10044 0669 4C000000 		.4byte	.LVL143
 10045 066d 64000000 		.4byte	.LVL145
 10046 0671 0100     		.2byte	0x1
 10047 0673 50       		.byte	0x50
 10048 0674 00000000 		.4byte	0
 10049 0678 00000000 		.4byte	0
 10050              	.LLST47:
 10051 067c 00000000 		.4byte	.LVL150
 10052 0680 0A000000 		.4byte	.LVL151
 10053 0684 0100     		.2byte	0x1
 10054 0686 50       		.byte	0x50
 10055 0687 00000000 		.4byte	0
 10056 068b 00000000 		.4byte	0
 10057              	.LLST48:
 10058 068f 0A000000 		.4byte	.LVL151
 10059 0693 1C000000 		.4byte	.LVL152
 10060 0697 0100     		.2byte	0x1
 10061 0699 53       		.byte	0x53
 10062 069a 1E000000 		.4byte	.LVL153
 10063 069e 28000000 		.4byte	.LFE156
 10064 06a2 0100     		.2byte	0x1
 10065 06a4 53       		.byte	0x53
 10066 06a5 00000000 		.4byte	0
 10067 06a9 00000000 		.4byte	0
 10068              	.LLST49:
 10069 06ad 5C000000 		.4byte	.LVL161
 10070 06b1 60000000 		.4byte	.LVL163
 10071 06b5 0100     		.2byte	0x1
 10072 06b7 55       		.byte	0x55
 10073 06b8 84000000 		.4byte	.LVL165
 10074 06bc DA000000 		.4byte	.LVL170
 10075 06c0 0100     		.2byte	0x1
 10076 06c2 55       		.byte	0x55
 10077 06c3 00000000 		.4byte	0
 10078 06c7 00000000 		.4byte	0
 10079              	.LLST50:
 10080 06cb 86000000 		.4byte	.LVL166
 10081 06cf 99000000 		.4byte	.LVL167-1
 10082 06d3 0100     		.2byte	0x1
 10083 06d5 53       		.byte	0x53
 10084 06d6 00000000 		.4byte	0
 10085 06da 00000000 		.4byte	0
 10086              	.LLST51:
 10087 06de 04000000 		.4byte	.LVL154
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 280


 10088 06e2 5C000000 		.4byte	.LVL161
 10089 06e6 0200     		.2byte	0x2
 10090 06e8 30       		.byte	0x30
 10091 06e9 9F       		.byte	0x9f
 10092 06ea 5C000000 		.4byte	.LVL161
 10093 06ee 5E000000 		.4byte	.LVL162
 10094 06f2 0100     		.2byte	0x1
 10095 06f4 56       		.byte	0x56
 10096 06f5 60000000 		.4byte	.LVL163
 10097 06f9 62000000 		.4byte	.LVL164
 10098 06fd 0200     		.2byte	0x2
 10099 06ff 30       		.byte	0x30
 10100 0700 9F       		.byte	0x9f
 10101 0701 62000000 		.4byte	.LVL164
 10102 0705 DA000000 		.4byte	.LVL170
 10103 0709 0100     		.2byte	0x1
 10104 070b 56       		.byte	0x56
 10105 070c DA000000 		.4byte	.LVL170
 10106 0710 E8000000 		.4byte	.LVL171
 10107 0714 0200     		.2byte	0x2
 10108 0716 30       		.byte	0x30
 10109 0717 9F       		.byte	0x9f
 10110 0718 E8000000 		.4byte	.LVL171
 10111 071c F8000000 		.4byte	.LVL173
 10112 0720 0100     		.2byte	0x1
 10113 0722 56       		.byte	0x56
 10114 0723 F8000000 		.4byte	.LVL173
 10115 0727 FC000000 		.4byte	.LFE157
 10116 072b 0100     		.2byte	0x1
 10117 072d 50       		.byte	0x50
 10118 072e 00000000 		.4byte	0
 10119 0732 00000000 		.4byte	0
 10120              	.LLST52:
 10121 0736 16000000 		.4byte	.LVL155
 10122 073a DA000000 		.4byte	.LVL170
 10123 073e 0100     		.2byte	0x1
 10124 0740 54       		.byte	0x54
 10125 0741 00000000 		.4byte	0
 10126 0745 00000000 		.4byte	0
 10127              	.LLST53:
 10128 0749 38000000 		.4byte	.LVL157
 10129 074d 46000000 		.4byte	.LVL158
 10130 0751 0100     		.2byte	0x1
 10131 0753 52       		.byte	0x52
 10132 0754 46000000 		.4byte	.LVL158
 10133 0758 4C000000 		.4byte	.LVL159
 10134 075c 0500     		.2byte	0x5
 10135 075e 03       		.byte	0x3
 10136 075f F8000000 		.4byte	pxOverflowDelayedTaskList
 10137 0763 00000000 		.4byte	0
 10138 0767 00000000 		.4byte	0
 10139              	.LLST54:
 10140 076b 00000000 		.4byte	.LVL174
 10141 076f 40000000 		.4byte	.LVL177
 10142 0773 0200     		.2byte	0x2
 10143 0775 30       		.byte	0x30
 10144 0776 9F       		.byte	0x9f
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 281


 10145 0777 40000000 		.4byte	.LVL177
 10146 077b 8C000000 		.4byte	.LVL182
 10147 077f 0100     		.2byte	0x1
 10148 0781 54       		.byte	0x54
 10149 0782 8C000000 		.4byte	.LVL182
 10150 0786 8E000000 		.4byte	.LVL183
 10151 078a 0200     		.2byte	0x2
 10152 078c 30       		.byte	0x30
 10153 078d 9F       		.byte	0x9f
 10154 078e 8E000000 		.4byte	.LVL183
 10155 0792 A2000000 		.4byte	.LVL185
 10156 0796 0100     		.2byte	0x1
 10157 0798 54       		.byte	0x54
 10158 0799 DA000000 		.4byte	.LVL191
 10159 079d DE000000 		.4byte	.LVL192
 10160 07a1 0200     		.2byte	0x2
 10161 07a3 30       		.byte	0x30
 10162 07a4 9F       		.byte	0x9f
 10163 07a5 00000000 		.4byte	0
 10164 07a9 00000000 		.4byte	0
 10165              	.LLST55:
 10166 07ad 00000000 		.4byte	.LVL174
 10167 07b1 C6000000 		.4byte	.LVL189
 10168 07b5 0200     		.2byte	0x2
 10169 07b7 30       		.byte	0x30
 10170 07b8 9F       		.byte	0x9f
 10171 07b9 C6000000 		.4byte	.LVL189
 10172 07bd DA000000 		.4byte	.LVL191
 10173 07c1 0200     		.2byte	0x2
 10174 07c3 31       		.byte	0x31
 10175 07c4 9F       		.byte	0x9f
 10176 07c5 DA000000 		.4byte	.LVL191
 10177 07c9 E0000000 		.4byte	.LVL193
 10178 07cd 0200     		.2byte	0x2
 10179 07cf 30       		.byte	0x30
 10180 07d0 9F       		.byte	0x9f
 10181 07d1 E0000000 		.4byte	.LVL193
 10182 07d5 E8000000 		.4byte	.LVL195
 10183 07d9 0100     		.2byte	0x1
 10184 07db 54       		.byte	0x54
 10185 07dc E8000000 		.4byte	.LVL195
 10186 07e0 F0000000 		.4byte	.LFE152
 10187 07e4 0100     		.2byte	0x1
 10188 07e6 50       		.byte	0x50
 10189 07e7 00000000 		.4byte	0
 10190 07eb 00000000 		.4byte	0
 10191              	.LLST56:
 10192 07ef A2000000 		.4byte	.LVL185
 10193 07f3 B2000000 		.4byte	.LVL187
 10194 07f7 0100     		.2byte	0x1
 10195 07f9 54       		.byte	0x54
 10196 07fa B2000000 		.4byte	.LVL187
 10197 07fe B4000000 		.4byte	.LVL188
 10198 0802 0300     		.2byte	0x3
 10199 0804 74       		.byte	0x74
 10200 0805 7F       		.sleb128 -1
 10201 0806 9F       		.byte	0x9f
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 282


 10202 0807 B4000000 		.4byte	.LVL188
 10203 080b D8000000 		.4byte	.LVL190
 10204 080f 0100     		.2byte	0x1
 10205 0811 54       		.byte	0x54
 10206 0812 DE000000 		.4byte	.LVL192
 10207 0816 E0000000 		.4byte	.LVL193
 10208 081a 0100     		.2byte	0x1
 10209 081c 54       		.byte	0x54
 10210 081d 00000000 		.4byte	0
 10211 0821 00000000 		.4byte	0
 10212              	.LLST57:
 10213 0825 00000000 		.4byte	.LVL196
 10214 0829 4B000000 		.4byte	.LVL201-1
 10215 082d 0100     		.2byte	0x1
 10216 082f 50       		.byte	0x50
 10217 0830 4B000000 		.4byte	.LVL201-1
 10218 0834 A4000000 		.4byte	.LVL208
 10219 0838 0100     		.2byte	0x1
 10220 083a 55       		.byte	0x55
 10221 083b A4000000 		.4byte	.LVL208
 10222 083f AC000000 		.4byte	.LFE140
 10223 0843 0400     		.2byte	0x4
 10224 0845 F3       		.byte	0xf3
 10225 0846 01       		.uleb128 0x1
 10226 0847 50       		.byte	0x50
 10227 0848 9F       		.byte	0x9f
 10228 0849 00000000 		.4byte	0
 10229 084d 00000000 		.4byte	0
 10230              	.LLST58:
 10231 0851 00000000 		.4byte	.LVL196
 10232 0855 4B000000 		.4byte	.LVL201-1
 10233 0859 0100     		.2byte	0x1
 10234 085b 51       		.byte	0x51
 10235 085c 4B000000 		.4byte	.LVL201-1
 10236 0860 A4000000 		.4byte	.LVL208
 10237 0864 0100     		.2byte	0x1
 10238 0866 54       		.byte	0x54
 10239 0867 A4000000 		.4byte	.LVL208
 10240 086b AC000000 		.4byte	.LFE140
 10241 086f 0400     		.2byte	0x4
 10242 0871 F3       		.byte	0xf3
 10243 0872 01       		.uleb128 0x1
 10244 0873 51       		.byte	0x51
 10245 0874 9F       		.byte	0x9f
 10246 0875 00000000 		.4byte	0
 10247 0879 00000000 		.4byte	0
 10248              	.LLST59:
 10249 087d 56000000 		.4byte	.LVL203
 10250 0881 8B000000 		.4byte	.LVL206-1
 10251 0885 0100     		.2byte	0x1
 10252 0887 53       		.byte	0x53
 10253 0888 00000000 		.4byte	0
 10254 088c 00000000 		.4byte	0
 10255              	.LLST60:
 10256 0890 02000000 		.4byte	.LVL197
 10257 0894 80000000 		.4byte	.LVL204
 10258 0898 0200     		.2byte	0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 283


 10259 089a 30       		.byte	0x30
 10260 089b 9F       		.byte	0x9f
 10261 089c 80000000 		.4byte	.LVL204
 10262 08a0 8B000000 		.4byte	.LVL206-1
 10263 08a4 0100     		.2byte	0x1
 10264 08a6 52       		.byte	0x52
 10265 08a7 00000000 		.4byte	0
 10266 08ab 00000000 		.4byte	0
 10267              	.LLST61:
 10268 08af 52000000 		.4byte	.LVL202
 10269 08b3 88000000 		.4byte	.LVL205
 10270 08b7 0100     		.2byte	0x1
 10271 08b9 50       		.byte	0x50
 10272 08ba 00000000 		.4byte	0
 10273 08be 00000000 		.4byte	0
 10274              	.LLST62:
 10275 08c2 00000000 		.4byte	.LVL209
 10276 08c6 23000000 		.4byte	.LVL212-1
 10277 08ca 0100     		.2byte	0x1
 10278 08cc 50       		.byte	0x50
 10279 08cd 23000000 		.4byte	.LVL212-1
 10280 08d1 32000000 		.4byte	.LVL215
 10281 08d5 0100     		.2byte	0x1
 10282 08d7 54       		.byte	0x54
 10283 08d8 32000000 		.4byte	.LVL215
 10284 08dc 34000000 		.4byte	.LVL216
 10285 08e0 0100     		.2byte	0x1
 10286 08e2 50       		.byte	0x50
 10287 08e3 34000000 		.4byte	.LVL216
 10288 08e7 50000000 		.4byte	.LFE141
 10289 08eb 0400     		.2byte	0x4
 10290 08ed F3       		.byte	0xf3
 10291 08ee 01       		.uleb128 0x1
 10292 08ef 50       		.byte	0x50
 10293 08f0 9F       		.byte	0x9f
 10294 08f1 00000000 		.4byte	0
 10295 08f5 00000000 		.4byte	0
 10296              	.LLST63:
 10297 08f9 02000000 		.4byte	.LVL210
 10298 08fd 30000000 		.4byte	.LVL214
 10299 0901 0200     		.2byte	0x2
 10300 0903 30       		.byte	0x30
 10301 0904 9F       		.byte	0x9f
 10302 0905 30000000 		.4byte	.LVL214
 10303 0909 32000000 		.4byte	.LVL215
 10304 090d 0100     		.2byte	0x1
 10305 090f 50       		.byte	0x50
 10306 0910 32000000 		.4byte	.LVL215
 10307 0914 34000000 		.4byte	.LVL216
 10308 0918 0200     		.2byte	0x2
 10309 091a 30       		.byte	0x30
 10310 091b 9F       		.byte	0x9f
 10311 091c 34000000 		.4byte	.LVL216
 10312 0920 50000000 		.4byte	.LFE141
 10313 0924 0100     		.2byte	0x1
 10314 0926 50       		.byte	0x50
 10315 0927 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 284


 10316 092b 00000000 		.4byte	0
 10317              	.LLST64:
 10318 092f 22000000 		.4byte	.LVL217
 10319 0933 3C000000 		.4byte	.LVL218
 10320 0937 0100     		.2byte	0x1
 10321 0939 53       		.byte	0x53
 10322 093a 00000000 		.4byte	0
 10323 093e 00000000 		.4byte	0
 10324              	.LLST65:
 10325 0942 58000000 		.4byte	.LVL220
 10326 0946 6C000000 		.4byte	.LVL221
 10327 094a 0100     		.2byte	0x1
 10328 094c 53       		.byte	0x53
 10329 094d 6E000000 		.4byte	.LVL222
 10330 0951 C8000000 		.4byte	.LFE158
 10331 0955 0100     		.2byte	0x1
 10332 0957 53       		.byte	0x53
 10333 0958 00000000 		.4byte	0
 10334 095c 00000000 		.4byte	0
 10335              	.LLST66:
 10336 0960 00000000 		.4byte	.LVL225
 10337 0964 07000000 		.4byte	.LVL226-1
 10338 0968 0100     		.2byte	0x1
 10339 096a 50       		.byte	0x50
 10340 096b 07000000 		.4byte	.LVL226-1
 10341 096f 10000000 		.4byte	.LVL227
 10342 0973 0100     		.2byte	0x1
 10343 0975 54       		.byte	0x54
 10344 0976 00000000 		.4byte	0
 10345 097a 00000000 		.4byte	0
 10346              	.LLST67:
 10347 097e 10000000 		.4byte	.LVL227
 10348 0982 AE000000 		.4byte	.LVL239
 10349 0986 0100     		.2byte	0x1
 10350 0988 54       		.byte	0x54
 10351 0989 00000000 		.4byte	0
 10352 098d 00000000 		.4byte	0
 10353              	.LLST68:
 10354 0991 00000000 		.4byte	.LVL240
 10355 0995 23000000 		.4byte	.LVL243-1
 10356 0999 0100     		.2byte	0x1
 10357 099b 50       		.byte	0x50
 10358 099c 23000000 		.4byte	.LVL243-1
 10359 09a0 34000000 		.4byte	.LFE159
 10360 09a4 0400     		.2byte	0x4
 10361 09a6 F3       		.byte	0xf3
 10362 09a7 01       		.uleb128 0x1
 10363 09a8 50       		.byte	0x50
 10364 09a9 9F       		.byte	0x9f
 10365 09aa 00000000 		.4byte	0
 10366 09ae 00000000 		.4byte	0
 10367              	.LLST69:
 10368 09b2 00000000 		.4byte	.LVL240
 10369 09b6 1E000000 		.4byte	.LVL242
 10370 09ba 0100     		.2byte	0x1
 10371 09bc 51       		.byte	0x51
 10372 09bd 1E000000 		.4byte	.LVL242
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 285


 10373 09c1 2E000000 		.4byte	.LVL245
 10374 09c5 0100     		.2byte	0x1
 10375 09c7 54       		.byte	0x54
 10376 09c8 2E000000 		.4byte	.LVL245
 10377 09cc 34000000 		.4byte	.LFE159
 10378 09d0 0400     		.2byte	0x4
 10379 09d2 F3       		.byte	0xf3
 10380 09d3 01       		.uleb128 0x1
 10381 09d4 51       		.byte	0x51
 10382 09d5 9F       		.byte	0x9f
 10383 09d6 00000000 		.4byte	0
 10384 09da 00000000 		.4byte	0
 10385              	.LLST70:
 10386 09de 00000000 		.4byte	.LVL246
 10387 09e2 18000000 		.4byte	.LVL248
 10388 09e6 0100     		.2byte	0x1
 10389 09e8 50       		.byte	0x50
 10390 09e9 18000000 		.4byte	.LVL248
 10391 09ed 2E000000 		.4byte	.LVL249
 10392 09f1 0100     		.2byte	0x1
 10393 09f3 53       		.byte	0x53
 10394 09f4 2E000000 		.4byte	.LVL249
 10395 09f8 30000000 		.4byte	.LVL250
 10396 09fc 0400     		.2byte	0x4
 10397 09fe F3       		.byte	0xf3
 10398 09ff 01       		.uleb128 0x1
 10399 0a00 50       		.byte	0x50
 10400 0a01 9F       		.byte	0x9f
 10401 0a02 30000000 		.4byte	.LVL250
 10402 0a06 38000000 		.4byte	.LVL251
 10403 0a0a 0100     		.2byte	0x1
 10404 0a0c 53       		.byte	0x53
 10405 0a0d 38000000 		.4byte	.LVL251
 10406 0a11 4D000000 		.4byte	.LVL255-1
 10407 0a15 0100     		.2byte	0x1
 10408 0a17 50       		.byte	0x50
 10409 0a18 4D000000 		.4byte	.LVL255-1
 10410 0a1c 5C000000 		.4byte	.LFE160
 10411 0a20 0400     		.2byte	0x4
 10412 0a22 F3       		.byte	0xf3
 10413 0a23 01       		.uleb128 0x1
 10414 0a24 50       		.byte	0x50
 10415 0a25 9F       		.byte	0x9f
 10416 0a26 00000000 		.4byte	0
 10417 0a2a 00000000 		.4byte	0
 10418              	.LLST71:
 10419 0a2e 00000000 		.4byte	.LVL246
 10420 0a32 3E000000 		.4byte	.LVL253
 10421 0a36 0100     		.2byte	0x1
 10422 0a38 51       		.byte	0x51
 10423 0a39 3E000000 		.4byte	.LVL253
 10424 0a3d 42000000 		.4byte	.LVL254
 10425 0a41 0100     		.2byte	0x1
 10426 0a43 53       		.byte	0x53
 10427 0a44 42000000 		.4byte	.LVL254
 10428 0a48 5C000000 		.4byte	.LFE160
 10429 0a4c 0400     		.2byte	0x4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 286


 10430 0a4e F3       		.byte	0xf3
 10431 0a4f 01       		.uleb128 0x1
 10432 0a50 51       		.byte	0x51
 10433 0a51 9F       		.byte	0x9f
 10434 0a52 00000000 		.4byte	0
 10435 0a56 00000000 		.4byte	0
 10436              	.LLST72:
 10437 0a5a 00000000 		.4byte	.LVL246
 10438 0a5e 3A000000 		.4byte	.LVL252
 10439 0a62 0100     		.2byte	0x1
 10440 0a64 52       		.byte	0x52
 10441 0a65 3A000000 		.4byte	.LVL252
 10442 0a69 58000000 		.4byte	.LVL257
 10443 0a6d 0100     		.2byte	0x1
 10444 0a6f 54       		.byte	0x54
 10445 0a70 58000000 		.4byte	.LVL257
 10446 0a74 5C000000 		.4byte	.LFE160
 10447 0a78 0400     		.2byte	0x4
 10448 0a7a F3       		.byte	0xf3
 10449 0a7b 01       		.uleb128 0x1
 10450 0a7c 52       		.byte	0x52
 10451 0a7d 9F       		.byte	0x9f
 10452 0a7e 00000000 		.4byte	0
 10453 0a82 00000000 		.4byte	0
 10454              	.LLST73:
 10455 0a86 00000000 		.4byte	.LVL258
 10456 0a8a 25000000 		.4byte	.LVL262-1
 10457 0a8e 0100     		.2byte	0x1
 10458 0a90 50       		.byte	0x50
 10459 0a91 25000000 		.4byte	.LVL262-1
 10460 0a95 3C000000 		.4byte	.LFE161
 10461 0a99 0400     		.2byte	0x4
 10462 0a9b F3       		.byte	0xf3
 10463 0a9c 01       		.uleb128 0x1
 10464 0a9d 50       		.byte	0x50
 10465 0a9e 9F       		.byte	0x9f
 10466 0a9f 00000000 		.4byte	0
 10467 0aa3 00000000 		.4byte	0
 10468              	.LLST74:
 10469 0aa7 00000000 		.4byte	.LVL258
 10470 0aab 20000000 		.4byte	.LVL261
 10471 0aaf 0100     		.2byte	0x1
 10472 0ab1 51       		.byte	0x51
 10473 0ab2 20000000 		.4byte	.LVL261
 10474 0ab6 36000000 		.4byte	.LVL265
 10475 0aba 0100     		.2byte	0x1
 10476 0abc 54       		.byte	0x54
 10477 0abd 00000000 		.4byte	0
 10478 0ac1 00000000 		.4byte	0
 10479              	.LLST75:
 10480 0ac5 00000000 		.4byte	.LVL258
 10481 0ac9 1C000000 		.4byte	.LVL260
 10482 0acd 0100     		.2byte	0x1
 10483 0acf 52       		.byte	0x52
 10484 0ad0 1C000000 		.4byte	.LVL260
 10485 0ad4 36000000 		.4byte	.LVL265
 10486 0ad8 0100     		.2byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 287


 10487 0ada 55       		.byte	0x55
 10488 0adb 36000000 		.4byte	.LVL265
 10489 0adf 3C000000 		.4byte	.LFE161
 10490 0ae3 0400     		.2byte	0x4
 10491 0ae5 F3       		.byte	0xf3
 10492 0ae6 01       		.uleb128 0x1
 10493 0ae7 52       		.byte	0x52
 10494 0ae8 9F       		.byte	0x9f
 10495 0ae9 00000000 		.4byte	0
 10496 0aed 00000000 		.4byte	0
 10497              	.LLST76:
 10498 0af1 00000000 		.4byte	.LVL266
 10499 0af5 20000000 		.4byte	.LVL269
 10500 0af9 0100     		.2byte	0x1
 10501 0afb 50       		.byte	0x50
 10502 0afc 20000000 		.4byte	.LVL269
 10503 0b00 88000000 		.4byte	.LFE162
 10504 0b04 0400     		.2byte	0x4
 10505 0b06 F3       		.byte	0xf3
 10506 0b07 01       		.uleb128 0x1
 10507 0b08 50       		.byte	0x50
 10508 0b09 9F       		.byte	0x9f
 10509 0b0a 00000000 		.4byte	0
 10510 0b0e 00000000 		.4byte	0
 10511              	.LLST77:
 10512 0b12 06000000 		.4byte	.LVL267
 10513 0b16 7C000000 		.4byte	.LVL277
 10514 0b1a 0100     		.2byte	0x1
 10515 0b1c 54       		.byte	0x54
 10516 0b1d 00000000 		.4byte	0
 10517 0b21 00000000 		.4byte	0
 10518              	.LLST78:
 10519 0b25 6E000000 		.4byte	.LVL274
 10520 0b29 78000000 		.4byte	.LVL275
 10521 0b2d 0200     		.2byte	0x2
 10522 0b2f 31       		.byte	0x31
 10523 0b30 9F       		.byte	0x9f
 10524 0b31 7A000000 		.4byte	.LVL276
 10525 0b35 88000000 		.4byte	.LFE162
 10526 0b39 0100     		.2byte	0x1
 10527 0b3b 50       		.byte	0x50
 10528 0b3c 00000000 		.4byte	0
 10529 0b40 00000000 		.4byte	0
 10530              	.LLST79:
 10531 0b44 00000000 		.4byte	.LVL278
 10532 0b48 3B000000 		.4byte	.LVL282-1
 10533 0b4c 0100     		.2byte	0x1
 10534 0b4e 50       		.byte	0x50
 10535 0b4f 3B000000 		.4byte	.LVL282-1
 10536 0b53 84000000 		.4byte	.LFE163
 10537 0b57 0400     		.2byte	0x4
 10538 0b59 F3       		.byte	0xf3
 10539 0b5a 01       		.uleb128 0x1
 10540 0b5b 50       		.byte	0x50
 10541 0b5c 9F       		.byte	0x9f
 10542 0b5d 00000000 		.4byte	0
 10543 0b61 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 288


 10544              	.LLST80:
 10545 0b65 00000000 		.4byte	.LVL278
 10546 0b69 3B000000 		.4byte	.LVL282-1
 10547 0b6d 0100     		.2byte	0x1
 10548 0b6f 51       		.byte	0x51
 10549 0b70 3B000000 		.4byte	.LVL282-1
 10550 0b74 84000000 		.4byte	.LFE163
 10551 0b78 0400     		.2byte	0x4
 10552 0b7a F3       		.byte	0xf3
 10553 0b7b 01       		.uleb128 0x1
 10554 0b7c 51       		.byte	0x51
 10555 0b7d 9F       		.byte	0x9f
 10556 0b7e 00000000 		.4byte	0
 10557 0b82 00000000 		.4byte	0
 10558              	.LLST81:
 10559 0b86 24000000 		.4byte	.LVL280
 10560 0b8a 7E000000 		.4byte	.LVL285
 10561 0b8e 0100     		.2byte	0x1
 10562 0b90 54       		.byte	0x54
 10563 0b91 00000000 		.4byte	0
 10564 0b95 00000000 		.4byte	0
 10565              	.LLST82:
 10566 0b99 00000000 		.4byte	.LVL286
 10567 0b9d 1B000000 		.4byte	.LVL288-1
 10568 0ba1 0100     		.2byte	0x1
 10569 0ba3 50       		.byte	0x50
 10570 0ba4 1B000000 		.4byte	.LVL288-1
 10571 0ba8 30000000 		.4byte	.LVL290
 10572 0bac 0100     		.2byte	0x1
 10573 0bae 54       		.byte	0x54
 10574 0baf 30000000 		.4byte	.LVL290
 10575 0bb3 34000000 		.4byte	.LFE164
 10576 0bb7 0400     		.2byte	0x4
 10577 0bb9 F3       		.byte	0xf3
 10578 0bba 01       		.uleb128 0x1
 10579 0bbb 50       		.byte	0x50
 10580 0bbc 9F       		.byte	0x9f
 10581 0bbd 00000000 		.4byte	0
 10582 0bc1 00000000 		.4byte	0
 10583              	.LLST83:
 10584 0bc5 00000000 		.4byte	.LVL292
 10585 0bc9 31000000 		.4byte	.LVL295-1
 10586 0bcd 0100     		.2byte	0x1
 10587 0bcf 50       		.byte	0x50
 10588 0bd0 31000000 		.4byte	.LVL295-1
 10589 0bd4 7C000000 		.4byte	.LVL309
 10590 0bd8 0100     		.2byte	0x1
 10591 0bda 55       		.byte	0x55
 10592 0bdb 7C000000 		.4byte	.LVL309
 10593 0bdf 80000000 		.4byte	.LFE166
 10594 0be3 0400     		.2byte	0x4
 10595 0be5 F3       		.byte	0xf3
 10596 0be6 01       		.uleb128 0x1
 10597 0be7 50       		.byte	0x50
 10598 0be8 9F       		.byte	0x9f
 10599 0be9 00000000 		.4byte	0
 10600 0bed 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 289


 10601              	.LLST84:
 10602 0bf1 00000000 		.4byte	.LVL292
 10603 0bf5 31000000 		.4byte	.LVL295-1
 10604 0bf9 0100     		.2byte	0x1
 10605 0bfb 51       		.byte	0x51
 10606 0bfc 31000000 		.4byte	.LVL295-1
 10607 0c00 64000000 		.4byte	.LVL300
 10608 0c04 0100     		.2byte	0x1
 10609 0c06 54       		.byte	0x54
 10610 0c07 64000000 		.4byte	.LVL300
 10611 0c0b 66000000 		.4byte	.LVL301
 10612 0c0f 0400     		.2byte	0x4
 10613 0c11 F3       		.byte	0xf3
 10614 0c12 01       		.uleb128 0x1
 10615 0c13 51       		.byte	0x51
 10616 0c14 9F       		.byte	0x9f
 10617 0c15 66000000 		.4byte	.LVL301
 10618 0c19 6C000000 		.4byte	.LVL303
 10619 0c1d 0100     		.2byte	0x1
 10620 0c1f 54       		.byte	0x54
 10621 0c20 6C000000 		.4byte	.LVL303
 10622 0c24 6E000000 		.4byte	.LVL304
 10623 0c28 0400     		.2byte	0x4
 10624 0c2a F3       		.byte	0xf3
 10625 0c2b 01       		.uleb128 0x1
 10626 0c2c 51       		.byte	0x51
 10627 0c2d 9F       		.byte	0x9f
 10628 0c2e 6E000000 		.4byte	.LVL304
 10629 0c32 70000000 		.4byte	.LVL305
 10630 0c36 0100     		.2byte	0x1
 10631 0c38 54       		.byte	0x54
 10632 0c39 70000000 		.4byte	.LVL305
 10633 0c3d 72000000 		.4byte	.LVL306
 10634 0c41 0400     		.2byte	0x4
 10635 0c43 F3       		.byte	0xf3
 10636 0c44 01       		.uleb128 0x1
 10637 0c45 51       		.byte	0x51
 10638 0c46 9F       		.byte	0x9f
 10639 0c47 72000000 		.4byte	.LVL306
 10640 0c4b 74000000 		.4byte	.LVL307
 10641 0c4f 0100     		.2byte	0x1
 10642 0c51 54       		.byte	0x54
 10643 0c52 74000000 		.4byte	.LVL307
 10644 0c56 80000000 		.4byte	.LFE166
 10645 0c5a 0400     		.2byte	0x4
 10646 0c5c F3       		.byte	0xf3
 10647 0c5d 01       		.uleb128 0x1
 10648 0c5e 51       		.byte	0x51
 10649 0c5f 9F       		.byte	0x9f
 10650 0c60 00000000 		.4byte	0
 10651 0c64 00000000 		.4byte	0
 10652              	.LLST85:
 10653 0c68 62000000 		.4byte	.LVL299
 10654 0c6c 66000000 		.4byte	.LVL301
 10655 0c70 0200     		.2byte	0x2
 10656 0c72 30       		.byte	0x30
 10657 0c73 9F       		.byte	0x9f
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 290


 10658 0c74 6A000000 		.4byte	.LVL302
 10659 0c78 6E000000 		.4byte	.LVL304
 10660 0c7c 0200     		.2byte	0x2
 10661 0c7e 31       		.byte	0x31
 10662 0c7f 9F       		.byte	0x9f
 10663 0c80 74000000 		.4byte	.LVL307
 10664 0c84 7C000000 		.4byte	.LVL309
 10665 0c88 0100     		.2byte	0x1
 10666 0c8a 54       		.byte	0x54
 10667 0c8b 7C000000 		.4byte	.LVL309
 10668 0c8f 80000000 		.4byte	.LFE166
 10669 0c93 0100     		.2byte	0x1
 10670 0c95 50       		.byte	0x50
 10671 0c96 00000000 		.4byte	0
 10672 0c9a 00000000 		.4byte	0
 10673              	.LLST86:
 10674 0c9e 38000000 		.4byte	.LVL296
 10675 0ca2 5E000000 		.4byte	.LVL298
 10676 0ca6 0100     		.2byte	0x1
 10677 0ca8 50       		.byte	0x50
 10678 0ca9 66000000 		.4byte	.LVL301
 10679 0cad 74000000 		.4byte	.LVL307
 10680 0cb1 0100     		.2byte	0x1
 10681 0cb3 50       		.byte	0x50
 10682 0cb4 00000000 		.4byte	0
 10683 0cb8 00000000 		.4byte	0
 10684              	.LLST87:
 10685 0cbc 3C000000 		.4byte	.LVL297
 10686 0cc0 61000000 		.4byte	.LVL299-1
 10687 0cc4 0100     		.2byte	0x1
 10688 0cc6 52       		.byte	0x52
 10689 0cc7 66000000 		.4byte	.LVL301
 10690 0ccb 74000000 		.4byte	.LVL307
 10691 0ccf 0100     		.2byte	0x1
 10692 0cd1 52       		.byte	0x52
 10693 0cd2 00000000 		.4byte	0
 10694 0cd6 00000000 		.4byte	0
 10695              	.LLST88:
 10696 0cda 00000000 		.4byte	.LVL310
 10697 0cde 0C000000 		.4byte	.LVL311
 10698 0ce2 0100     		.2byte	0x1
 10699 0ce4 50       		.byte	0x50
 10700 0ce5 00000000 		.4byte	0
 10701 0ce9 00000000 		.4byte	0
 10702              	.LLST89:
 10703 0ced 00000000 		.4byte	.LVL310
 10704 0cf1 0E000000 		.4byte	.LVL312
 10705 0cf5 0100     		.2byte	0x1
 10706 0cf7 51       		.byte	0x51
 10707 0cf8 0E000000 		.4byte	.LVL312
 10708 0cfc 12000000 		.4byte	.LVL313
 10709 0d00 0300     		.2byte	0x3
 10710 0d02 71       		.byte	0x71
 10711 0d03 70       		.sleb128 -16
 10712 0d04 9F       		.byte	0x9f
 10713 0d05 12000000 		.4byte	.LVL313
 10714 0d09 1C000000 		.4byte	.LFE169
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 291


 10715 0d0d 0400     		.2byte	0x4
 10716 0d0f F3       		.byte	0xf3
 10717 0d10 01       		.uleb128 0x1
 10718 0d11 51       		.byte	0x51
 10719 0d12 9F       		.byte	0x9f
 10720 0d13 00000000 		.4byte	0
 10721 0d17 00000000 		.4byte	0
 10722              	.LLST90:
 10723 0d1b 0C000000 		.4byte	.LVL311
 10724 0d1f 14000000 		.4byte	.LVL314
 10725 0d23 0100     		.2byte	0x1
 10726 0d25 50       		.byte	0x50
 10727 0d26 00000000 		.4byte	0
 10728 0d2a 00000000 		.4byte	0
 10729              	.LLST91:
 10730 0d2e 00000000 		.4byte	.LVL315
 10731 0d32 0C000000 		.4byte	.LVL316
 10732 0d36 0100     		.2byte	0x1
 10733 0d38 50       		.byte	0x50
 10734 0d39 16000000 		.4byte	.LVL320
 10735 0d3d 18000000 		.4byte	.LVL321
 10736 0d41 0100     		.2byte	0x1
 10737 0d43 50       		.byte	0x50
 10738 0d44 18000000 		.4byte	.LVL321
 10739 0d48 20000000 		.4byte	.LFE170
 10740 0d4c 0400     		.2byte	0x4
 10741 0d4e F3       		.byte	0xf3
 10742 0d4f 01       		.uleb128 0x1
 10743 0d50 50       		.byte	0x50
 10744 0d51 9F       		.byte	0x9f
 10745 0d52 00000000 		.4byte	0
 10746 0d56 00000000 		.4byte	0
 10747              	.LLST92:
 10748 0d5a 00000000 		.4byte	.LVL315
 10749 0d5e 0E000000 		.4byte	.LVL317
 10750 0d62 0100     		.2byte	0x1
 10751 0d64 51       		.byte	0x51
 10752 0d65 0E000000 		.4byte	.LVL317
 10753 0d69 16000000 		.4byte	.LVL320
 10754 0d6d 0300     		.2byte	0x3
 10755 0d6f 71       		.byte	0x71
 10756 0d70 70       		.sleb128 -16
 10757 0d71 9F       		.byte	0x9f
 10758 0d72 16000000 		.4byte	.LVL320
 10759 0d76 20000000 		.4byte	.LFE170
 10760 0d7a 0100     		.2byte	0x1
 10761 0d7c 51       		.byte	0x51
 10762 0d7d 00000000 		.4byte	0
 10763 0d81 00000000 		.4byte	0
 10764              	.LLST93:
 10765 0d85 00000000 		.4byte	.LVL315
 10766 0d89 14000000 		.4byte	.LVL319
 10767 0d8d 0200     		.2byte	0x2
 10768 0d8f 30       		.byte	0x30
 10769 0d90 9F       		.byte	0x9f
 10770 0d91 14000000 		.4byte	.LVL319
 10771 0d95 16000000 		.4byte	.LVL320
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 292


 10772 0d99 0100     		.2byte	0x1
 10773 0d9b 50       		.byte	0x50
 10774 0d9c 16000000 		.4byte	.LVL320
 10775 0da0 18000000 		.4byte	.LVL321
 10776 0da4 0200     		.2byte	0x2
 10777 0da6 30       		.byte	0x30
 10778 0da7 9F       		.byte	0x9f
 10779 0da8 18000000 		.4byte	.LVL321
 10780 0dac 20000000 		.4byte	.LFE170
 10781 0db0 0100     		.2byte	0x1
 10782 0db2 50       		.byte	0x50
 10783 0db3 00000000 		.4byte	0
 10784 0db7 00000000 		.4byte	0
 10785              	.LLST94:
 10786 0dbb 0C000000 		.4byte	.LVL316
 10787 0dbf 12000000 		.4byte	.LVL318
 10788 0dc3 0100     		.2byte	0x1
 10789 0dc5 50       		.byte	0x50
 10790 0dc6 00000000 		.4byte	0
 10791 0dca 00000000 		.4byte	0
 10792              	.LLST95:
 10793 0dce 00000000 		.4byte	.LVL325
 10794 0dd2 09000000 		.4byte	.LVL326-1
 10795 0dd6 0100     		.2byte	0x1
 10796 0dd8 50       		.byte	0x50
 10797 0dd9 09000000 		.4byte	.LVL326-1
 10798 0ddd 78000000 		.4byte	.LVL332
 10799 0de1 0100     		.2byte	0x1
 10800 0de3 55       		.byte	0x55
 10801 0de4 78000000 		.4byte	.LVL332
 10802 0de8 80000000 		.4byte	.LFE178
 10803 0dec 0400     		.2byte	0x4
 10804 0dee F3       		.byte	0xf3
 10805 0def 01       		.uleb128 0x1
 10806 0df0 50       		.byte	0x50
 10807 0df1 9F       		.byte	0x9f
 10808 0df2 00000000 		.4byte	0
 10809 0df6 00000000 		.4byte	0
 10810              	.LLST96:
 10811 0dfa 00000000 		.4byte	.LVL325
 10812 0dfe 09000000 		.4byte	.LVL326-1
 10813 0e02 0100     		.2byte	0x1
 10814 0e04 51       		.byte	0x51
 10815 0e05 09000000 		.4byte	.LVL326-1
 10816 0e09 4A000000 		.4byte	.LVL330
 10817 0e0d 0100     		.2byte	0x1
 10818 0e0f 54       		.byte	0x54
 10819 0e10 4A000000 		.4byte	.LVL330
 10820 0e14 80000000 		.4byte	.LFE178
 10821 0e18 0400     		.2byte	0x4
 10822 0e1a F3       		.byte	0xf3
 10823 0e1b 01       		.uleb128 0x1
 10824 0e1c 51       		.byte	0x51
 10825 0e1d 9F       		.byte	0x9f
 10826 0e1e 00000000 		.4byte	0
 10827 0e22 00000000 		.4byte	0
 10828              	.LLST97:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 293


 10829 0e26 4A000000 		.4byte	.LVL330
 10830 0e2a 78000000 		.4byte	.LVL332
 10831 0e2e 0100     		.2byte	0x1
 10832 0e30 54       		.byte	0x54
 10833 0e31 78000000 		.4byte	.LVL332
 10834 0e35 80000000 		.4byte	.LFE178
 10835 0e39 0100     		.2byte	0x1
 10836 0e3b 50       		.byte	0x50
 10837 0e3c 00000000 		.4byte	0
 10838 0e40 00000000 		.4byte	0
 10839              	.LLST98:
 10840 0e44 00000000 		.4byte	.LVL333
 10841 0e48 0D000000 		.4byte	.LVL334-1
 10842 0e4c 0100     		.2byte	0x1
 10843 0e4e 50       		.byte	0x50
 10844 0e4f 0D000000 		.4byte	.LVL334-1
 10845 0e53 9C000000 		.4byte	.LVL344
 10846 0e57 0100     		.2byte	0x1
 10847 0e59 57       		.byte	0x57
 10848 0e5a 9C000000 		.4byte	.LVL344
 10849 0e5e A4000000 		.4byte	.LFE179
 10850 0e62 0400     		.2byte	0x4
 10851 0e64 F3       		.byte	0xf3
 10852 0e65 01       		.uleb128 0x1
 10853 0e66 50       		.byte	0x50
 10854 0e67 9F       		.byte	0x9f
 10855 0e68 00000000 		.4byte	0
 10856 0e6c 00000000 		.4byte	0
 10857              	.LLST99:
 10858 0e70 00000000 		.4byte	.LVL333
 10859 0e74 0D000000 		.4byte	.LVL334-1
 10860 0e78 0100     		.2byte	0x1
 10861 0e7a 51       		.byte	0x51
 10862 0e7b 0D000000 		.4byte	.LVL334-1
 10863 0e7f 80000000 		.4byte	.LVL338
 10864 0e83 0100     		.2byte	0x1
 10865 0e85 55       		.byte	0x55
 10866 0e86 80000000 		.4byte	.LVL338
 10867 0e8a 86000000 		.4byte	.LVL341
 10868 0e8e 0400     		.2byte	0x4
 10869 0e90 F3       		.byte	0xf3
 10870 0e91 01       		.uleb128 0x1
 10871 0e92 51       		.byte	0x51
 10872 0e93 9F       		.byte	0x9f
 10873 0e94 86000000 		.4byte	.LVL341
 10874 0e98 88000000 		.4byte	.LVL342
 10875 0e9c 0100     		.2byte	0x1
 10876 0e9e 55       		.byte	0x55
 10877 0e9f 88000000 		.4byte	.LVL342
 10878 0ea3 A4000000 		.4byte	.LFE179
 10879 0ea7 0400     		.2byte	0x4
 10880 0ea9 F3       		.byte	0xf3
 10881 0eaa 01       		.uleb128 0x1
 10882 0eab 51       		.byte	0x51
 10883 0eac 9F       		.byte	0x9f
 10884 0ead 00000000 		.4byte	0
 10885 0eb1 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 294


 10886              	.LLST100:
 10887 0eb5 00000000 		.4byte	.LVL333
 10888 0eb9 0D000000 		.4byte	.LVL334-1
 10889 0ebd 0100     		.2byte	0x1
 10890 0ebf 52       		.byte	0x52
 10891 0ec0 0D000000 		.4byte	.LVL334-1
 10892 0ec4 84000000 		.4byte	.LVL340
 10893 0ec8 0100     		.2byte	0x1
 10894 0eca 54       		.byte	0x54
 10895 0ecb 84000000 		.4byte	.LVL340
 10896 0ecf 86000000 		.4byte	.LVL341
 10897 0ed3 0400     		.2byte	0x4
 10898 0ed5 F3       		.byte	0xf3
 10899 0ed6 01       		.uleb128 0x1
 10900 0ed7 52       		.byte	0x52
 10901 0ed8 9F       		.byte	0x9f
 10902 0ed9 86000000 		.4byte	.LVL341
 10903 0edd 88000000 		.4byte	.LVL342
 10904 0ee1 0100     		.2byte	0x1
 10905 0ee3 54       		.byte	0x54
 10906 0ee4 88000000 		.4byte	.LVL342
 10907 0ee8 A4000000 		.4byte	.LFE179
 10908 0eec 0400     		.2byte	0x4
 10909 0eee F3       		.byte	0xf3
 10910 0eef 01       		.uleb128 0x1
 10911 0ef0 52       		.byte	0x52
 10912 0ef1 9F       		.byte	0x9f
 10913 0ef2 00000000 		.4byte	0
 10914 0ef6 00000000 		.4byte	0
 10915              	.LLST101:
 10916 0efa 00000000 		.4byte	.LVL333
 10917 0efe 0D000000 		.4byte	.LVL334-1
 10918 0f02 0100     		.2byte	0x1
 10919 0f04 53       		.byte	0x53
 10920 0f05 0D000000 		.4byte	.LVL334-1
 10921 0f09 9C000000 		.4byte	.LVL344
 10922 0f0d 0100     		.2byte	0x1
 10923 0f0f 56       		.byte	0x56
 10924 0f10 9C000000 		.4byte	.LVL344
 10925 0f14 A4000000 		.4byte	.LFE179
 10926 0f18 0400     		.2byte	0x4
 10927 0f1a F3       		.byte	0xf3
 10928 0f1b 01       		.uleb128 0x1
 10929 0f1c 53       		.byte	0x53
 10930 0f1d 9F       		.byte	0x9f
 10931 0f1e 00000000 		.4byte	0
 10932 0f22 00000000 		.4byte	0
 10933              	.LLST102:
 10934 0f26 82000000 		.4byte	.LVL339
 10935 0f2a 86000000 		.4byte	.LVL341
 10936 0f2e 0200     		.2byte	0x2
 10937 0f30 31       		.byte	0x31
 10938 0f31 9F       		.byte	0x9f
 10939 0f32 88000000 		.4byte	.LVL342
 10940 0f36 9C000000 		.4byte	.LVL344
 10941 0f3a 0100     		.2byte	0x1
 10942 0f3c 54       		.byte	0x54
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 295


 10943 0f3d 9C000000 		.4byte	.LVL344
 10944 0f41 A4000000 		.4byte	.LFE179
 10945 0f45 0100     		.2byte	0x1
 10946 0f47 50       		.byte	0x50
 10947 0f48 00000000 		.4byte	0
 10948 0f4c 00000000 		.4byte	0
 10949              	.LLST103:
 10950 0f50 00000000 		.4byte	.LVL345
 10951 0f54 21000000 		.4byte	.LVL350-1
 10952 0f58 0100     		.2byte	0x1
 10953 0f5a 50       		.byte	0x50
 10954 0f5b 21000000 		.4byte	.LVL350-1
 10955 0f5f D6000000 		.4byte	.LVL359
 10956 0f63 0100     		.2byte	0x1
 10957 0f65 54       		.byte	0x54
 10958 0f66 D6000000 		.4byte	.LVL359
 10959 0f6a E4000000 		.4byte	.LFE180
 10960 0f6e 0400     		.2byte	0x4
 10961 0f70 F3       		.byte	0xf3
 10962 0f71 01       		.uleb128 0x1
 10963 0f72 50       		.byte	0x50
 10964 0f73 9F       		.byte	0x9f
 10965 0f74 00000000 		.4byte	0
 10966 0f78 00000000 		.4byte	0
 10967              	.LLST104:
 10968 0f7c 00000000 		.4byte	.LVL345
 10969 0f80 21000000 		.4byte	.LVL350-1
 10970 0f84 0100     		.2byte	0x1
 10971 0f86 51       		.byte	0x51
 10972 0f87 21000000 		.4byte	.LVL350-1
 10973 0f8b 46000000 		.4byte	.LVL352
 10974 0f8f 0100     		.2byte	0x1
 10975 0f91 56       		.byte	0x56
 10976 0f92 46000000 		.4byte	.LVL352
 10977 0f96 4C000000 		.4byte	.LVL353
 10978 0f9a 0400     		.2byte	0x4
 10979 0f9c F3       		.byte	0xf3
 10980 0f9d 01       		.uleb128 0x1
 10981 0f9e 51       		.byte	0x51
 10982 0f9f 9F       		.byte	0x9f
 10983 0fa0 4C000000 		.4byte	.LVL353
 10984 0fa4 6C000000 		.4byte	.LVL354
 10985 0fa8 0100     		.2byte	0x1
 10986 0faa 56       		.byte	0x56
 10987 0fab 6C000000 		.4byte	.LVL354
 10988 0faf E4000000 		.4byte	.LFE180
 10989 0fb3 0400     		.2byte	0x4
 10990 0fb5 F3       		.byte	0xf3
 10991 0fb6 01       		.uleb128 0x1
 10992 0fb7 51       		.byte	0x51
 10993 0fb8 9F       		.byte	0x9f
 10994 0fb9 00000000 		.4byte	0
 10995 0fbd 00000000 		.4byte	0
 10996              	.LLST105:
 10997 0fc1 00000000 		.4byte	.LVL345
 10998 0fc5 21000000 		.4byte	.LVL350-1
 10999 0fc9 0100     		.2byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 296


 11000 0fcb 52       		.byte	0x52
 11001 0fcc 21000000 		.4byte	.LVL350-1
 11002 0fd0 E4000000 		.4byte	.LFE180
 11003 0fd4 0400     		.2byte	0x4
 11004 0fd6 F3       		.byte	0xf3
 11005 0fd7 01       		.uleb128 0x1
 11006 0fd8 52       		.byte	0x52
 11007 0fd9 9F       		.byte	0x9f
 11008 0fda 00000000 		.4byte	0
 11009 0fde 00000000 		.4byte	0
 11010              	.LLST106:
 11011 0fe2 00000000 		.4byte	.LVL345
 11012 0fe6 14000000 		.4byte	.LVL347
 11013 0fea 0100     		.2byte	0x1
 11014 0fec 53       		.byte	0x53
 11015 0fed 14000000 		.4byte	.LVL347
 11016 0ff1 16000000 		.4byte	.LVL348
 11017 0ff5 0400     		.2byte	0x4
 11018 0ff7 F3       		.byte	0xf3
 11019 0ff8 01       		.uleb128 0x1
 11020 0ff9 53       		.byte	0x53
 11021 0ffa 9F       		.byte	0x9f
 11022 0ffb 16000000 		.4byte	.LVL348
 11023 0fff 21000000 		.4byte	.LVL350-1
 11024 1003 0100     		.2byte	0x1
 11025 1005 53       		.byte	0x53
 11026 1006 21000000 		.4byte	.LVL350-1
 11027 100a D6000000 		.4byte	.LVL359
 11028 100e 0100     		.2byte	0x1
 11029 1010 57       		.byte	0x57
 11030 1011 D6000000 		.4byte	.LVL359
 11031 1015 E4000000 		.4byte	.LFE180
 11032 1019 0400     		.2byte	0x4
 11033 101b F3       		.byte	0xf3
 11034 101c 01       		.uleb128 0x1
 11035 101d 53       		.byte	0x53
 11036 101e 9F       		.byte	0x9f
 11037 101f 00000000 		.4byte	0
 11038 1023 00000000 		.4byte	0
 11039              	.LLST107:
 11040 1027 1E000000 		.4byte	.LVL349
 11041 102b D6000000 		.4byte	.LVL359
 11042 102f 0100     		.2byte	0x1
 11043 1031 54       		.byte	0x54
 11044 1032 D6000000 		.4byte	.LVL359
 11045 1036 E4000000 		.4byte	.LFE180
 11046 103a 0400     		.2byte	0x4
 11047 103c F3       		.byte	0xf3
 11048 103d 01       		.uleb128 0x1
 11049 103e 50       		.byte	0x50
 11050 103f 9F       		.byte	0x9f
 11051 1040 00000000 		.4byte	0
 11052 1044 00000000 		.4byte	0
 11053              	.LLST108:
 11054 1048 02000000 		.4byte	.LVL346
 11055 104c 6C000000 		.4byte	.LVL354
 11056 1050 0200     		.2byte	0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 297


 11057 1052 31       		.byte	0x31
 11058 1053 9F       		.byte	0x9f
 11059 1054 6C000000 		.4byte	.LVL354
 11060 1058 D6000000 		.4byte	.LVL359
 11061 105c 0100     		.2byte	0x1
 11062 105e 55       		.byte	0x55
 11063 105f D6000000 		.4byte	.LVL359
 11064 1063 E4000000 		.4byte	.LFE180
 11065 1067 0100     		.2byte	0x1
 11066 1069 50       		.byte	0x50
 11067 106a 00000000 		.4byte	0
 11068 106e 00000000 		.4byte	0
 11069              	.LLST109:
 11070 1072 2E000000 		.4byte	.LVL351
 11071 1076 77000000 		.4byte	.LVL355-1
 11072 107a 0100     		.2byte	0x1
 11073 107c 53       		.byte	0x53
 11074 107d 00000000 		.4byte	0
 11075 1081 00000000 		.4byte	0
 11076              	.LLST110:
 11077 1085 00000000 		.4byte	.LVL360
 11078 1089 25000000 		.4byte	.LVL364-1
 11079 108d 0100     		.2byte	0x1
 11080 108f 50       		.byte	0x50
 11081 1090 25000000 		.4byte	.LVL364-1
 11082 1094 12010000 		.4byte	.LVL376
 11083 1098 0100     		.2byte	0x1
 11084 109a 54       		.byte	0x54
 11085 109b 12010000 		.4byte	.LVL376
 11086 109f 20010000 		.4byte	.LFE181
 11087 10a3 0400     		.2byte	0x4
 11088 10a5 F3       		.byte	0xf3
 11089 10a6 01       		.uleb128 0x1
 11090 10a7 50       		.byte	0x50
 11091 10a8 9F       		.byte	0x9f
 11092 10a9 00000000 		.4byte	0
 11093 10ad 00000000 		.4byte	0
 11094              	.LLST111:
 11095 10b1 00000000 		.4byte	.LVL360
 11096 10b5 25000000 		.4byte	.LVL364-1
 11097 10b9 0100     		.2byte	0x1
 11098 10bb 51       		.byte	0x51
 11099 10bc 25000000 		.4byte	.LVL364-1
 11100 10c0 B6000000 		.4byte	.LVL369
 11101 10c4 0100     		.2byte	0x1
 11102 10c6 58       		.byte	0x58
 11103 10c7 B6000000 		.4byte	.LVL369
 11104 10cb E0000000 		.4byte	.LVL372
 11105 10cf 0400     		.2byte	0x4
 11106 10d1 F3       		.byte	0xf3
 11107 10d2 01       		.uleb128 0x1
 11108 10d3 51       		.byte	0x51
 11109 10d4 9F       		.byte	0x9f
 11110 10d5 E0000000 		.4byte	.LVL372
 11111 10d9 EA000000 		.4byte	.LVL373
 11112 10dd 0100     		.2byte	0x1
 11113 10df 58       		.byte	0x58
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 298


 11114 10e0 EA000000 		.4byte	.LVL373
 11115 10e4 20010000 		.4byte	.LFE181
 11116 10e8 0400     		.2byte	0x4
 11117 10ea F3       		.byte	0xf3
 11118 10eb 01       		.uleb128 0x1
 11119 10ec 51       		.byte	0x51
 11120 10ed 9F       		.byte	0x9f
 11121 10ee 00000000 		.4byte	0
 11122 10f2 00000000 		.4byte	0
 11123              	.LLST112:
 11124 10f6 00000000 		.4byte	.LVL360
 11125 10fa 25000000 		.4byte	.LVL364-1
 11126 10fe 0100     		.2byte	0x1
 11127 1100 52       		.byte	0x52
 11128 1101 25000000 		.4byte	.LVL364-1
 11129 1105 20010000 		.4byte	.LFE181
 11130 1109 0400     		.2byte	0x4
 11131 110b F3       		.byte	0xf3
 11132 110c 01       		.uleb128 0x1
 11133 110d 52       		.byte	0x52
 11134 110e 9F       		.byte	0x9f
 11135 110f 00000000 		.4byte	0
 11136 1113 00000000 		.4byte	0
 11137              	.LLST113:
 11138 1117 00000000 		.4byte	.LVL360
 11139 111b 18000000 		.4byte	.LVL362
 11140 111f 0100     		.2byte	0x1
 11141 1121 53       		.byte	0x53
 11142 1122 18000000 		.4byte	.LVL362
 11143 1126 1A000000 		.4byte	.LVL363
 11144 112a 0400     		.2byte	0x4
 11145 112c F3       		.byte	0xf3
 11146 112d 01       		.uleb128 0x1
 11147 112e 53       		.byte	0x53
 11148 112f 9F       		.byte	0x9f
 11149 1130 1A000000 		.4byte	.LVL363
 11150 1134 25000000 		.4byte	.LVL364-1
 11151 1138 0100     		.2byte	0x1
 11152 113a 53       		.byte	0x53
 11153 113b 25000000 		.4byte	.LVL364-1
 11154 113f 12010000 		.4byte	.LVL376
 11155 1143 0100     		.2byte	0x1
 11156 1145 59       		.byte	0x59
 11157 1146 12010000 		.4byte	.LVL376
 11158 114a 20010000 		.4byte	.LFE181
 11159 114e 0400     		.2byte	0x4
 11160 1150 F3       		.byte	0xf3
 11161 1151 01       		.uleb128 0x1
 11162 1152 53       		.byte	0x53
 11163 1153 9F       		.byte	0x9f
 11164 1154 00000000 		.4byte	0
 11165 1158 00000000 		.4byte	0
 11166              	.LLST114:
 11167 115c 00000000 		.4byte	.LVL360
 11168 1160 12010000 		.4byte	.LVL376
 11169 1164 0200     		.2byte	0x2
 11170 1166 91       		.byte	0x91
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 299


 11171 1167 00       		.sleb128 0
 11172 1168 12010000 		.4byte	.LVL376
 11173 116c 20010000 		.4byte	.LFE181
 11174 1170 0200     		.2byte	0x2
 11175 1172 7D       		.byte	0x7d
 11176 1173 00       		.sleb128 0
 11177 1174 00000000 		.4byte	0
 11178 1178 00000000 		.4byte	0
 11179              	.LLST115:
 11180 117c 26000000 		.4byte	.LVL364
 11181 1180 12010000 		.4byte	.LVL376
 11182 1184 0100     		.2byte	0x1
 11183 1186 54       		.byte	0x54
 11184 1187 12010000 		.4byte	.LVL376
 11185 118b 20010000 		.4byte	.LFE181
 11186 118f 0400     		.2byte	0x4
 11187 1191 F3       		.byte	0xf3
 11188 1192 01       		.uleb128 0x1
 11189 1193 50       		.byte	0x50
 11190 1194 9F       		.byte	0x9f
 11191 1195 00000000 		.4byte	0
 11192 1199 00000000 		.4byte	0
 11193              	.LLST116:
 11194 119d 4C000000 		.4byte	.LVL365
 11195 11a1 96000000 		.4byte	.LVL367
 11196 11a5 0100     		.2byte	0x1
 11197 11a7 53       		.byte	0x53
 11198 11a8 00000000 		.4byte	0
 11199 11ac 00000000 		.4byte	0
 11200              	.LLST117:
 11201 11b0 06000000 		.4byte	.LVL361
 11202 11b4 90000000 		.4byte	.LVL366
 11203 11b8 0200     		.2byte	0x2
 11204 11ba 31       		.byte	0x31
 11205 11bb 9F       		.byte	0x9f
 11206 11bc 90000000 		.4byte	.LVL366
 11207 11c0 12010000 		.4byte	.LVL376
 11208 11c4 0100     		.2byte	0x1
 11209 11c6 55       		.byte	0x55
 11210 11c7 12010000 		.4byte	.LVL376
 11211 11cb 20010000 		.4byte	.LFE181
 11212 11cf 0100     		.2byte	0x1
 11213 11d1 50       		.byte	0x50
 11214 11d2 00000000 		.4byte	0
 11215 11d6 00000000 		.4byte	0
 11216              	.LLST118:
 11217 11da 08010000 		.4byte	.LVL374
 11218 11de 0C010000 		.4byte	.LVL375
 11219 11e2 0100     		.2byte	0x1
 11220 11e4 57       		.byte	0x57
 11221 11e5 00000000 		.4byte	0
 11222 11e9 00000000 		.4byte	0
 11223              	.LLST119:
 11224 11ed 00000000 		.4byte	.LVL377
 11225 11f1 1D000000 		.4byte	.LVL379-1
 11226 11f5 0100     		.2byte	0x1
 11227 11f7 50       		.byte	0x50
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 300


 11228 11f8 1D000000 		.4byte	.LVL379-1
 11229 11fc C0000000 		.4byte	.LVL388
 11230 1200 0100     		.2byte	0x1
 11231 1202 54       		.byte	0x54
 11232 1203 C0000000 		.4byte	.LVL388
 11233 1207 CC000000 		.4byte	.LFE182
 11234 120b 0400     		.2byte	0x4
 11235 120d F3       		.byte	0xf3
 11236 120e 01       		.uleb128 0x1
 11237 120f 50       		.byte	0x50
 11238 1210 9F       		.byte	0x9f
 11239 1211 00000000 		.4byte	0
 11240 1215 00000000 		.4byte	0
 11241              	.LLST120:
 11242 1219 00000000 		.4byte	.LVL377
 11243 121d 1D000000 		.4byte	.LVL379-1
 11244 1221 0100     		.2byte	0x1
 11245 1223 51       		.byte	0x51
 11246 1224 1D000000 		.4byte	.LVL379-1
 11247 1228 C0000000 		.4byte	.LVL388
 11248 122c 0100     		.2byte	0x1
 11249 122e 55       		.byte	0x55
 11250 122f C0000000 		.4byte	.LVL388
 11251 1233 CC000000 		.4byte	.LFE182
 11252 1237 0400     		.2byte	0x4
 11253 1239 F3       		.byte	0xf3
 11254 123a 01       		.uleb128 0x1
 11255 123b 51       		.byte	0x51
 11256 123c 9F       		.byte	0x9f
 11257 123d 00000000 		.4byte	0
 11258 1241 00000000 		.4byte	0
 11259              	.LLST121:
 11260 1245 1E000000 		.4byte	.LVL379
 11261 1249 C0000000 		.4byte	.LVL388
 11262 124d 0100     		.2byte	0x1
 11263 124f 54       		.byte	0x54
 11264 1250 C0000000 		.4byte	.LVL388
 11265 1254 CC000000 		.4byte	.LFE182
 11266 1258 0400     		.2byte	0x4
 11267 125a F3       		.byte	0xf3
 11268 125b 01       		.uleb128 0x1
 11269 125c 50       		.byte	0x50
 11270 125d 9F       		.byte	0x9f
 11271 125e 00000000 		.4byte	0
 11272 1262 00000000 		.4byte	0
 11273              	.LLST122:
 11274 1266 38000000 		.4byte	.LVL380
 11275 126a 4A000000 		.4byte	.LVL381
 11276 126e 0100     		.2byte	0x1
 11277 1270 53       		.byte	0x53
 11278 1271 00000000 		.4byte	0
 11279 1275 00000000 		.4byte	0
 11280              	.LLST123:
 11281 1279 BA000000 		.4byte	.LVL386
 11282 127d BE000000 		.4byte	.LVL387
 11283 1281 0100     		.2byte	0x1
 11284 1283 56       		.byte	0x56
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 301


 11285 1284 00000000 		.4byte	0
 11286 1288 00000000 		.4byte	0
 11287              	.LLST124:
 11288 128c 00000000 		.4byte	.LVL389
 11289 1290 0C000000 		.4byte	.LVL390
 11290 1294 0100     		.2byte	0x1
 11291 1296 50       		.byte	0x50
 11292 1297 00000000 		.4byte	0
 11293 129b 00000000 		.4byte	0
 11294              	.LLST125:
 11295 129f 0C000000 		.4byte	.LVL390
 11296 12a3 22000000 		.4byte	.LVL393
 11297 12a7 0100     		.2byte	0x1
 11298 12a9 54       		.byte	0x54
 11299 12aa 24000000 		.4byte	.LVL394
 11300 12ae 26000000 		.4byte	.LVL395
 11301 12b2 0100     		.2byte	0x1
 11302 12b4 54       		.byte	0x54
 11303 12b5 00000000 		.4byte	0
 11304 12b9 00000000 		.4byte	0
 11305              	.LLST126:
 11306 12bd 20000000 		.4byte	.LVL392
 11307 12c1 24000000 		.4byte	.LVL394
 11308 12c5 0200     		.2byte	0x2
 11309 12c7 31       		.byte	0x31
 11310 12c8 9F       		.byte	0x9f
 11311 12c9 26000000 		.4byte	.LVL395
 11312 12cd 2E000000 		.4byte	.LVL397
 11313 12d1 0100     		.2byte	0x1
 11314 12d3 54       		.byte	0x54
 11315 12d4 2E000000 		.4byte	.LVL397
 11316 12d8 34000000 		.4byte	.LFE183
 11317 12dc 0100     		.2byte	0x1
 11318 12de 50       		.byte	0x50
 11319 12df 00000000 		.4byte	0
 11320 12e3 00000000 		.4byte	0
 11321              		.section	.debug_aranges,"",%progbits
 11322 0000 9C010000 		.4byte	0x19c
 11323 0004 0200     		.2byte	0x2
 11324 0006 00000000 		.4byte	.Ldebug_info0
 11325 000a 04       		.byte	0x4
 11326 000b 00       		.byte	0
 11327 000c 0000     		.2byte	0
 11328 000e 0000     		.2byte	0
 11329 0010 00000000 		.4byte	.LFB146
 11330 0014 4C000000 		.4byte	.LFE146-.LFB146
 11331 0018 00000000 		.4byte	.LFB174
 11332 001c 2C000000 		.4byte	.LFE174-.LFB174
 11333 0020 00000000 		.4byte	.LFB173
 11334 0024 12000000 		.4byte	.LFE173-.LFB173
 11335 0028 00000000 		.4byte	.LFB137
 11336 002c 9E000000 		.4byte	.LFE137-.LFB137
 11337 0030 00000000 		.4byte	.LFB171
 11338 0034 58000000 		.4byte	.LFE171-.LFB171
 11339 0038 00000000 		.4byte	.LFB138
 11340 003c AC000000 		.4byte	.LFE138-.LFB138
 11341 0040 00000000 		.4byte	.LFB172
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 302


 11342 0044 44000000 		.4byte	.LFE172-.LFB172
 11343 0048 00000000 		.4byte	.LFB168
 11344 004c 28000000 		.4byte	.LFE168-.LFB168
 11345 0050 00000000 		.4byte	.LFB184
 11346 0054 68000000 		.4byte	.LFE184-.LFB184
 11347 0058 00000000 		.4byte	.LFB136
 11348 005c 62000000 		.4byte	.LFE136-.LFB136
 11349 0060 00000000 		.4byte	.LFB139
 11350 0064 B0000000 		.4byte	.LFE139-.LFB139
 11351 0068 00000000 		.4byte	.LFB142
 11352 006c 20000000 		.4byte	.LFE142-.LFB142
 11353 0070 00000000 		.4byte	.LFB143
 11354 0074 30000000 		.4byte	.LFE143-.LFB143
 11355 0078 00000000 		.4byte	.LFB144
 11356 007c DC000000 		.4byte	.LFE144-.LFB144
 11357 0080 00000000 		.4byte	.LFB147
 11358 0084 88000000 		.4byte	.LFE147-.LFB147
 11359 0088 00000000 		.4byte	.LFB148
 11360 008c A4000000 		.4byte	.LFE148-.LFB148
 11361 0090 00000000 		.4byte	.LFB149
 11362 0094 7C000000 		.4byte	.LFE149-.LFB149
 11363 0098 00000000 		.4byte	.LFB150
 11364 009c 24000000 		.4byte	.LFE150-.LFB150
 11365 00a0 00000000 		.4byte	.LFB151
 11366 00a4 14000000 		.4byte	.LFE151-.LFB151
 11367 00a8 00000000 		.4byte	.LFB153
 11368 00ac 0C000000 		.4byte	.LFE153-.LFB153
 11369 00b0 00000000 		.4byte	.LFB154
 11370 00b4 14000000 		.4byte	.LFE154-.LFB154
 11371 00b8 00000000 		.4byte	.LFB155
 11372 00bc 0C000000 		.4byte	.LFE155-.LFB155
 11373 00c0 00000000 		.4byte	.LFB156
 11374 00c4 28000000 		.4byte	.LFE156-.LFB156
 11375 00c8 00000000 		.4byte	.LFB157
 11376 00cc FC000000 		.4byte	.LFE157-.LFB157
 11377 00d0 00000000 		.4byte	.LFB152
 11378 00d4 F0000000 		.4byte	.LFE152-.LFB152
 11379 00d8 00000000 		.4byte	.LFB140
 11380 00dc AC000000 		.4byte	.LFE140-.LFB140
 11381 00e0 00000000 		.4byte	.LFB141
 11382 00e4 50000000 		.4byte	.LFE141-.LFB141
 11383 00e8 00000000 		.4byte	.LFB158
 11384 00ec C8000000 		.4byte	.LFE158-.LFB158
 11385 00f0 00000000 		.4byte	.LFB145
 11386 00f4 B8000000 		.4byte	.LFE145-.LFB145
 11387 00f8 00000000 		.4byte	.LFB159
 11388 00fc 34000000 		.4byte	.LFE159-.LFB159
 11389 0100 00000000 		.4byte	.LFB160
 11390 0104 5C000000 		.4byte	.LFE160-.LFB160
 11391 0108 00000000 		.4byte	.LFB161
 11392 010c 3C000000 		.4byte	.LFE161-.LFB161
 11393 0110 00000000 		.4byte	.LFB162
 11394 0114 88000000 		.4byte	.LFE162-.LFB162
 11395 0118 00000000 		.4byte	.LFB163
 11396 011c 84000000 		.4byte	.LFE163-.LFB163
 11397 0120 00000000 		.4byte	.LFB164
 11398 0124 34000000 		.4byte	.LFE164-.LFB164
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 303


 11399 0128 00000000 		.4byte	.LFB165
 11400 012c 14000000 		.4byte	.LFE165-.LFB165
 11401 0130 00000000 		.4byte	.LFB166
 11402 0134 80000000 		.4byte	.LFE166-.LFB166
 11403 0138 00000000 		.4byte	.LFB167
 11404 013c 10000000 		.4byte	.LFE167-.LFB167
 11405 0140 00000000 		.4byte	.LFB169
 11406 0144 1C000000 		.4byte	.LFE169-.LFB169
 11407 0148 00000000 		.4byte	.LFB170
 11408 014c 20000000 		.4byte	.LFE170-.LFB170
 11409 0150 00000000 		.4byte	.LFB175
 11410 0154 0C000000 		.4byte	.LFE175-.LFB175
 11411 0158 00000000 		.4byte	.LFB176
 11412 015c 20000000 		.4byte	.LFE176-.LFB176
 11413 0160 00000000 		.4byte	.LFB177
 11414 0164 20000000 		.4byte	.LFE177-.LFB177
 11415 0168 00000000 		.4byte	.LFB178
 11416 016c 80000000 		.4byte	.LFE178-.LFB178
 11417 0170 00000000 		.4byte	.LFB179
 11418 0174 A4000000 		.4byte	.LFE179-.LFB179
 11419 0178 00000000 		.4byte	.LFB180
 11420 017c E4000000 		.4byte	.LFE180-.LFB180
 11421 0180 00000000 		.4byte	.LFB181
 11422 0184 20010000 		.4byte	.LFE181-.LFB181
 11423 0188 00000000 		.4byte	.LFB182
 11424 018c CC000000 		.4byte	.LFE182-.LFB182
 11425 0190 00000000 		.4byte	.LFB183
 11426 0194 34000000 		.4byte	.LFE183-.LFB183
 11427 0198 00000000 		.4byte	0
 11428 019c 00000000 		.4byte	0
 11429              		.section	.debug_ranges,"",%progbits
 11430              	.Ldebug_ranges0:
 11431 0000 0E000000 		.4byte	.LBB122
 11432 0004 58000000 		.4byte	.LBE122
 11433 0008 5C000000 		.4byte	.LBB126
 11434 000c DA000000 		.4byte	.LBE126
 11435 0010 00000000 		.4byte	0
 11436 0014 00000000 		.4byte	0
 11437 0018 4C000000 		.4byte	.LBB136
 11438 001c 62000000 		.4byte	.LBE136
 11439 0020 66000000 		.4byte	.LBB137
 11440 0024 6E000000 		.4byte	.LBE137
 11441 0028 76000000 		.4byte	.LBB138
 11442 002c 8C000000 		.4byte	.LBE138
 11443 0030 00000000 		.4byte	0
 11444 0034 00000000 		.4byte	0
 11445 0038 00000000 		.4byte	.LFB146
 11446 003c 4C000000 		.4byte	.LFE146
 11447 0040 00000000 		.4byte	.LFB174
 11448 0044 2C000000 		.4byte	.LFE174
 11449 0048 00000000 		.4byte	.LFB173
 11450 004c 12000000 		.4byte	.LFE173
 11451 0050 00000000 		.4byte	.LFB137
 11452 0054 9E000000 		.4byte	.LFE137
 11453 0058 00000000 		.4byte	.LFB171
 11454 005c 58000000 		.4byte	.LFE171
 11455 0060 00000000 		.4byte	.LFB138
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 304


 11456 0064 AC000000 		.4byte	.LFE138
 11457 0068 00000000 		.4byte	.LFB172
 11458 006c 44000000 		.4byte	.LFE172
 11459 0070 00000000 		.4byte	.LFB168
 11460 0074 28000000 		.4byte	.LFE168
 11461 0078 00000000 		.4byte	.LFB184
 11462 007c 68000000 		.4byte	.LFE184
 11463 0080 00000000 		.4byte	.LFB136
 11464 0084 62000000 		.4byte	.LFE136
 11465 0088 00000000 		.4byte	.LFB139
 11466 008c B0000000 		.4byte	.LFE139
 11467 0090 00000000 		.4byte	.LFB142
 11468 0094 20000000 		.4byte	.LFE142
 11469 0098 00000000 		.4byte	.LFB143
 11470 009c 30000000 		.4byte	.LFE143
 11471 00a0 00000000 		.4byte	.LFB144
 11472 00a4 DC000000 		.4byte	.LFE144
 11473 00a8 00000000 		.4byte	.LFB147
 11474 00ac 88000000 		.4byte	.LFE147
 11475 00b0 00000000 		.4byte	.LFB148
 11476 00b4 A4000000 		.4byte	.LFE148
 11477 00b8 00000000 		.4byte	.LFB149
 11478 00bc 7C000000 		.4byte	.LFE149
 11479 00c0 00000000 		.4byte	.LFB150
 11480 00c4 24000000 		.4byte	.LFE150
 11481 00c8 00000000 		.4byte	.LFB151
 11482 00cc 14000000 		.4byte	.LFE151
 11483 00d0 00000000 		.4byte	.LFB153
 11484 00d4 0C000000 		.4byte	.LFE153
 11485 00d8 00000000 		.4byte	.LFB154
 11486 00dc 14000000 		.4byte	.LFE154
 11487 00e0 00000000 		.4byte	.LFB155
 11488 00e4 0C000000 		.4byte	.LFE155
 11489 00e8 00000000 		.4byte	.LFB156
 11490 00ec 28000000 		.4byte	.LFE156
 11491 00f0 00000000 		.4byte	.LFB157
 11492 00f4 FC000000 		.4byte	.LFE157
 11493 00f8 00000000 		.4byte	.LFB152
 11494 00fc F0000000 		.4byte	.LFE152
 11495 0100 00000000 		.4byte	.LFB140
 11496 0104 AC000000 		.4byte	.LFE140
 11497 0108 00000000 		.4byte	.LFB141
 11498 010c 50000000 		.4byte	.LFE141
 11499 0110 00000000 		.4byte	.LFB158
 11500 0114 C8000000 		.4byte	.LFE158
 11501 0118 00000000 		.4byte	.LFB145
 11502 011c B8000000 		.4byte	.LFE145
 11503 0120 00000000 		.4byte	.LFB159
 11504 0124 34000000 		.4byte	.LFE159
 11505 0128 00000000 		.4byte	.LFB160
 11506 012c 5C000000 		.4byte	.LFE160
 11507 0130 00000000 		.4byte	.LFB161
 11508 0134 3C000000 		.4byte	.LFE161
 11509 0138 00000000 		.4byte	.LFB162
 11510 013c 88000000 		.4byte	.LFE162
 11511 0140 00000000 		.4byte	.LFB163
 11512 0144 84000000 		.4byte	.LFE163
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 305


 11513 0148 00000000 		.4byte	.LFB164
 11514 014c 34000000 		.4byte	.LFE164
 11515 0150 00000000 		.4byte	.LFB165
 11516 0154 14000000 		.4byte	.LFE165
 11517 0158 00000000 		.4byte	.LFB166
 11518 015c 80000000 		.4byte	.LFE166
 11519 0160 00000000 		.4byte	.LFB167
 11520 0164 10000000 		.4byte	.LFE167
 11521 0168 00000000 		.4byte	.LFB169
 11522 016c 1C000000 		.4byte	.LFE169
 11523 0170 00000000 		.4byte	.LFB170
 11524 0174 20000000 		.4byte	.LFE170
 11525 0178 00000000 		.4byte	.LFB175
 11526 017c 0C000000 		.4byte	.LFE175
 11527 0180 00000000 		.4byte	.LFB176
 11528 0184 20000000 		.4byte	.LFE176
 11529 0188 00000000 		.4byte	.LFB177
 11530 018c 20000000 		.4byte	.LFE177
 11531 0190 00000000 		.4byte	.LFB178
 11532 0194 80000000 		.4byte	.LFE178
 11533 0198 00000000 		.4byte	.LFB179
 11534 019c A4000000 		.4byte	.LFE179
 11535 01a0 00000000 		.4byte	.LFB180
 11536 01a4 E4000000 		.4byte	.LFE180
 11537 01a8 00000000 		.4byte	.LFB181
 11538 01ac 20010000 		.4byte	.LFE181
 11539 01b0 00000000 		.4byte	.LFB182
 11540 01b4 CC000000 		.4byte	.LFE182
 11541 01b8 00000000 		.4byte	.LFB183
 11542 01bc 34000000 		.4byte	.LFE183
 11543 01c0 00000000 		.4byte	0
 11544 01c4 00000000 		.4byte	0
 11545              		.section	.debug_line,"",%progbits
 11546              	.Ldebug_line0:
 11547 0000 CC0C0000 		.section	.debug_str,"MS",%progbits,1
 11547      02005203 
 11547      00000201 
 11547      FB0E0D00 
 11547      01010101 
 11548              	.LASF94:
 11549 0000 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 11549      426C6F63 
 11549      6B496E64 
 11549      6566696E 
 11549      6974656C 
 11550              	.LASF71:
 11551 0016 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 11551      6967696E 
 11551      616C4241 
 11551      53455052 
 11551      4900
 11552              	.LASF141:
 11553 0028 70784576 		.ascii	"pxEventList\000"
 11553      656E744C 
 11553      69737400 
 11554              	.LASF138:
 11555 0034 76546173 		.ascii	"vTaskSuspend\000"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 306


 11555      6B537573 
 11555      70656E64 
 11555      00
 11556              	.LASF99:
 11557 0041 78546173 		.ascii	"xTaskCreate\000"
 11557      6B437265 
 11557      61746500 
 11558              	.LASF4:
 11559 004d 73697A65 		.ascii	"size_t\000"
 11559      5F7400
 11560              	.LASF36:
 11561 0054 4D696E69 		.ascii	"MiniListItem_t\000"
 11561      4C697374 
 11561      4974656D 
 11561      5F7400
 11562              	.LASF52:
 11563 0063 54696D65 		.ascii	"TimeOut_t\000"
 11563      4F75745F 
 11563      7400
 11564              	.LASF192:
 11565 006d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 11565      7272656E 
 11565      744E756D 
 11565      6265724F 
 11565      66546173 
 11566              	.LASF175:
 11567 0084 756C5661 		.ascii	"ulValue\000"
 11567      6C756500 
 11568              	.LASF165:
 11569 008c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 11569      736B5265 
 11569      73657445 
 11569      76656E74 
 11569      4974656D 
 11570              	.LASF197:
 11571 00a6 78596965 		.ascii	"xYieldPending\000"
 11571      6C645065 
 11571      6E64696E 
 11571      6700
 11572              	.LASF163:
 11573 00b4 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 11573      6B476574 
 11573      43757272 
 11573      656E7454 
 11573      61736B48 
 11574              	.LASF3:
 11575 00ce 7369676E 		.ascii	"signed char\000"
 11575      65642063 
 11575      68617200 
 11576              	.LASF5:
 11577 00da 5F5F7569 		.ascii	"__uint8_t\000"
 11577      6E74385F 
 11577      7400
 11578              	.LASF179:
 11579 00e4 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 11579      6B47656E 
 11579      65726963 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 307


 11579      4E6F7469 
 11579      66794672 
 11580              	.LASF191:
 11581 00fe 78537573 		.ascii	"xSuspendedTaskList\000"
 11581      70656E64 
 11581      65645461 
 11581      736B4C69 
 11581      737400
 11582              	.LASF131:
 11583 0111 76546173 		.ascii	"vTaskDelay\000"
 11583      6B44656C 
 11583      617900
 11584              	.LASF11:
 11585 011c 6C6F6E67 		.ascii	"long int\000"
 11585      20696E74 
 11585      00
 11586              	.LASF182:
 11587 0125 78546173 		.ascii	"xTaskNotifyStateClear\000"
 11587      6B4E6F74 
 11587      69667953 
 11587      74617465 
 11587      436C6561 
 11588              	.LASF70:
 11589 013b 756C4E65 		.ascii	"ulNewBASEPRI\000"
 11589      77424153 
 11589      45505249 
 11589      00
 11590              	.LASF14:
 11591 0148 6C6F6E67 		.ascii	"long long unsigned int\000"
 11591      206C6F6E 
 11591      6720756E 
 11591      7369676E 
 11591      65642069 
 11592              	.LASF61:
 11593 015f 78457665 		.ascii	"xEventListItem\000"
 11593      6E744C69 
 11593      73744974 
 11593      656D00
 11594              	.LASF125:
 11595 016e 78416C72 		.ascii	"xAlreadyYielded\000"
 11595      65616479 
 11595      5969656C 
 11595      64656400 
 11596              	.LASF150:
 11597 017e 70785469 		.ascii	"pxTimeOut\000"
 11597      6D654F75 
 11597      7400
 11598              	.LASF39:
 11599 0188 7078496E 		.ascii	"pxIndex\000"
 11599      64657800 
 11600              	.LASF40:
 11601 0190 784C6973 		.ascii	"xListEnd\000"
 11601      74456E64 
 11601      00
 11602              	.LASF203:
 11603 0199 49544D5F 		.ascii	"ITM_RxBuffer\000"
 11603      52784275 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 308


 11603      66666572 
 11603      00
 11604              	.LASF105:
 11605 01a6 76546173 		.ascii	"vTaskPrioritySet\000"
 11605      6B507269 
 11605      6F726974 
 11605      79536574 
 11605      00
 11606              	.LASF49:
 11607 01b7 7854494D 		.ascii	"xTIME_OUT\000"
 11607      455F4F55 
 11607      5400
 11608              	.LASF35:
 11609 01c1 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 11609      495F4C49 
 11609      53545F49 
 11609      54454D00 
 11610              	.LASF188:
 11611 01d1 7850656E 		.ascii	"xPendingReadyList\000"
 11611      64696E67 
 11611      52656164 
 11611      794C6973 
 11611      7400
 11612              	.LASF116:
 11613 01e3 78546173 		.ascii	"xTaskGetTickCount\000"
 11613      6B476574 
 11613      5469636B 
 11613      436F756E 
 11613      7400
 11614              	.LASF223:
 11615 01f5 443A5C50 		.ascii	"D:\\Projects\\NS\\Neural-Stimulator-Firmware\\new\\"
 11615      726F6A65 
 11615      6374735C 
 11615      4E535C4E 
 11615      65757261 
 11616 0223 50534F43 		.ascii	"PSOC6\\CustomService.cydsn\000"
 11616      365C4375 
 11616      73746F6D 
 11616      53657276 
 11616      6963652E 
 11617              	.LASF1:
 11618 023d 6C6F6E67 		.ascii	"long long int\000"
 11618      206C6F6E 
 11618      6720696E 
 11618      7400
 11619              	.LASF48:
 11620 024b 654E6F74 		.ascii	"eNotifyAction\000"
 11620      69667941 
 11620      6374696F 
 11620      6E00
 11621              	.LASF108:
 11622 0259 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 11622      696F7269 
 11622      74795573 
 11622      65644F6E 
 11622      456E7472 
 11623              	.LASF93:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 309


 11624 026f 78546963 		.ascii	"xTicksToWait\000"
 11624      6B73546F 
 11624      57616974 
 11624      00
 11625              	.LASF157:
 11626 027c 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11626      6B536574 
 11626      54687265 
 11626      61644C6F 
 11626      63616C53 
 11627              	.LASF158:
 11628 029e 78546173 		.ascii	"xTaskToSet\000"
 11628      6B546F53 
 11628      657400
 11629              	.LASF60:
 11630 02a9 78537461 		.ascii	"xStateListItem\000"
 11630      74654C69 
 11630      73744974 
 11630      656D00
 11631              	.LASF127:
 11632 02b8 76546173 		.ascii	"vTaskDelayUntil\000"
 11632      6B44656C 
 11632      6179556E 
 11632      74696C00 
 11633              	.LASF176:
 11634 02c8 65416374 		.ascii	"eAction\000"
 11634      696F6E00 
 11635              	.LASF54:
 11636 02d0 70764261 		.ascii	"pvBaseAddress\000"
 11636      73654164 
 11636      64726573 
 11636      7300
 11637              	.LASF65:
 11638 02de 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11638      72656164 
 11638      4C6F6361 
 11638      6C53746F 
 11638      72616765 
 11639              	.LASF224:
 11640 02fb 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 11640      72745261 
 11640      69736542 
 11640      41534550 
 11640      524900
 11641              	.LASF58:
 11642 030e 74736B54 		.ascii	"tskTaskControlBlock\000"
 11642      61736B43 
 11642      6F6E7472 
 11642      6F6C426C 
 11642      6F636B00 
 11643              	.LASF85:
 11644 0322 70784E65 		.ascii	"pxNewTCB\000"
 11644      77544342 
 11644      00
 11645              	.LASF180:
 11646 032b 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11646      67686572 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 310


 11646      5072696F 
 11646      72697479 
 11646      5461736B 
 11647              	.LASF178:
 11648 0345 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11648      6967696E 
 11648      616C4E6F 
 11648      74696679 
 11648      53746174 
 11649              	.LASF118:
 11650 035b 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11650      6B476574 
 11650      5469636B 
 11650      436F756E 
 11650      7446726F 
 11651              	.LASF42:
 11652 0374 5461736B 		.ascii	"TaskHandle_t\000"
 11652      48616E64 
 11652      6C655F74 
 11652      00
 11653              	.LASF63:
 11654 0381 70785374 		.ascii	"pxStack\000"
 11654      61636B00 
 11655              	.LASF27:
 11656 0389 5469636B 		.ascii	"TickType_t\000"
 11656      54797065 
 11656      5F7400
 11657              	.LASF218:
 11658 0394 78506F72 		.ascii	"xPortStartScheduler\000"
 11658      74537461 
 11658      72745363 
 11658      68656475 
 11658      6C657200 
 11659              	.LASF57:
 11660 03a8 4D656D6F 		.ascii	"MemoryRegion_t\000"
 11660      72795265 
 11660      67696F6E 
 11660      5F7400
 11661              	.LASF121:
 11662 03b7 78546173 		.ascii	"xTaskIncrementTick\000"
 11662      6B496E63 
 11662      72656D65 
 11662      6E745469 
 11662      636B00
 11663              	.LASF18:
 11664 03ca 75696E74 		.ascii	"uint16_t\000"
 11664      31365F74 
 11664      00
 11665              	.LASF22:
 11666 03d3 646F7562 		.ascii	"double\000"
 11666      6C6500
 11667              	.LASF217:
 11668 03da 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11668      65724372 
 11668      65617465 
 11668      54696D65 
 11668      72546173 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 311


 11669              	.LASF25:
 11670 03f0 42617365 		.ascii	"BaseType_t\000"
 11670      54797065 
 11670      5F7400
 11671              	.LASF211:
 11672 03fb 764C6973 		.ascii	"vListInsertEnd\000"
 11672      74496E73 
 11672      65727445 
 11672      6E6400
 11673              	.LASF177:
 11674 040a 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 11674      72657669 
 11674      6F75734E 
 11674      6F746966 
 11674      69636174 
 11675              	.LASF76:
 11676 0427 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 11676      65736574 
 11676      4E657874 
 11676      5461736B 
 11676      556E626C 
 11677              	.LASF97:
 11678 0443 75735374 		.ascii	"usStackDepth\000"
 11678      61636B44 
 11678      65707468 
 11678      00
 11679              	.LASF120:
 11680 0450 78546173 		.ascii	"xTaskToQuery\000"
 11680      6B546F51 
 11680      75657279 
 11680      00
 11681              	.LASF207:
 11682 045d 764C6973 		.ascii	"vListInitialiseItem\000"
 11682      74496E69 
 11682      7469616C 
 11682      69736549 
 11682      74656D00 
 11683              	.LASF50:
 11684 0471 784F7665 		.ascii	"xOverflowCount\000"
 11684      72666C6F 
 11684      77436F75 
 11684      6E7400
 11685              	.LASF114:
 11686 0480 76546173 		.ascii	"vTaskStartScheduler\000"
 11686      6B537461 
 11686      72745363 
 11686      68656475 
 11686      6C657200 
 11687              	.LASF215:
 11688 0494 7076506F 		.ascii	"pvPortMalloc\000"
 11688      72744D61 
 11688      6C6C6F63 
 11688      00
 11689              	.LASF140:
 11690 04a1 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11690      6B506C61 
 11690      63654F6E 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 312


 11690      4576656E 
 11690      744C6973 
 11691              	.LASF12:
 11692 04b7 5F5F7569 		.ascii	"__uint32_t\000"
 11692      6E743332 
 11692      5F7400
 11693              	.LASF202:
 11694 04c2 75785363 		.ascii	"uxSchedulerSuspended\000"
 11694      68656475 
 11694      6C657253 
 11694      75737065 
 11694      6E646564 
 11695              	.LASF225:
 11696 04d7 756C4E65 		.ascii	"ulNewMaskValue\000"
 11696      774D6173 
 11696      6B56616C 
 11696      756500
 11697              	.LASF112:
 11698 04e6 78546173 		.ascii	"xTaskResumeFromISR\000"
 11698      6B526573 
 11698      756D6546 
 11698      726F6D49 
 11698      535200
 11699              	.LASF31:
 11700 04f9 70764F77 		.ascii	"pvOwner\000"
 11700      6E657200 
 11701              	.LASF74:
 11702 0501 78526574 		.ascii	"xReturn\000"
 11702      75726E00 
 11703              	.LASF185:
 11704 0509 7844656C 		.ascii	"xDelayedTaskList2\000"
 11704      61796564 
 11704      5461736B 
 11704      4C697374 
 11704      3200
 11705              	.LASF51:
 11706 051b 7854696D 		.ascii	"xTimeOnEntering\000"
 11706      654F6E45 
 11706      6E746572 
 11706      696E6700 
 11707              	.LASF142:
 11708 052b 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 11708      6B506C61 
 11708      63654F6E 
 11708      556E6F72 
 11708      64657265 
 11709              	.LASF84:
 11710 054a 70784372 		.ascii	"pxCreatedTask\000"
 11710      65617465 
 11710      64546173 
 11710      6B00
 11711              	.LASF38:
 11712 0558 75784E75 		.ascii	"uxNumberOfItems\000"
 11712      6D626572 
 11712      4F664974 
 11712      656D7300 
 11713              	.LASF13:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 313


 11714 0568 6C6F6E67 		.ascii	"long unsigned int\000"
 11714      20756E73 
 11714      69676E65 
 11714      6420696E 
 11714      7400
 11715              	.LASF222:
 11716 057a 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\10.0."
 11716      72617465 
 11716      645F536F 
 11716      75726365 
 11716      5C50536F 
 11717 05a8 315C536F 		.ascii	"1\\Source\\tasks.c\000"
 11717      75726365 
 11717      5C746173 
 11717      6B732E63 
 11717      00
 11718              	.LASF174:
 11719 05b9 78546173 		.ascii	"xTaskToNotify\000"
 11719      6B546F4E 
 11719      6F746966 
 11719      7900
 11720              	.LASF19:
 11721 05c7 696E7433 		.ascii	"int32_t\000"
 11721      325F7400 
 11722              	.LASF59:
 11723 05cf 7078546F 		.ascii	"pxTopOfStack\000"
 11723      704F6653 
 11723      7461636B 
 11723      00
 11724              	.LASF83:
 11725 05dc 70765061 		.ascii	"pvParameters\000"
 11725      72616D65 
 11725      74657273 
 11725      00
 11726              	.LASF68:
 11727 05e9 74736B54 		.ascii	"tskTCB\000"
 11727      434200
 11728              	.LASF220:
 11729 05f0 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 11729      6C696361 
 11729      74696F6E 
 11729      53746163 
 11729      6B4F7665 
 11730              	.LASF137:
 11731 060e 7078436F 		.ascii	"pxConstList\000"
 11731      6E73744C 
 11731      69737400 
 11732              	.LASF9:
 11733 061a 73686F72 		.ascii	"short unsigned int\000"
 11733      7420756E 
 11733      7369676E 
 11733      65642069 
 11733      6E7400
 11734              	.LASF24:
 11735 062d 53746163 		.ascii	"StackType_t\000"
 11735      6B547970 
 11735      655F7400 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 314


 11736              	.LASF75:
 11737 0639 70785443 		.ascii	"pxTCB\000"
 11737      4200
 11738              	.LASF109:
 11739 063f 78596965 		.ascii	"xYieldRequired\000"
 11739      6C645265 
 11739      71756972 
 11739      656400
 11740              	.LASF170:
 11741 064e 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11741      7473546F 
 11741      436C6561 
 11741      724F6E45 
 11741      6E747279 
 11742              	.LASF88:
 11743 0663 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 11743      64644E65 
 11743      77546173 
 11743      6B546F52 
 11743      65616479 
 11744              	.LASF110:
 11745 067c 76546173 		.ascii	"vTaskResume\000"
 11745      6B526573 
 11745      756D6500 
 11746              	.LASF122:
 11747 0688 78537769 		.ascii	"xSwitchRequired\000"
 11747      74636852 
 11747      65717569 
 11747      72656400 
 11748              	.LASF101:
 11749 0698 75785265 		.ascii	"uxReturn\000"
 11749      7475726E 
 11749      00
 11750              	.LASF159:
 11751 06a1 78496E64 		.ascii	"xIndex\000"
 11751      657800
 11752              	.LASF87:
 11753 06a8 70727649 		.ascii	"prvInitialiseTaskLists\000"
 11753      6E697469 
 11753      616C6973 
 11753      65546173 
 11753      6B4C6973 
 11754              	.LASF53:
 11755 06bf 784D454D 		.ascii	"xMEMORY_REGION\000"
 11755      4F52595F 
 11755      52454749 
 11755      4F4E00
 11756              	.LASF205:
 11757 06ce 76506F72 		.ascii	"vPortFree\000"
 11757      74467265 
 11757      6500
 11758              	.LASF72:
 11759 06d8 76506F72 		.ascii	"vPortRaiseBASEPRI\000"
 11759      74526169 
 11759      73654241 
 11759      53455052 
 11759      4900
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 315


 11760              	.LASF153:
 11761 06ea 70785469 		.ascii	"pxTicksToWait\000"
 11761      636B7354 
 11761      6F576169 
 11761      7400
 11762              	.LASF77:
 11763 06f8 70727644 		.ascii	"prvDeleteTCB\000"
 11763      656C6574 
 11763      65544342 
 11763      00
 11764              	.LASF204:
 11765 0705 70784375 		.ascii	"pxCurrentTCB\000"
 11765      7272656E 
 11765      74544342 
 11765      00
 11766              	.LASF91:
 11767 0712 70727649 		.ascii	"prvIdleTask\000"
 11767      646C6554 
 11767      61736B00 
 11768              	.LASF154:
 11769 071e 78456C61 		.ascii	"xElapsedTime\000"
 11769      70736564 
 11769      54696D65 
 11769      00
 11770              	.LASF133:
 11771 072b 76546173 		.ascii	"vTaskSwitchContext\000"
 11771      6B537769 
 11771      74636843 
 11771      6F6E7465 
 11771      787400
 11772              	.LASF45:
 11773 073e 65496E63 		.ascii	"eIncrement\000"
 11773      72656D65 
 11773      6E7400
 11774              	.LASF139:
 11775 0749 78546173 		.ascii	"xTaskToSuspend\000"
 11775      6B546F53 
 11775      75737065 
 11775      6E6400
 11776              	.LASF187:
 11777 0758 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11777      6572666C 
 11777      6F774465 
 11777      6C617965 
 11777      64546173 
 11778              	.LASF56:
 11779 0772 756C5061 		.ascii	"ulParameters\000"
 11779      72616D65 
 11779      74657273 
 11779      00
 11780              	.LASF86:
 11781 077f 78526567 		.ascii	"xRegions\000"
 11781      696F6E73 
 11781      00
 11782              	.LASF166:
 11783 0788 756C5461 		.ascii	"ulTaskNotifyTake\000"
 11783      736B4E6F 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 316


 11783      74696679 
 11783      54616B65 
 11783      00
 11784              	.LASF78:
 11785 0799 78546173 		.ascii	"xTask\000"
 11785      6B00
 11786              	.LASF189:
 11787 079f 78546173 		.ascii	"xTasksWaitingTermination\000"
 11787      6B735761 
 11787      6974696E 
 11787      67546572 
 11787      6D696E61 
 11788              	.LASF106:
 11789 07b8 75784E65 		.ascii	"uxNewPriority\000"
 11789      77507269 
 11789      6F726974 
 11789      7900
 11790              	.LASF80:
 11791 07c6 70785461 		.ascii	"pxTaskCode\000"
 11791      736B436F 
 11791      646500
 11792              	.LASF82:
 11793 07d1 756C5374 		.ascii	"ulStackDepth\000"
 11793      61636B44 
 11793      65707468 
 11793      00
 11794              	.LASF128:
 11795 07de 70785072 		.ascii	"pxPreviousWakeTime\000"
 11795      6576696F 
 11795      75735761 
 11795      6B655469 
 11795      6D6500
 11796              	.LASF200:
 11797 07f1 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 11797      74546173 
 11797      6B556E62 
 11797      6C6F636B 
 11797      54696D65 
 11798              	.LASF46:
 11799 0806 65536574 		.ascii	"eSetValueWithOverwrite\000"
 11799      56616C75 
 11799      65576974 
 11799      684F7665 
 11799      72777269 
 11800              	.LASF219:
 11801 081d 76506F72 		.ascii	"vPortEndScheduler\000"
 11801      74456E64 
 11801      53636865 
 11801      64756C65 
 11801      7200
 11802              	.LASF194:
 11803 082f 7578546F 		.ascii	"uxTopReadyPriority\000"
 11803      70526561 
 11803      64795072 
 11803      696F7269 
 11803      747900
 11804              	.LASF55:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 317


 11805 0842 756C4C65 		.ascii	"ulLengthInBytes\000"
 11805      6E677468 
 11805      496E4279 
 11805      74657300 
 11806              	.LASF73:
 11807 0852 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11807      74536574 
 11807      42415345 
 11807      50524900 
 11808              	.LASF33:
 11809 0862 4C697374 		.ascii	"ListItem_t\000"
 11809      4974656D 
 11809      5F7400
 11810              	.LASF136:
 11811 086d 7578546F 		.ascii	"uxTopPriority\000"
 11811      70507269 
 11811      6F726974 
 11811      7900
 11812              	.LASF172:
 11813 087b 70756C4E 		.ascii	"pulNotificationValue\000"
 11813      6F746966 
 11813      69636174 
 11813      696F6E56 
 11813      616C7565 
 11814              	.LASF30:
 11815 0890 70785072 		.ascii	"pxPrevious\000"
 11815      6576696F 
 11815      757300
 11816              	.LASF98:
 11817 089b 78546173 		.ascii	"xTaskToDelete\000"
 11817      6B546F44 
 11817      656C6574 
 11817      6500
 11818              	.LASF221:
 11819 08a9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11819      43313120 
 11819      352E342E 
 11819      31203230 
 11819      31363036 
 11820 08dc 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 11820      20726576 
 11820      6973696F 
 11820      6E203233 
 11820      37373135 
 11821 090f 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 11821      70202D6D 
 11821      6670753D 
 11821      66707634 
 11821      2D73702D 
 11822 0942 65637469 		.ascii	"ections -ffat-lto-objects\000"
 11822      6F6E7320 
 11822      2D666661 
 11822      742D6C74 
 11822      6F2D6F62 
 11823              	.LASF160:
 11824 095c 70765661 		.ascii	"pvValue\000"
 11824      6C756500 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 318


 11825              	.LASF21:
 11826 0964 666C6F61 		.ascii	"float\000"
 11826      7400
 11827              	.LASF162:
 11828 096a 70765265 		.ascii	"pvReturn\000"
 11828      7475726E 
 11828      00
 11829              	.LASF96:
 11830 0973 78436F6E 		.ascii	"xConstTickCount\000"
 11830      73745469 
 11830      636B436F 
 11830      756E7400 
 11831              	.LASF32:
 11832 0983 7076436F 		.ascii	"pvContainer\000"
 11832      6E746169 
 11832      6E657200 
 11833              	.LASF146:
 11834 098f 7078556E 		.ascii	"pxUnblockedTCB\000"
 11834      626C6F63 
 11834      6B656454 
 11834      434200
 11835              	.LASF67:
 11836 099e 75634E6F 		.ascii	"ucNotifyState\000"
 11836      74696679 
 11836      53746174 
 11836      6500
 11837              	.LASF95:
 11838 09ac 7854696D 		.ascii	"xTimeToWake\000"
 11838      65546F57 
 11838      616B6500 
 11839              	.LASF6:
 11840 09b8 756E7369 		.ascii	"unsigned char\000"
 11840      676E6564 
 11840      20636861 
 11840      7200
 11841              	.LASF66:
 11842 09c6 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11842      74696669 
 11842      65645661 
 11842      6C756500 
 11843              	.LASF107:
 11844 09d6 75784375 		.ascii	"uxCurrentBasePriority\000"
 11844      7272656E 
 11844      74426173 
 11844      65507269 
 11844      6F726974 
 11845              	.LASF69:
 11846 09ec 5443425F 		.ascii	"TCB_t\000"
 11846      7400
 11847              	.LASF7:
 11848 09f2 73686F72 		.ascii	"short int\000"
 11848      7420696E 
 11848      7400
 11849              	.LASF135:
 11850 09fc 756C4368 		.ascii	"ulCheckValue\000"
 11850      65636B56 
 11850      616C7565 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 319


 11850      00
 11851              	.LASF195:
 11852 0a09 78536368 		.ascii	"xSchedulerRunning\000"
 11852      6564756C 
 11852      65725275 
 11852      6E6E696E 
 11852      6700
 11853              	.LASF115:
 11854 0a1b 76546173 		.ascii	"vTaskEndScheduler\000"
 11854      6B456E64 
 11854      53636865 
 11854      64756C65 
 11854      7200
 11855              	.LASF126:
 11856 0a2d 75785065 		.ascii	"uxPendedCounts\000"
 11856      6E646564 
 11856      436F756E 
 11856      747300
 11857              	.LASF111:
 11858 0a3c 78546173 		.ascii	"xTaskToResume\000"
 11858      6B546F52 
 11858      6573756D 
 11858      6500
 11859              	.LASF124:
 11860 0a4a 78546173 		.ascii	"xTaskResumeAll\000"
 11860      6B526573 
 11860      756D6541 
 11860      6C6C00
 11861              	.LASF196:
 11862 0a59 75785065 		.ascii	"uxPendedTicks\000"
 11862      6E646564 
 11862      5469636B 
 11862      7300
 11863              	.LASF23:
 11864 0a67 5461736B 		.ascii	"TaskFunction_t\000"
 11864      46756E63 
 11864      74696F6E 
 11864      5F7400
 11865              	.LASF37:
 11866 0a76 784C4953 		.ascii	"xLIST\000"
 11866      5400
 11867              	.LASF102:
 11868 0a7c 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 11868      736B5072 
 11868      696F7269 
 11868      74794765 
 11868      7446726F 
 11869              	.LASF156:
 11870 0a95 76546173 		.ascii	"vTaskMissedYield\000"
 11870      6B4D6973 
 11870      73656459 
 11870      69656C64 
 11870      00
 11871              	.LASF181:
 11872 0aa6 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 11872      6B4E6F74 
 11872      69667947 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 320


 11872      69766546 
 11872      726F6D49 
 11873              	.LASF41:
 11874 0abd 4C697374 		.ascii	"List_t\000"
 11874      5F7400
 11875              	.LASF79:
 11876 0ac4 70727649 		.ascii	"prvInitialiseNewTask\000"
 11876      6E697469 
 11876      616C6973 
 11876      654E6577 
 11876      5461736B 
 11877              	.LASF164:
 11878 0ad9 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11878      6B476574 
 11878      53636865 
 11878      64756C65 
 11878      72537461 
 11879              	.LASF113:
 11880 0af0 75785361 		.ascii	"uxSavedInterruptStatus\000"
 11880      76656449 
 11880      6E746572 
 11880      72757074 
 11880      53746174 
 11881              	.LASF130:
 11882 0b07 7853686F 		.ascii	"xShouldDelay\000"
 11882      756C6444 
 11882      656C6179 
 11882      00
 11883              	.LASF89:
 11884 0b14 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 11884      6865636B 
 11884      5461736B 
 11884      73576169 
 11884      74696E67 
 11885              	.LASF20:
 11886 0b34 75696E74 		.ascii	"uint32_t\000"
 11886      33325F74 
 11886      00
 11887              	.LASF214:
 11888 0b3d 764C6973 		.ascii	"vListInsert\000"
 11888      74496E73 
 11888      65727400 
 11889              	.LASF155:
 11890 0b49 76546173 		.ascii	"vTaskSuspendAll\000"
 11890      6B537573 
 11890      70656E64 
 11890      416C6C00 
 11891              	.LASF2:
 11892 0b59 6C6F6E67 		.ascii	"long double\000"
 11892      20646F75 
 11892      626C6500 
 11893              	.LASF92:
 11894 0b65 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 11894      64644375 
 11894      7272656E 
 11894      74546173 
 11894      6B546F44 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 321


 11895              	.LASF16:
 11896 0b84 63686172 		.ascii	"char\000"
 11896      00
 11897              	.LASF119:
 11898 0b89 70635461 		.ascii	"pcTaskGetName\000"
 11898      736B4765 
 11898      744E616D 
 11898      6500
 11899              	.LASF212:
 11900 0b97 76506F72 		.ascii	"vPortExitCritical\000"
 11900      74457869 
 11900      74437269 
 11900      74696361 
 11900      6C00
 11901              	.LASF145:
 11902 0ba9 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11902      6B52656D 
 11902      6F766546 
 11902      726F6D45 
 11902      76656E74 
 11903              	.LASF28:
 11904 0bc2 78497465 		.ascii	"xItemValue\000"
 11904      6D56616C 
 11904      756500
 11905              	.LASF0:
 11906 0bcd 756E7369 		.ascii	"unsigned int\000"
 11906      676E6564 
 11906      20696E74 
 11906      00
 11907              	.LASF8:
 11908 0bda 5F5F7569 		.ascii	"__uint16_t\000"
 11908      6E743136 
 11908      5F7400
 11909              	.LASF104:
 11910 0be5 76546173 		.ascii	"vTaskDelete\000"
 11910      6B44656C 
 11910      65746500 
 11911              	.LASF44:
 11912 0bf1 65536574 		.ascii	"eSetBits\000"
 11912      42697473 
 11912      00
 11913              	.LASF190:
 11914 0bfa 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11914      6C657465 
 11914      64546173 
 11914      6B735761 
 11914      6974696E 
 11915              	.LASF103:
 11916 0c17 75785361 		.ascii	"uxSavedInterruptState\000"
 11916      76656449 
 11916      6E746572 
 11916      72757074 
 11916      53746174 
 11917              	.LASF10:
 11918 0c2d 5F5F696E 		.ascii	"__int32_t\000"
 11918      7433325F 
 11918      7400
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 322


 11919              	.LASF152:
 11920 0c37 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 11920      6B436865 
 11920      636B466F 
 11920      7254696D 
 11920      654F7574 
 11921              	.LASF213:
 11922 0c4c 75784C69 		.ascii	"uxListRemove\000"
 11922      73745265 
 11922      6D6F7665 
 11922      00
 11923              	.LASF148:
 11924 0c59 70784576 		.ascii	"pxEventListItem\000"
 11924      656E744C 
 11924      69737449 
 11924      74656D00 
 11925              	.LASF199:
 11926 0c69 75785461 		.ascii	"uxTaskNumber\000"
 11926      736B4E75 
 11926      6D626572 
 11926      00
 11927              	.LASF123:
 11928 0c76 70785465 		.ascii	"pxTemp\000"
 11928      6D7000
 11929              	.LASF201:
 11930 0c7d 7849646C 		.ascii	"xIdleTaskHandle\000"
 11930      65546173 
 11930      6B48616E 
 11930      646C6500 
 11931              	.LASF183:
 11932 0c8d 70785265 		.ascii	"pxReadyTasksLists\000"
 11932      61647954 
 11932      61736B73 
 11932      4C697374 
 11932      7300
 11933              	.LASF144:
 11934 0c9f 78576169 		.ascii	"xWaitIndefinitely\000"
 11934      74496E64 
 11934      6566696E 
 11934      6974656C 
 11934      7900
 11935              	.LASF226:
 11936 0cb1 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11936      736B4765 
 11936      744E756D 
 11936      6265724F 
 11936      66546173 
 11937              	.LASF210:
 11938 0cc8 76506F72 		.ascii	"vPortEnterCritical\000"
 11938      74456E74 
 11938      65724372 
 11938      69746963 
 11938      616C00
 11939              	.LASF184:
 11940 0cdb 7844656C 		.ascii	"xDelayedTaskList1\000"
 11940      61796564 
 11940      5461736B 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 323


 11940      4C697374 
 11940      3100
 11941              	.LASF167:
 11942 0ced 78436C65 		.ascii	"xClearCountOnExit\000"
 11942      6172436F 
 11942      756E744F 
 11942      6E457869 
 11942      7400
 11943              	.LASF198:
 11944 0cff 784E756D 		.ascii	"xNumOfOverflows\000"
 11944      4F664F76 
 11944      6572666C 
 11944      6F777300 
 11945              	.LASF173:
 11946 0d0f 78546173 		.ascii	"xTaskGenericNotify\000"
 11946      6B47656E 
 11946      65726963 
 11946      4E6F7469 
 11946      667900
 11947              	.LASF193:
 11948 0d22 78546963 		.ascii	"xTickCount\000"
 11948      6B436F75 
 11948      6E7400
 11949              	.LASF151:
 11950 0d2d 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 11950      6B496E74 
 11950      65726E61 
 11950      6C536574 
 11950      54696D65 
 11951              	.LASF206:
 11952 0d4a 6D656D73 		.ascii	"memset\000"
 11952      657400
 11953              	.LASF132:
 11954 0d51 78546963 		.ascii	"xTicksToDelay\000"
 11954      6B73546F 
 11954      44656C61 
 11954      7900
 11955              	.LASF208:
 11956 0d5f 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11956      7274496E 
 11956      69746961 
 11956      6C697365 
 11956      53746163 
 11957              	.LASF129:
 11958 0d75 7854696D 		.ascii	"xTimeIncrement\000"
 11958      65496E63 
 11958      72656D65 
 11958      6E7400
 11959              	.LASF47:
 11960 0d84 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11960      56616C75 
 11960      65576974 
 11960      686F7574 
 11960      4F766572 
 11961              	.LASF64:
 11962 0d9e 70635461 		.ascii	"pcTaskName\000"
 11962      736B4E61 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 324


 11962      6D6500
 11963              	.LASF17:
 11964 0da9 75696E74 		.ascii	"uint8_t\000"
 11964      385F7400 
 11965              	.LASF117:
 11966 0db1 78546963 		.ascii	"xTicks\000"
 11966      6B7300
 11967              	.LASF90:
 11968 0db8 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 11968      61736B49 
 11968      73546173 
 11968      6B537573 
 11968      70656E64 
 11969              	.LASF43:
 11970 0dcf 654E6F41 		.ascii	"eNoAction\000"
 11970      6374696F 
 11970      6E00
 11971              	.LASF15:
 11972 0dd9 73697A65 		.ascii	"sizetype\000"
 11972      74797065 
 11972      00
 11973              	.LASF29:
 11974 0de2 70784E65 		.ascii	"pxNext\000"
 11974      787400
 11975              	.LASF143:
 11976 0de9 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 11976      6B506C61 
 11976      63654F6E 
 11976      4576656E 
 11976      744C6973 
 11977              	.LASF209:
 11978 0e09 764C6973 		.ascii	"vListInitialise\000"
 11978      74496E69 
 11978      7469616C 
 11978      69736500 
 11979              	.LASF169:
 11980 0e19 78546173 		.ascii	"xTaskNotifyWait\000"
 11980      6B4E6F74 
 11980      69667957 
 11980      61697400 
 11981              	.LASF168:
 11982 0e29 756C5265 		.ascii	"ulReturn\000"
 11982      7475726E 
 11982      00
 11983              	.LASF34:
 11984 0e32 784C4953 		.ascii	"xLIST_ITEM\000"
 11984      545F4954 
 11984      454D00
 11985              	.LASF62:
 11986 0e3d 75785072 		.ascii	"uxPriority\000"
 11986      696F7269 
 11986      747900
 11987              	.LASF186:
 11988 0e48 70784465 		.ascii	"pxDelayedTaskList\000"
 11988      6C617965 
 11988      64546173 
 11988      6B4C6973 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccbEKd5Q.s 			page 325


 11988      7400
 11989              	.LASF161:
 11990 0e5a 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11990      736B4765 
 11990      74546872 
 11990      6561644C 
 11990      6F63616C 
 11991              	.LASF81:
 11992 0e7d 70634E61 		.ascii	"pcName\000"
 11992      6D6500
 11993              	.LASF100:
 11994 0e84 75785461 		.ascii	"uxTaskPriorityGet\000"
 11994      736B5072 
 11994      696F7269 
 11994      74794765 
 11994      7400
 11995              	.LASF149:
 11996 0e96 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11996      6B536574 
 11996      54696D65 
 11996      4F757453 
 11996      74617465 
 11997              	.LASF171:
 11998 0eab 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11998      7473546F 
 11998      436C6561 
 11998      724F6E45 
 11998      78697400 
 11999              	.LASF26:
 12000 0ebf 55426173 		.ascii	"UBaseType_t\000"
 12000      65547970 
 12000      655F7400 
 12001              	.LASF147:
 12002 0ecb 76546173 		.ascii	"vTaskRemoveFromUnorderedEventList\000"
 12002      6B52656D 
 12002      6F766546 
 12002      726F6D55 
 12002      6E6F7264 
 12003              	.LASF134:
 12004 0eed 70756C53 		.ascii	"pulStack\000"
 12004      7461636B 
 12004      00
 12005              	.LASF216:
 12006 0ef6 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 12006      7456616C 
 12006      69646174 
 12006      65496E74 
 12006      65727275 
 12007              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
