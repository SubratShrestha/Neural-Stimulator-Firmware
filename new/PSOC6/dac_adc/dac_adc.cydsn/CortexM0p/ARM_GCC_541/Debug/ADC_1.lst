ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_1_InitConfig,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_1_InitConfig
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_1_InitConfig, %function
  25              	ADC_1_InitConfig:
  26              	.LFB188:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC_1.c"
   1:Generated_Source\PSoC6/ADC_1.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.c **** * \file     ADC_1.c
   3:Generated_Source\PSoC6/ADC_1.c **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.c **** *
   5:Generated_Source\PSoC6/ADC_1.c **** * \brief
   6:Generated_Source\PSoC6/ADC_1.c **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.c **** *
   8:Generated_Source\PSoC6/ADC_1.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.c **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_1.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 2


  31:Generated_Source\PSoC6/ADC_1.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.c **** #include "ADC_1.h"
  40:Generated_Source\PSoC6/ADC_1.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC_1.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC_1.c **** 
  43:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_initVar = 0u;
  44:Generated_Source\PSoC6/ADC_1.c **** uint8_t ADC_1_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC_1.c **** 
  47:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Start
  49:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC_1.c **** *
  51:Generated_Source\PSoC6/ADC_1.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC_1.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC_1.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC_1.c **** *
  55:Generated_Source\PSoC6/ADC_1.c **** * \param None
  56:Generated_Source\PSoC6/ADC_1.c **** *
  57:Generated_Source\PSoC6/ADC_1.c **** * \return None
  58:Generated_Source\PSoC6/ADC_1.c **** *
  59:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC_1.c **** *
  61:Generated_Source\PSoC6/ADC_1.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC_1.c **** *  \ref ADC_1_initVar (RW)
  63:Generated_Source\PSoC6/ADC_1.c **** *
  64:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Start(void)
  66:Generated_Source\PSoC6/ADC_1.c **** {
  67:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
  68:Generated_Source\PSoC6/ADC_1.c ****     {
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Init();
  70:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
  71:Generated_Source\PSoC6/ADC_1.c ****     }
  72:Generated_Source\PSoC6/ADC_1.c **** 
  73:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Enable();
  74:Generated_Source\PSoC6/ADC_1.c **** 
  75:Generated_Source\PSoC6/ADC_1.c ****     return;
  76:Generated_Source\PSoC6/ADC_1.c **** }
  77:Generated_Source\PSoC6/ADC_1.c **** 
  78:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartEx
  80:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC_1.c **** *
  82:Generated_Source\PSoC6/ADC_1.c **** * \brief This function starts the ADC_1 and sets the Interrupt
  83:Generated_Source\PSoC6/ADC_1.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC_1.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC_1.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC_1.c **** *
  87:Generated_Source\PSoC6/ADC_1.c **** * \param address This is the address of a user defined function for the ISR.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 3


  88:Generated_Source\PSoC6/ADC_1.c **** *
  89:Generated_Source\PSoC6/ADC_1.c **** * \return None
  90:Generated_Source\PSoC6/ADC_1.c **** *
  91:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC_1.c **** *
  93:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC_1.c **** {
  96:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
  97:Generated_Source\PSoC6/ADC_1.c **** 
  98:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/ADC_1.c ****     #endif
 104:Generated_Source\PSoC6/ADC_1.c ****     #endif
 105:Generated_Source\PSoC6/ADC_1.c **** 
 106:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC_1.c ****         (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC_1.c ****     #endif
 111:Generated_Source\PSoC6/ADC_1.c ****     #endif
 112:Generated_Source\PSoC6/ADC_1.c **** 
 113:Generated_Source\PSoC6/ADC_1.c **** }
 114:Generated_Source\PSoC6/ADC_1.c **** 
 115:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_InitConfig
 117:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC_1.c **** *
 119:Generated_Source\PSoC6/ADC_1.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC_1.c **** *
 121:Generated_Source\PSoC6/ADC_1.c **** * \param scan Number of scan defined in the ADC_1.
 122:Generated_Source\PSoC6/ADC_1.c **** *
 123:Generated_Source\PSoC6/ADC_1.c **** * \return None
 124:Generated_Source\PSoC6/ADC_1.c **** *
 125:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC_1.c **** *
 127:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC_1.c **** {
  28              		.loc 1 129 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40              	.LVL1:
  41              	.LBB38:
  42              	.LBB39:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 4


  43              	.LBB40:
  44              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 2.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2020, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 5


  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>2.0</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the ECO trimming values calculation algorithm in the \ref Cy_SysClk_EcoConfigure 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         This change may invalidate the already used crystals, in cases: \n
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The crystal frequency is less than 16 MHz (the supported crystal frequency range was ch
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * The maximum amplitude (internal calculation value) is less than 0.65 V. \n
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Also the second parameter cSum takes into account both C0 (the crystal itself shunt capac
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         For detail, refer the \ref Cy_SysClk_EcoConfigure documentation and the ECO Trimming sect
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Enhanced the ECO performance for high-noise conditions that result from simultaneous swit
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 6


 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 7


 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 8


 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 9


 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 10


 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 11


 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 12


 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 13


 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 14


 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   2
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   0
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 15


 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoDisable
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 16


 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 17


 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 18


 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllLocked
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_FllDisable
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 19


 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLocked
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 20


 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllLostLock
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PllDisable
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 21


 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloEnable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 22


1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloDisable
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 23


1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloEnable
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloDisable
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 24


1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 25


1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 26


1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 27


1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoEnable
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 28


1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoOkay
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoDisable
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 29


1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_WcoBypass
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 30


1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 31


1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 32


1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 33


1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 34


1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 35


1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 36


1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 37


1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 38


1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 39


1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 40


2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 41


2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/2.0/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 42


2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
  45              		.loc 2 2170 0
  46 0004 1E4B     		ldr	r3, .L3
  47 0006 1A68     		ldr	r2, [r3]
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
  48              		.loc 2 2172 0
  49 0008 7023     		movs	r3, #112
  50 000a D35C     		ldrb	r3, [r2, r3]
  51 000c 0121     		movs	r1, #1
  52 000e 0B40     		ands	r3, r1
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  53              		.loc 2 2171 0
  54 0010 8021     		movs	r1, #128
  55 0012 C905     		lsls	r1, r1, #23
  56 0014 0B43     		orrs	r3, r1
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
  57              		.loc 2 2170 0
  58 0016 8021     		movs	r1, #128
  59 0018 C900     		lsls	r1, r1, #3
  60 001a 9068     		ldr	r0, [r2, #8]
  61              	.LVL2:
  62 001c 4350     		str	r3, [r0, r1]
  63              	.LVL3:
  64              	.LBE40:
  65              	.LBE39:
  66              	.LBE38:
 130:Generated_Source\PSoC6/ADC_1.c ****     bool deInitRouting = false;
 131:Generated_Source\PSoC6/ADC_1.c **** 
 132:Generated_Source\PSoC6/ADC_1.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC_1.c ****     #if (ADC_1_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Disable();
 135:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_SetDivider(config->clkDivider);
  67              		.loc 1 135 0
  68 001e 2369     		ldr	r3, [r4, #16]
  69              	.LVL4:
  70              	.LBB41:
  71              	.LBB42:
  72              	.LBB43:
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
  73              		.loc 2 1880 0
  74 0020 FF2B     		cmp	r3, #255
  75 0022 0AD8     		bhi	.L2
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
  76              		.loc 2 1883 0
  77 0024 9168     		ldr	r1, [r2, #8]
  78 0026 7420     		movs	r0, #116
  79 0028 125A     		ldrh	r2, [r2, r0]
  80 002a 8A18     		adds	r2, r1, r2
  81 002c 5068     		ldr	r0, [r2, #4]
  82 002e 1549     		ldr	r1, .L3+4
  83 0030 0140     		ands	r1, r0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 43


  84 0032 1B06     		lsls	r3, r3, #24
  85              	.LVL5:
  86 0034 1B0C     		lsrs	r3, r3, #16
  87 0036 0B43     		orrs	r3, r1
  88 0038 5360     		str	r3, [r2, #4]
  89              	.LVL6:
  90              	.L2:
  91              	.LBE43:
  92              	.LBE42:
  93              	.LBE41:
  94              	.LBB44:
  95              	.LBB45:
  96              	.LBB46:
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
  97              		.loc 2 2132 0
  98 003a 114B     		ldr	r3, .L3
  99 003c 1A68     		ldr	r2, [r3]
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 100              		.loc 2 2133 0
 101 003e 7323     		movs	r3, #115
 102 0040 D35C     		ldrb	r3, [r2, r3]
 103 0042 0321     		movs	r1, #3
 104 0044 9940     		lsls	r1, r1, r3
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
 105              		.loc 2 2134 0
 106 0046 7023     		movs	r3, #112
 107 0048 D35C     		ldrb	r3, [r2, r3]
 108 004a 7220     		movs	r0, #114
 109 004c 105C     		ldrb	r0, [r2, r0]
 110 004e 1D00     		movs	r5, r3
 111 0050 8540     		lsls	r5, r5, r0
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
 112              		.loc 2 2133 0
 113 0052 2943     		orrs	r1, r5
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
 114              		.loc 2 2136 0
 115 0054 0120     		movs	r0, #1
 116 0056 0340     		ands	r3, r0
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
 117              		.loc 2 2135 0
 118 0058 0B43     		orrs	r3, r1
 119 005a 8021     		movs	r1, #128
 120 005c 0906     		lsls	r1, r1, #24
 121 005e 0B43     		orrs	r3, r1
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
 122              		.loc 2 2132 0
 123 0060 8021     		movs	r1, #128
 124 0062 C900     		lsls	r1, r1, #3
 125 0064 9068     		ldr	r0, [r2, #8]
 126 0066 4350     		str	r3, [r0, r1]
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
 127              		.loc 2 2137 0
 128 0068 9368     		ldr	r3, [r2, #8]
 129 006a 5B58     		ldr	r3, [r3, r1]
 130              	.LVL7:
 131              	.LBE46:
 132              	.LBE45:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 44


 133              	.LBE44:
 136:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_intSarClock_Enable();
 137:Generated_Source\PSoC6/ADC_1.c ****     #endif /* ADC_1_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC_1.c **** 
 139:Generated_Source\PSoC6/ADC_1.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_DeInit(ADC_1_SAR__HW, deInitRouting);
 134              		.loc 1 140 0
 135 006c 064D     		ldr	r5, .L3+8
 136 006e 0021     		movs	r1, #0
 137 0070 2800     		movs	r0, r5
 138 0072 FFF7FEFF 		bl	Cy_SAR_DeInit
 139              	.LVL8:
 141:Generated_Source\PSoC6/ADC_1.c ****     (void)Cy_SAR_Init(ADC_1_SAR__HW, config->hwConfigStc);
 140              		.loc 1 141 0
 141 0076 A168     		ldr	r1, [r4, #8]
 142 0078 2800     		movs	r0, r5
 143 007a FFF7FEFF 		bl	Cy_SAR_Init
 144              	.LVL9:
 142:Generated_Source\PSoC6/ADC_1.c **** 
 143:Generated_Source\PSoC6/ADC_1.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC_1.c ****     if(1uL == ADC_1_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC_1.c ****     {
 146:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_1_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/ADC_1.c **** 
 148:Generated_Source\PSoC6/ADC_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC_1.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/ADC_1.c ****         {
 151:Generated_Source\PSoC6/ADC_1.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_1_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/ADC_1.c ****         }
 153:Generated_Source\PSoC6/ADC_1.c ****     }
 154:Generated_Source\PSoC6/ADC_1.c **** 
 155:Generated_Source\PSoC6/ADC_1.c ****     return;
 156:Generated_Source\PSoC6/ADC_1.c **** }
 145              		.loc 1 156 0
 146              		@ sp needed
 147              	.LVL10:
 148 007e 70BD     		pop	{r4, r5, r6, pc}
 149              	.L4:
 150              		.align	2
 151              	.L3:
 152 0080 00000000 		.word	cy_device
 153 0084 FF00FFFF 		.word	-65281
 154 0088 00001D41 		.word	1092419584
 155              		.cfi_endproc
 156              	.LFE188:
 157              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 158              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 159              		.align	2
 160              		.global	ADC_1_StartConvert
 161              		.code	16
 162              		.thumb_func
 163              		.type	ADC_1_StartConvert, %function
 164              	ADC_1_StartConvert:
 165              	.LFB190:
 157:Generated_Source\PSoC6/ADC_1.c **** 
 158:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SelectConfig
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 45


 160:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC_1.c **** *
 162:Generated_Source\PSoC6/ADC_1.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC_1.c **** *
 164:Generated_Source\PSoC6/ADC_1.c **** * \param config Number of configuration in the ADC_1.
 165:Generated_Source\PSoC6/ADC_1.c **** *
 166:Generated_Source\PSoC6/ADC_1.c **** * \param restart Set to 1u if the ADC_1 should be  restarted after
 167:Generated_Source\PSoC6/ADC_1.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC_1.c **** *
 169:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC_1.c **** {
 172:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC_1.c ****     if(ADC_1_TOTAL_CONFIGS > config)
 174:Generated_Source\PSoC6/ADC_1.c ****     {
 175:Generated_Source\PSoC6/ADC_1.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_Stop();
 177:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_selected = 1u;
 178:Generated_Source\PSoC6/ADC_1.c **** 
 179:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_initVar)
 180:Generated_Source\PSoC6/ADC_1.c ****         {
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Init();
 182:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 183:Generated_Source\PSoC6/ADC_1.c ****         }
 184:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC_1.c ****         #endif
 187:Generated_Source\PSoC6/ADC_1.c **** 
 188:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_InitConfig(&ADC_1_allConfigs[config]);
 189:Generated_Source\PSoC6/ADC_1.c **** 
 190:Generated_Source\PSoC6/ADC_1.c ****         #if (ADC_1_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC_1.c ****         #endif
 193:Generated_Source\PSoC6/ADC_1.c **** 
 194:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_currentConfig = config;
 195:Generated_Source\PSoC6/ADC_1.c **** 
 196:Generated_Source\PSoC6/ADC_1.c ****         if(1u == restart)
 197:Generated_Source\PSoC6/ADC_1.c ****         {
 198:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_Start();
 200:Generated_Source\PSoC6/ADC_1.c **** 
 201:Generated_Source\PSoC6/ADC_1.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_StartConvert();
 203:Generated_Source\PSoC6/ADC_1.c ****         }
 204:Generated_Source\PSoC6/ADC_1.c ****     }
 205:Generated_Source\PSoC6/ADC_1.c ****     return;
 206:Generated_Source\PSoC6/ADC_1.c **** }
 207:Generated_Source\PSoC6/ADC_1.c **** 
 208:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_StartConvert
 210:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC_1.c **** *
 212:Generated_Source\PSoC6/ADC_1.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC_1.c **** * continuously.
 214:Generated_Source\PSoC6/ADC_1.c **** 
 215:Generated_Source\PSoC6/ADC_1.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC_1.c **** * every scan requires a call of this function. The mode is set with the
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 46


 217:Generated_Source\PSoC6/ADC_1.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC_1.c **** * overridden at run time with the ADC_1_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC_1.c **** *
 220:Generated_Source\PSoC6/ADC_1.c **** * \param None
 221:Generated_Source\PSoC6/ADC_1.c **** *
 222:Generated_Source\PSoC6/ADC_1.c **** * \return None
 223:Generated_Source\PSoC6/ADC_1.c **** *
 224:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC_1.c **** *
 226:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_StartConvert(void)
 228:Generated_Source\PSoC6/ADC_1.c **** {
 166              		.loc 1 228 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 10B5     		push	{r4, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 4, -8
 173              		.cfi_offset 14, -4
 229:Generated_Source\PSoC6/ADC_1.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_1_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_
 174              		.loc 1 229 0
 175 0002 074B     		ldr	r3, .L8
 176 0004 5B68     		ldr	r3, [r3, #4]
 177 0006 5B03     		lsls	r3, r3, #13
 178 0008 04D5     		bpl	.L6
 230:Generated_Source\PSoC6/ADC_1.c ****     {
 231:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 179              		.loc 1 231 0
 180 000a 0121     		movs	r1, #1
 181 000c 0448     		ldr	r0, .L8
 182 000e FFF7FEFF 		bl	Cy_SAR_StartConvert
 183              	.LVL11:
 184 0012 03E0     		b	.L5
 185              	.L6:
 232:Generated_Source\PSoC6/ADC_1.c ****     }
 233:Generated_Source\PSoC6/ADC_1.c ****     else
 234:Generated_Source\PSoC6/ADC_1.c ****     {
 235:Generated_Source\PSoC6/ADC_1.c ****         Cy_SAR_StartConvert(ADC_1_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 186              		.loc 1 235 0
 187 0014 0021     		movs	r1, #0
 188 0016 0248     		ldr	r0, .L8
 189 0018 FFF7FEFF 		bl	Cy_SAR_StartConvert
 190              	.LVL12:
 191              	.L5:
 236:Generated_Source\PSoC6/ADC_1.c ****     }
 237:Generated_Source\PSoC6/ADC_1.c **** }
 192              		.loc 1 237 0
 193              		@ sp needed
 194 001c 10BD     		pop	{r4, pc}
 195              	.L9:
 196 001e C046     		.align	2
 197              	.L8:
 198 0020 00001D41 		.word	1092419584
 199              		.cfi_endproc
 200              	.LFE190:
 201              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 47


 202              		.section	.text.ADC_1_SetConvertMode,"ax",%progbits
 203              		.align	2
 204              		.global	ADC_1_SetConvertMode
 205              		.code	16
 206              		.thumb_func
 207              		.type	ADC_1_SetConvertMode, %function
 208              	ADC_1_SetConvertMode:
 209              	.LFB191:
 238:Generated_Source\PSoC6/ADC_1.c **** 
 239:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetConvertMode
 241:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC_1.c **** *
 243:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC_1.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC_1.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC_1.c **** *
 247:Generated_Source\PSoC6/ADC_1.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC_1.c **** *
 249:Generated_Source\PSoC6/ADC_1.c **** * \return None
 250:Generated_Source\PSoC6/ADC_1.c **** *
 251:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC_1.c **** *
 253:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC_1.c **** {
 210              		.loc 1 255 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215              	.LVL13:
 256:Generated_Source\PSoC6/ADC_1.c ****     switch(mode)
 216              		.loc 1 256 0
 217 0000 0128     		cmp	r0, #1
 218 0002 06D1     		bne	.L14
 257:Generated_Source\PSoC6/ADC_1.c ****     {
 258:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
 259:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 219              		.loc 1 259 0
 220 0004 064A     		ldr	r2, .L15
 221 0006 5368     		ldr	r3, [r2, #4]
 222 0008 8021     		movs	r1, #128
 223 000a C902     		lsls	r1, r1, #11
 224 000c 0B43     		orrs	r3, r1
 225 000e 5360     		str	r3, [r2, #4]
 260:Generated_Source\PSoC6/ADC_1.c ****         break;
 226              		.loc 1 260 0
 227 0010 04E0     		b	.L10
 228              	.L14:
 261:Generated_Source\PSoC6/ADC_1.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC_1.c ****     default:
 263:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 229              		.loc 1 263 0
 230 0012 034A     		ldr	r2, .L15
 231 0014 5168     		ldr	r1, [r2, #4]
 232 0016 034B     		ldr	r3, .L15+4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 48


 233 0018 0B40     		ands	r3, r1
 234 001a 5360     		str	r3, [r2, #4]
 235              	.L10:
 264:Generated_Source\PSoC6/ADC_1.c ****         break;
 265:Generated_Source\PSoC6/ADC_1.c ****     }
 266:Generated_Source\PSoC6/ADC_1.c **** }
 236              		.loc 1 266 0
 237              		@ sp needed
 238 001c 7047     		bx	lr
 239              	.L16:
 240 001e C046     		.align	2
 241              	.L15:
 242 0020 00001D41 		.word	1092419584
 243 0024 FFFFFBFF 		.word	-262145
 244              		.cfi_endproc
 245              	.LFE191:
 246              		.size	ADC_1_SetConvertMode, .-ADC_1_SetConvertMode
 247              		.section	.text.ADC_1_IRQ_Enable,"ax",%progbits
 248              		.align	2
 249              		.global	ADC_1_IRQ_Enable
 250              		.code	16
 251              		.thumb_func
 252              		.type	ADC_1_IRQ_Enable, %function
 253              	ADC_1_IRQ_Enable:
 254              	.LFB192:
 267:Generated_Source\PSoC6/ADC_1.c **** 
 268:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Enable
 270:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC_1.c **** *
 272:Generated_Source\PSoC6/ADC_1.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC_1.c **** * interrupts must also be enabled for the ADC_1 interrupts to occur.
 274:Generated_Source\PSoC6/ADC_1.c **** *
 275:Generated_Source\PSoC6/ADC_1.c **** * \param None
 276:Generated_Source\PSoC6/ADC_1.c **** *
 277:Generated_Source\PSoC6/ADC_1.c **** * \return None
 278:Generated_Source\PSoC6/ADC_1.c **** *
 279:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 280:Generated_Source\PSoC6/ADC_1.c **** *
 281:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Enable(void){
 255              		.loc 1 282 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 283:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 287:Generated_Source\PSoC6/ADC_1.c ****     #endif
 288:Generated_Source\PSoC6/ADC_1.c ****     #endif
 289:Generated_Source\PSoC6/ADC_1.c **** 
 290:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC_1.c ****         NVIC_EnableIRQ(ADC_1_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC_1.c ****     #endif
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 49


 294:Generated_Source\PSoC6/ADC_1.c ****     #endif
 295:Generated_Source\PSoC6/ADC_1.c **** }
 260              		.loc 1 295 0
 261              		@ sp needed
 262 0000 7047     		bx	lr
 263              		.cfi_endproc
 264              	.LFE192:
 265              		.size	ADC_1_IRQ_Enable, .-ADC_1_IRQ_Enable
 266 0002 C046     		.section	.text.ADC_1_IRQ_Disable,"ax",%progbits
 267              		.align	2
 268              		.global	ADC_1_IRQ_Disable
 269              		.code	16
 270              		.thumb_func
 271              		.type	ADC_1_IRQ_Disable, %function
 272              	ADC_1_IRQ_Disable:
 273              	.LFB193:
 296:Generated_Source\PSoC6/ADC_1.c **** 
 297:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IRQ_Disable
 299:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC_1.c **** *
 301:Generated_Source\PSoC6/ADC_1.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC_1.c **** *
 303:Generated_Source\PSoC6/ADC_1.c **** * \param None
 304:Generated_Source\PSoC6/ADC_1.c **** *
 305:Generated_Source\PSoC6/ADC_1.c **** * \return None
 306:Generated_Source\PSoC6/ADC_1.c **** *
 307:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC_1.c **** *
 309:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_IRQ_Disable(void){
 274              		.loc 1 310 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 311:Generated_Source\PSoC6/ADC_1.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 313:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 315:Generated_Source\PSoC6/ADC_1.c ****     #endif
 316:Generated_Source\PSoC6/ADC_1.c ****     #endif
 317:Generated_Source\PSoC6/ADC_1.c **** 
 318:Generated_Source\PSoC6/ADC_1.c ****     #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC_1.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC_1.c ****         NVIC_DisableIRQ(ADC_1_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC_1.c ****     #endif
 322:Generated_Source\PSoC6/ADC_1.c ****     #endif
 323:Generated_Source\PSoC6/ADC_1.c **** }
 279              		.loc 1 323 0
 280              		@ sp needed
 281 0000 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE193:
 284              		.size	ADC_1_IRQ_Disable, .-ADC_1_IRQ_Disable
 285 0002 C046     		.section	.text.ADC_1_SetEosMask,"ax",%progbits
 286              		.align	2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 50


 287              		.global	ADC_1_SetEosMask
 288              		.code	16
 289              		.thumb_func
 290              		.type	ADC_1_SetEosMask, %function
 291              	ADC_1_SetEosMask:
 292              	.LFB194:
 324:Generated_Source\PSoC6/ADC_1.c **** 
 325:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetEosMask
 327:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC_1.c **** *
 329:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC_1.c **** *
 331:Generated_Source\PSoC6/ADC_1.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC_1.c **** *
 333:Generated_Source\PSoC6/ADC_1.c **** * \return None
 334:Generated_Source\PSoC6/ADC_1.c **** *
 335:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC_1.c **** *
 337:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC_1.c **** {
 293              		.loc 1 339 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              	.LVL14:
 298 0000 10B5     		push	{r4, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 4, -8
 301              		.cfi_offset 14, -4
 340:Generated_Source\PSoC6/ADC_1.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC_1.c **** 
 342:Generated_Source\PSoC6/ADC_1.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 302              		.loc 1 342 0
 303 0002 441E     		subs	r4, r0, #1
 304 0004 A041     		sbcs	r0, r0, r4
 305              	.LVL15:
 306 0006 C4B2     		uxtb	r4, r0
 307              	.LVL16:
 308              	.LBB47:
 309              	.LBB48:
 310              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 51


  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \addtogroup group_sar
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The functions and other declarations used in this driver are in cy_sar.h. 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and declarations in the PDL. 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 52


  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 53


 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 54


 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 55


 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 56


 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 57


 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 58


 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 59


 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_C
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 60


 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="2">1.20</td>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Flattened the organization of the driver source code into the single source directory and
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Driver library directory-structure simplification.</td>
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Added register access layer. Use register access macros instead
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         of direct register access using dereferenced pointers.</td>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Makes register access device-independent, so that the PDL does 
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         not need to be recompiled for each supported part number.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_DeepSleep flow</td>
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 61


 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syslib.h"
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_syspm.h"
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device.h"
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifdef CY_IP_MXS40PASS_SAR
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        20
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 62


 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 63


 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 64


 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 65


 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 66


 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 67


 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 68


 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 69


1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 70


1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 71


1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 72


1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 73


1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This macro is for backward compatibility macro for driver v1.10 and before, 
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * the preferred API is \ref Cy_SAR_DeepSleep */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define Cy_SAR_Sleep    Cy_SAR_DeepSleep
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 74


1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy_en
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_DeepSleep(SAR_Type *base);
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 75


1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 76


1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CTRL(base) &= ~SAR_CTRL_ENABLED_Msk;
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_CHAN_RESULT_UPDATED(base);
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 77


1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_CHAN_EN(base) = enableMask;
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_RANGE_COND(base) = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 78


1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return SAR_INTR(base);
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR(base) = intrMask;
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) SAR_INTR(base);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 79


1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_SET(base) = intrMask;
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 311              		.loc 3 1647 0
 312 0008 072C     		cmp	r4, #7
 313 000a 03D9     		bls	.L20
 314 000c 0449     		ldr	r1, .L21
 315 000e 0548     		ldr	r0, .L21+4
 316 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 317              	.LVL17:
 318              	.L20:
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     SAR_INTR_MASK(base) = intrMask;
 319              		.loc 3 1649 0
 320 0014 8623     		movs	r3, #134
 321 0016 9B00     		lsls	r3, r3, #2
 322 0018 034A     		ldr	r2, .L21+8
 323 001a D450     		str	r4, [r2, r3]
 324              	.LVL18:
 325              	.LBE48:
 326              	.LBE47:
 343:Generated_Source\PSoC6/ADC_1.c **** 
 344:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetInterruptMask(ADC_1_SAR__HW, intrMaskReg);
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 80


 345:Generated_Source\PSoC6/ADC_1.c **** }
 327              		.loc 1 345 0
 328              		@ sp needed
 329              	.LVL19:
 330 001c 10BD     		pop	{r4, pc}
 331              	.L22:
 332 001e C046     		.align	2
 333              	.L21:
 334 0020 6F060000 		.word	1647
 335 0024 00000000 		.word	.LC1
 336 0028 00001D41 		.word	1092419584
 337              		.cfi_endproc
 338              	.LFE194:
 339              		.size	ADC_1_SetEosMask, .-ADC_1_SetEosMask
 340              		.section	.text.ADC_1_SetChanMask,"ax",%progbits
 341              		.align	2
 342              		.global	ADC_1_SetChanMask
 343              		.code	16
 344              		.thumb_func
 345              		.type	ADC_1_SetChanMask, %function
 346              	ADC_1_SetChanMask:
 347              	.LFB195:
 346:Generated_Source\PSoC6/ADC_1.c **** 
 347:Generated_Source\PSoC6/ADC_1.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_SetChanMask
 349:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC_1.c **** *
 351:Generated_Source\PSoC6/ADC_1.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC_1.c **** *
 353:Generated_Source\PSoC6/ADC_1.c **** *
 354:Generated_Source\PSoC6/ADC_1.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC_1.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC_1.c **** *
 357:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC_1.c **** *  None.
 359:Generated_Source\PSoC6/ADC_1.c **** *
 360:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC_1.c **** {
 348              		.loc 1 362 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL20:
 353 0000 10B5     		push	{r4, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 4, -8
 356              		.cfi_offset 14, -4
 363:Generated_Source\PSoC6/ADC_1.c ****     uint32 chanCount = ADC_1_allConfigs[ADC_1_currentConfig].numChannels;
 357              		.loc 1 363 0
 358 0002 0B4B     		ldr	r3, .L25
 359 0004 1B68     		ldr	r3, [r3]
 360 0006 9A00     		lsls	r2, r3, #2
 361 0008 D318     		adds	r3, r2, r3
 362 000a 9A00     		lsls	r2, r3, #2
 363 000c 094B     		ldr	r3, .L25+4
 364 000e 9A18     		adds	r2, r3, r2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 81


 365 0010 5368     		ldr	r3, [r2, #4]
 366              	.LVL21:
 364:Generated_Source\PSoC6/ADC_1.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 367              		.loc 1 364 0
 368 0012 0124     		movs	r4, #1
 369 0014 9C40     		lsls	r4, r4, r3
 370 0016 013C     		subs	r4, r4, #1
 371 0018 0440     		ands	r4, r0
 372              	.LVL22:
 373              	.LBB49:
 374              	.LBB50:
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 375              		.loc 3 1501 0
 376 001a 074B     		ldr	r3, .L25+8
 377              	.LVL23:
 378 001c 9C42     		cmp	r4, r3
 379 001e 03D9     		bls	.L24
 380 0020 0649     		ldr	r1, .L25+12
 381 0022 0748     		ldr	r0, .L25+16
 382 0024 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 383              	.LVL24:
 384              	.L24:
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 385              		.loc 3 1503 0
 386 0028 064B     		ldr	r3, .L25+20
 387 002a 1C62     		str	r4, [r3, #32]
 388              	.LVL25:
 389              	.LBE50:
 390              	.LBE49:
 365:Generated_Source\PSoC6/ADC_1.c **** 
 366:Generated_Source\PSoC6/ADC_1.c ****     Cy_SAR_SetChanMask(ADC_1_SAR__HW, enableMask);
 367:Generated_Source\PSoC6/ADC_1.c **** }
 391              		.loc 1 367 0
 392              		@ sp needed
 393              	.LVL26:
 394 002c 10BD     		pop	{r4, pc}
 395              	.L26:
 396 002e C046     		.align	2
 397              	.L25:
 398 0030 00000000 		.word	.LANCHOR0
 399 0034 00000000 		.word	ADC_1_allConfigs
 400 0038 FFFF0000 		.word	65535
 401 003c DD050000 		.word	1501
 402 0040 00000000 		.word	.LC1
 403 0044 00001D41 		.word	1092419584
 404              		.cfi_endproc
 405              	.LFE195:
 406              		.size	ADC_1_SetChanMask, .-ADC_1_SetChanMask
 407              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 408              		.align	2
 409              		.global	ADC_1_IsEndConversion
 410              		.code	16
 411              		.thumb_func
 412              		.type	ADC_1_IsEndConversion, %function
 413              	ADC_1_IsEndConversion:
 414              	.LFB196:
 368:Generated_Source\PSoC6/ADC_1.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 82


 369:Generated_Source\PSoC6/ADC_1.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 371:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC_1.c **** *
 373:Generated_Source\PSoC6/ADC_1.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC_1.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC_1.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
 376:Generated_Source\PSoC6/ADC_1.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC_1.c **** *
 378:Generated_Source\PSoC6/ADC_1.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC_1.c **** *
 380:Generated_Source\PSoC6/ADC_1.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC_1.c **** * If the returned value is zero, the ADC_1 is still calculating the last result.
 382:Generated_Source\PSoC6/ADC_1.c **** *
 383:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC_1.c **** *
 385:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC_1.c **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC_1.c **** {
 415              		.loc 1 387 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              	.LVL27:
 420 0000 10B5     		push	{r4, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 424 0002 0100     		movs	r1, r0
 425              	.LVL28:
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 389:Generated_Source\PSoC6/ADC_1.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC_1.c **** 
 391:Generated_Source\PSoC6/ADC_1.c ****     result = Cy_SAR_IsEndConversion(ADC_1_SAR__HW, retMode);
 426              		.loc 1 391 0
 427 0004 0448     		ldr	r0, .L30
 428              	.LVL29:
 429 0006 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 430              	.LVL30:
 392:Generated_Source\PSoC6/ADC_1.c **** 
 393:Generated_Source\PSoC6/ADC_1.c ****     if (result == CY_SAR_SUCCESS)
 431              		.loc 1 393 0
 432 000a 0028     		cmp	r0, #0
 433 000c 01D0     		beq	.L29
 388:Generated_Source\PSoC6/ADC_1.c ****     uint32 endOfConversion = 0u;
 434              		.loc 1 388 0
 435 000e 0020     		movs	r0, #0
 436              	.LVL31:
 437 0010 00E0     		b	.L28
 438              	.LVL32:
 439              	.L29:
 394:Generated_Source\PSoC6/ADC_1.c ****     {
 395:Generated_Source\PSoC6/ADC_1.c ****         endOfConversion = 1u;
 440              		.loc 1 395 0
 441 0012 0120     		movs	r0, #1
 442              	.LVL33:
 443              	.L28:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 83


 396:Generated_Source\PSoC6/ADC_1.c ****     }
 397:Generated_Source\PSoC6/ADC_1.c **** 
 398:Generated_Source\PSoC6/ADC_1.c ****     return endOfConversion;
 399:Generated_Source\PSoC6/ADC_1.c **** }
 444              		.loc 1 399 0
 445              		@ sp needed
 446 0014 10BD     		pop	{r4, pc}
 447              	.L31:
 448 0016 C046     		.align	2
 449              	.L30:
 450 0018 00001D41 		.word	1092419584
 451              		.cfi_endproc
 452              	.LFE196:
 453              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 454              		.section	.text.ADC_1_Init,"ax",%progbits
 455              		.align	2
 456              		.global	ADC_1_Init
 457              		.code	16
 458              		.thumb_func
 459              		.type	ADC_1_Init, %function
 460              	ADC_1_Init:
 461              	.LFB197:
 400:Generated_Source\PSoC6/ADC_1.c **** 
 401:Generated_Source\PSoC6/ADC_1.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC_1.c **** * Function Name: ADC_1_Init
 403:Generated_Source\PSoC6/ADC_1.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC_1.c **** *
 405:Generated_Source\PSoC6/ADC_1.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC_1.c **** * customizer.
 407:Generated_Source\PSoC6/ADC_1.c **** *
 408:Generated_Source\PSoC6/ADC_1.c **** * \param None
 409:Generated_Source\PSoC6/ADC_1.c **** *
 410:Generated_Source\PSoC6/ADC_1.c **** * \return None
 411:Generated_Source\PSoC6/ADC_1.c **** *
 412:Generated_Source\PSoC6/ADC_1.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC_1.c **** *
 414:Generated_Source\PSoC6/ADC_1.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC_1.c **** void ADC_1_Init(void)
 416:Generated_Source\PSoC6/ADC_1.c **** {
 462              		.loc 1 416 0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466 0000 10B5     		push	{r4, lr}
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 470              	.LVL34:
 417:Generated_Source\PSoC6/ADC_1.c ****     uint32_t configNum = 0u;
 418:Generated_Source\PSoC6/ADC_1.c **** 
 419:Generated_Source\PSoC6/ADC_1.c ****     if(0u == ADC_1_initVar)
 471              		.loc 1 419 0
 472 0002 074B     		ldr	r3, .L34
 473 0004 1B79     		ldrb	r3, [r3, #4]
 474 0006 002B     		cmp	r3, #0
 475 0008 09D1     		bne	.L32
 420:Generated_Source\PSoC6/ADC_1.c ****     {
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 84


 421:Generated_Source\PSoC6/ADC_1.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 425:Generated_Source\PSoC6/ADC_1.c ****         #endif
 426:Generated_Source\PSoC6/ADC_1.c ****         #endif
 427:Generated_Source\PSoC6/ADC_1.c **** 
 428:Generated_Source\PSoC6/ADC_1.c ****         #ifdef ADC_1_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC_1.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC_1.c ****             (void)Cy_SysInt_Init(&ADC_1_IRQ_cfg, &ADC_1_ISR);
 431:Generated_Source\PSoC6/ADC_1.c ****         #endif
 432:Generated_Source\PSoC6/ADC_1.c ****         #endif
 433:Generated_Source\PSoC6/ADC_1.c **** 
 434:Generated_Source\PSoC6/ADC_1.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC_1.c ****         if(0u == ADC_1_selected)
 476              		.loc 1 435 0
 477 000a 054B     		ldr	r3, .L34
 478 000c 5B79     		ldrb	r3, [r3, #5]
 479 000e 002B     		cmp	r3, #0
 480 0010 05D1     		bne	.L32
 436:Generated_Source\PSoC6/ADC_1.c ****         {
 437:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_selected = 1u;
 481              		.loc 1 437 0
 482 0012 0122     		movs	r2, #1
 483 0014 024B     		ldr	r3, .L34
 484 0016 5A71     		strb	r2, [r3, #5]
 438:Generated_Source\PSoC6/ADC_1.c ****             configNum = 0uL;
 439:Generated_Source\PSoC6/ADC_1.c **** 
 440:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC_1.c ****             #endif
 444:Generated_Source\PSoC6/ADC_1.c **** 
 445:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_InitConfig(&ADC_1_allConfigs[configNum]);
 485              		.loc 1 445 0
 486 0018 0248     		ldr	r0, .L34+4
 487 001a FFF7FEFF 		bl	ADC_1_InitConfig
 488              	.LVL35:
 489              	.L32:
 446:Generated_Source\PSoC6/ADC_1.c **** 
 447:Generated_Source\PSoC6/ADC_1.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC_1.c ****             #if (ADC_1_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC_1.c ****                 ADC_1_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC_1.c ****             #endif
 451:Generated_Source\PSoC6/ADC_1.c ****         }
 452:Generated_Source\PSoC6/ADC_1.c ****     }
 453:Generated_Source\PSoC6/ADC_1.c **** }
 490              		.loc 1 453 0
 491              		@ sp needed
 492 001e 10BD     		pop	{r4, pc}
 493              	.L35:
 494              		.align	2
 495              	.L34:
 496 0020 00000000 		.word	.LANCHOR0
 497 0024 00000000 		.word	ADC_1_allConfigs
 498              		.cfi_endproc
 499              	.LFE197:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 85


 500              		.size	ADC_1_Init, .-ADC_1_Init
 501              		.section	.text.ADC_1_Start,"ax",%progbits
 502              		.align	2
 503              		.global	ADC_1_Start
 504              		.code	16
 505              		.thumb_func
 506              		.type	ADC_1_Start, %function
 507              	ADC_1_Start:
 508              	.LFB186:
  66:Generated_Source\PSoC6/ADC_1.c ****     if (ADC_1_INIT_VAR_INIT_FLAG != (ADC_1_INIT_VAR_INIT_FLAG & ADC_1_initVar))
 509              		.loc 1 66 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513 0000 10B5     		push	{r4, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
  67:Generated_Source\PSoC6/ADC_1.c ****     {
 517              		.loc 1 67 0
 518 0002 074B     		ldr	r3, .L38
 519 0004 1B79     		ldrb	r3, [r3, #4]
 520 0006 DB07     		lsls	r3, r3, #31
 521 0008 06D4     		bmi	.L37
  69:Generated_Source\PSoC6/ADC_1.c ****         ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 522              		.loc 1 69 0
 523 000a FFF7FEFF 		bl	ADC_1_Init
 524              	.LVL36:
  70:Generated_Source\PSoC6/ADC_1.c ****     }
 525              		.loc 1 70 0
 526 000e 044A     		ldr	r2, .L38
 527 0010 1179     		ldrb	r1, [r2, #4]
 528 0012 0123     		movs	r3, #1
 529 0014 0B43     		orrs	r3, r1
 530 0016 1371     		strb	r3, [r2, #4]
 531              	.L37:
 532              	.LBB51:
 533              	.LBB52:
 534              		.file 4 "Generated_Source\\PSoC6\\ADC_1.h"
   1:Generated_Source\PSoC6/ADC_1.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_1.h **** * \file     ADC_1.h
   3:Generated_Source\PSoC6/ADC_1.h **** * \version  3.10
   4:Generated_Source\PSoC6/ADC_1.h **** *
   5:Generated_Source\PSoC6/ADC_1.h **** * \brief
   6:Generated_Source\PSoC6/ADC_1.h **** * Provides the source code to the API for the ADC_1 Component.
   7:Generated_Source\PSoC6/ADC_1.h **** *
   8:Generated_Source\PSoC6/ADC_1.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_1.h **** * \copyright
  10:Generated_Source\PSoC6/ADC_1.h **** * (c) 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_1.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_1.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_1.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_1.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_1.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_1.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_1.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_1.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 86


  19:Generated_Source\PSoC6/ADC_1.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_1.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_1.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_1.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_1.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_1.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_1.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_1.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_1.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_1.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_1.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_1.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_1.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_1.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_1.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_1.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_1.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_1.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_1.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_1.h **** #if !defined(CY_ADC_1_H)
  40:Generated_Source\PSoC6/ADC_1.h **** #define CY_ADC_1_H
  41:Generated_Source\PSoC6/ADC_1.h **** 
  42:Generated_Source\PSoC6/ADC_1.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC_1.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC_1.h **** 
  45:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC_1.h **** #endif
  49:Generated_Source\PSoC6/ADC_1.h **** 
  50:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC_1.h **** #include "ADC_1_intSarClock.h"
  53:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC_1.h **** 
  55:Generated_Source\PSoC6/ADC_1.h **** /**
  56:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC_1.h **** *
  58:Generated_Source\PSoC6/ADC_1.h **** */
  59:Generated_Source\PSoC6/ADC_1.h **** typedef struct
  60:Generated_Source\PSoC6/ADC_1.h **** {
  61:Generated_Source\PSoC6/ADC_1.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC_1.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC_1.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC_1.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC_1.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC_1.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC_1.h ****                                             */
  68:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC_1.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC_1.h **** 
  72:Generated_Source\PSoC6/ADC_1.h **** } ADC_1_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC_1.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC_1.h **** 
  75:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 87


  76:Generated_Source\PSoC6/ADC_1.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_InitConfig(const ADC_1_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Init(void);
  81:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void);
  82:Generated_Source\PSoC6/ADC_1.h **** 
  83:Generated_Source\PSoC6/ADC_1.h **** /**
  84:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC_1.h **** * @{
  86:Generated_Source\PSoC6/ADC_1.h **** */
  87:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_Start(void);
  88:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Stop(void);
  90:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_StartConvert(void);
  91:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_StopConvert(void);
  92:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC_1.h **** uint32_t ADC_1_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE cy_en_sar_status_t ADC_1_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE float32_t ADC_1_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int16_t ADC_1_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE int32_t ADC_1_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC_1.h **** 
 107:Generated_Source\PSoC6/ADC_1.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC_1.h **** 
 109:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC_1.h **** 
 111:Generated_Source\PSoC6/ADC_1.h **** /**
 112:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC_1.h **** * @{
 114:Generated_Source\PSoC6/ADC_1.h **** */
 115:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Sleep(void);
 116:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Wakeup(void);
 117:Generated_Source\PSoC6/ADC_1.h **** 
 118:Generated_Source\PSoC6/ADC_1.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC_1.h **** 
 120:Generated_Source\PSoC6/ADC_1.h **** /**
 121:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC_1.h **** * @{
 123:Generated_Source\PSoC6/ADC_1.h **** */
 124:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_ISR(void);
 125:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC_1.h **** void ADC_1_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC_1.h **** 
 128:Generated_Source\PSoC6/ADC_1.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC_1.h **** 
 130:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC_1.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC_1.h **** The parameters that are set in the customizer are redefined as constants here.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 88


 133:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC_1.h **** 
 135:Generated_Source\PSoC6/ADC_1.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC_1.h **** 
 138:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC_1.h **** 
 142:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_RATE             (100000)
 143:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_COUNT           (1u)
 145:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_SEL_MASK           (0xc0u)
 146:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_NOMINAL_CLOCK_FREQ      (16666666u)
 147:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CHANNEL_EN              (0x1u)
 148:Generated_Source\PSoC6/ADC_1.h **** 
 149:Generated_Source\PSoC6/ADC_1.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLES_AVERAGED        (1uL)
 153:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SINGLE_PRESENT          (1)
 157:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_MV_VALUE           (1200)
 158:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME0          (153uL)
 159:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_FREERUNNING             (1u)
 163:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_PWR                (3uL)
 169:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC_1.h **** 
 172:Generated_Source\PSoC6/ADC_1.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC_1.h **** #if (ADC_1_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG0_NOMINAL_CLOCK_FR
 175:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC_1.h **** 
 177:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC_1.h **** 
 181:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC_1.h **** 
 185:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_SEL_MASK           (u)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 89


 190:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC_1.h **** 
 193:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC_1.h **** 
 216:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG1_NOMINAL_CLOC
 219:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC_1.h **** #endif /* #if(ADC_1_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC_1.h **** 
 222:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC_1.h **** 
 226:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC_1.h **** 
 230:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC_1.h **** 
 238:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_MV_VALUE           ()
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 90


 247:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC_1.h **** 
 261:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG2_NOMINAL_CLOC
 264:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC_1.h **** 
 267:Generated_Source\PSoC6/ADC_1.h **** 
 268:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC_1.h **** 
 272:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC_1.h **** 
 283:Generated_Source\PSoC6/ADC_1.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR                (uL)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 91


 304:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC_1.h **** 
 306:Generated_Source\PSoC6/ADC_1.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC_1.h ****     #if (ADC_1_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_1_CFG3_NOMINAL_CLOC
 309:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC_1.h **** #endif /* (ADC_1_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC_1.h **** 
 312:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC_1.h **** 
 316:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC_1.h **** 
 323:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC_1.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC_1.h **** */
 326:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_TOTAL_CHANNELS_NUM           (1u)
 327:Generated_Source\PSoC6/ADC_1.h **** 
 328:Generated_Source\PSoC6/ADC_1.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC_1.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC_1.h **** /**
 332:Generated_Source\PSoC6/ADC_1.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC_1.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC_1.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC_1.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC_1.h **** * @{
 337:Generated_Source\PSoC6/ADC_1.h **** */
 338:Generated_Source\PSoC6/ADC_1.h **** 
 339:Generated_Source\PSoC6/ADC_1.h **** /** ADC_1_initVar
 340:Generated_Source\PSoC6/ADC_1.h **** * The ADC_1_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC_1.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC_1.h **** * set to 1 the first time ADC_1_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC_1.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC_1.h **** * ADC_1_Start() routine.
 345:Generated_Source\PSoC6/ADC_1.h **** *
 346:Generated_Source\PSoC6/ADC_1.h **** * If reinitialization of the component is required, then the ADC_1_Init() function
 347:Generated_Source\PSoC6/ADC_1.h **** * can be called before the ADC_1_Start() or ADC_1_Enable()
 348:Generated_Source\PSoC6/ADC_1.h **** * functions.
 349:Generated_Source\PSoC6/ADC_1.h **** */
 350:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_initVar;
 351:Generated_Source\PSoC6/ADC_1.h **** extern uint8_t ADC_1_selected;
 352:Generated_Source\PSoC6/ADC_1.h **** extern uint32_t ADC_1_currentConfig;
 353:Generated_Source\PSoC6/ADC_1.h **** 
 354:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC_1.h **** 
 356:Generated_Source\PSoC6/ADC_1.h **** extern const ADC_1_CONFIG_STRUCT ADC_1_allConfigs[ADC_1_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC_1.h **** 
 358:Generated_Source\PSoC6/ADC_1.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC_1.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC_1.h ****  * structure before calling Cy_SysPm_DeepSleep.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 92


 361:Generated_Source\PSoC6/ADC_1.h **** */
 362:Generated_Source\PSoC6/ADC_1.h **** extern cy_stc_syspm_callback_t ADC_1_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC_1.h **** 
 364:Generated_Source\PSoC6/ADC_1.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC_1.h **** 
 366:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC_1.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ((ADC_1_TOTAL_CHANNELS_NUM == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC_1.h **** #else
 377:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC_1.h **** 
 380:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC_1.h **** 
 389:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC_1.h ****         ((ADC_1_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC_1.h ****         | (ADC_1_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC_1.h **** 
 395:Generated_Source\PSoC6/ADC_1.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC_1.h **** 
 400:Generated_Source\PSoC6/ADC_1.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING)
 402:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC_1.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC_1.h **** #endif /* End ADC_1_CFG0_FREERUNNING == ADC_1_FREERUNNING */
 406:Generated_Source\PSoC6/ADC_1.h **** 
 407:Generated_Source\PSoC6/ADC_1.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC_1.h **** #elif(ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC_1.h **** 
 414:Generated_Source\PSoC6/ADC_1.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC_1.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC_1.h ****     #if((ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     0u
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 93


 418:Generated_Source\PSoC6/ADC_1.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG0_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC_1.h ****     #endif /* (ADC_1_CFG0_CHANNEL_COUNT == 1u) && (ADC_1_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC_1.h **** #elif (ADC_1_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         ADC_1_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC_1.h **** #else
 425:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC_1.h **** 
 428:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG0 << SAR_CTRL_N
 430:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC_1.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC_1.h **** 
 436:Generated_Source\PSoC6/ADC_1.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC_1.h **** #else
 440:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC_1.h **** 
 443:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC_1.h **** 
 445:Generated_Source\PSoC6/ADC_1.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC_1.h **** 
 450:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC_1.h **** 
 454:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC_1.h **** 
 458:Generated_Source\PSoC6/ADC_1.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC_1.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC_1.h **** 
 463:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC_1.h **** 
 466:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC_1.h **** 
 470:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC_1.h **** 
 474:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_COMP_DLY_INIT  \
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 94


 475:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC_1.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC_1.h **** 
 478:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC_1.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC_1.h **** 
 489:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC_1.h ****         | ADC_1_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC_1.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC_1.h **** )
 501:Generated_Source\PSoC6/ADC_1.h **** 
 502:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC_1.h ****         | (uint32)((uint32)ADC_1_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC_1.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC_1.h **** 
 507:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC_1.h **** 
 509:Generated_Source\PSoC6/ADC_1.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC_1.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC_1.h **** */
 512:Generated_Source\PSoC6/ADC_1.h **** #define ADC_1_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC_1.h ****         (ADC_1_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC_1.h **** 
 515:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC_1.h **** 
 519:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC_1.h **** 
 529:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 95


 532:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC_1.h **** 
 535:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC_1.h **** 
 540:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING)
 542:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG1_FREERUNNING == ADC_1_FREERUNNING */
 546:Generated_Source\PSoC6/ADC_1.h **** 
 547:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC_1.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         ADC_1_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC_1.h ****     #else
 558:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG1_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC_1.h **** 
 561:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG1 << SAR_CTRL_N
 562:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC_1.h **** 
 564:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC_1.h **** 
 567:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC_1.h **** 
 569:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC_1.h **** 
 574:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC_1.h **** 
 578:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC_1.h **** 
 582:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC_1.h **** 
 587:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_UAB_SCAN_MODE_INIT    (0u)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 96


 589:Generated_Source\PSoC6/ADC_1.h **** 
 590:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC_1.h **** 
 594:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC_1.h **** 
 598:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC_1.h **** 
 602:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC_1.h **** 
 613:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC_1.h ****     )
 625:Generated_Source\PSoC6/ADC_1.h **** 
 626:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC_1.h **** 
 631:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC_1.h **** 
 633:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC_1.h ****     */
 636:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC_1.h **** 
 640:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC_1.h **** 
 644:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 2 calculated defines                                   */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 97


 646:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC_1.h **** 
 654:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC_1.h **** 
 660:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC_1.h **** 
 665:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING)
 667:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG2_FREERUNNING == ADC_1_FREERUNNING */
 671:Generated_Source\PSoC6/ADC_1.h **** 
 672:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         ADC_1_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC_1.h ****     #else
 683:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG2_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC_1.h **** 
 686:Generated_Source\PSoC6/ADC_1.h ****    #define ADC_1_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG2 << SAR_CTRL_NE
 687:Generated_Source\PSoC6/ADC_1.h **** 
 688:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC_1.h **** 
 690:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC_1.h **** 
 693:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC_1.h **** 
 695:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC_1.h **** 
 700:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 98


 703:Generated_Source\PSoC6/ADC_1.h **** 
 704:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC_1.h **** 
 708:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC_1.h **** 
 713:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC_1.h **** 
 716:Generated_Source\PSoC6/ADC_1.h **** 
 717:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC_1.h **** 
 721:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC_1.h **** 
 725:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC_1.h **** 
 729:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC_1.h **** 
 740:Generated_Source\PSoC6/ADC_1.h **** 
 741:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC_1.h ****     )
 753:Generated_Source\PSoC6/ADC_1.h **** 
 754:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC_1.h **** 
 759:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG2_RANGE_COND
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 99


 760:Generated_Source\PSoC6/ADC_1.h **** 
 761:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC_1.h ****     */
 764:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC_1.h **** 
 768:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC_1.h **** 
 772:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC_1.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC_1.h **** #if(ADC_1_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC_1.h **** 
 782:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC_1.h ****             ((ADC_1_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC_1.h ****             | (ADC_1_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC_1.h **** 
 788:Generated_Source\PSoC6/ADC_1.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC_1.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC_1.h **** 
 793:Generated_Source\PSoC6/ADC_1.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING)
 795:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC_1.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC_1.h ****     #endif /* End ADC_1_CFG3_FREERUNNING == ADC_1_FREERUNNING */
 799:Generated_Source\PSoC6/ADC_1.h **** 
 800:Generated_Source\PSoC6/ADC_1.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC_1.h ****     #if(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC_1.h ****             ((uint32)(ADC_1_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC_1.h ****     #elif(ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT     (ADC_1_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC_1.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC_1.h ****     #elif (ADC_1_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         ADC_1_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC_1.h ****     #else
 811:Generated_Source\PSoC6/ADC_1.h ****         #define ADC_1_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC_1.h ****     #endif /* ADC_1_CFG3_VNEG_INPUT_SEL == ADC_1_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC_1.h **** 
 814:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_1_SARMUX__VNEG3 << SAR_CTRL_N
 815:Generated_Source\PSoC6/ADC_1.h **** 
 816:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SWITCH_CONF_INIT          0u
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 100


 817:Generated_Source\PSoC6/ADC_1.h **** 
 818:Generated_Source\PSoC6/ADC_1.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC_1.h **** 
 821:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_POWER_INIT  (ADC_1_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC_1.h **** 
 823:Generated_Source\PSoC6/ADC_1.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC_1.h **** 
 828:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC_1.h **** 
 832:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC_1.h **** 
 836:Generated_Source\PSoC6/ADC_1.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC_1.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC_1.h **** 
 841:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC_1.h **** 
 844:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC_1.h **** 
 848:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC_1.h **** 
 852:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC_1.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC_1.h **** 
 856:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC_1.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC_1.h **** 
 867:Generated_Source\PSoC6/ADC_1.h **** 
 868:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_LEVEL_INIT \
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 101


 874:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC_1.h ****             | ADC_1_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC_1.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC_1.h ****     )
 880:Generated_Source\PSoC6/ADC_1.h **** 
 881:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC_1.h ****             | (uint32)((uint32)ADC_1_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC_1.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC_1.h **** 
 886:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_1_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC_1.h **** 
 888:Generated_Source\PSoC6/ADC_1.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC_1.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC_1.h ****     */
 891:Generated_Source\PSoC6/ADC_1.h ****     #define ADC_1_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC_1.h ****             (ADC_1_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC_1.h **** 
 894:Generated_Source\PSoC6/ADC_1.h **** #endif /* ADC_1_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC_1.h **** 
 896:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC_1.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC_1.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC_1.h **** 
 900:Generated_Source\PSoC6/ADC_1.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC_1.h **** * Function Name: ADC_1_Enable
 902:Generated_Source\PSoC6/ADC_1.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC_1.h **** *
 904:Generated_Source\PSoC6/ADC_1.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC_1.h **** *
 906:Generated_Source\PSoC6/ADC_1.h **** * \param None
 907:Generated_Source\PSoC6/ADC_1.h **** *
 908:Generated_Source\PSoC6/ADC_1.h **** * \return None
 909:Generated_Source\PSoC6/ADC_1.h **** *
 910:Generated_Source\PSoC6/ADC_1.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC_1.h **** *  None
 912:Generated_Source\PSoC6/ADC_1.h **** *
 913:Generated_Source\PSoC6/ADC_1.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC_1.h **** __STATIC_INLINE void ADC_1_Enable(void)
 915:Generated_Source\PSoC6/ADC_1.h **** {
 916:Generated_Source\PSoC6/ADC_1.h ****     Cy_SAR_Enable(ADC_1_SAR__HW);
 535              		.loc 4 916 0
 536 0018 0248     		ldr	r0, .L38+4
 537 001a FFF7FEFF 		bl	Cy_SAR_Enable
 538              	.LVL37:
 539              	.LBE52:
 540              	.LBE51:
  76:Generated_Source\PSoC6/ADC_1.c **** 
 541              		.loc 1 76 0
 542              		@ sp needed
 543 001e 10BD     		pop	{r4, pc}
 544              	.L39:
 545              		.align	2
 546              	.L38:
 547 0020 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 102


 548 0024 00001D41 		.word	1092419584
 549              		.cfi_endproc
 550              	.LFE186:
 551              		.size	ADC_1_Start, .-ADC_1_Start
 552              		.section	.text.ADC_1_StartEx,"ax",%progbits
 553              		.align	2
 554              		.global	ADC_1_StartEx
 555              		.code	16
 556              		.thumb_func
 557              		.type	ADC_1_StartEx, %function
 558              	ADC_1_StartEx:
 559              	.LFB187:
  95:Generated_Source\PSoC6/ADC_1.c ****     ADC_1_Start();
 560              		.loc 1 95 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              	.LVL38:
 565 0000 10B5     		push	{r4, lr}
 566              		.cfi_def_cfa_offset 8
 567              		.cfi_offset 4, -8
 568              		.cfi_offset 14, -4
  96:Generated_Source\PSoC6/ADC_1.c **** 
 569              		.loc 1 96 0
 570 0002 FFF7FEFF 		bl	ADC_1_Start
 571              	.LVL39:
 113:Generated_Source\PSoC6/ADC_1.c **** 
 572              		.loc 1 113 0
 573              		@ sp needed
 574 0006 10BD     		pop	{r4, pc}
 575              		.cfi_endproc
 576              	.LFE187:
 577              		.size	ADC_1_StartEx, .-ADC_1_StartEx
 578              		.section	.text.ADC_1_SelectConfig,"ax",%progbits
 579              		.align	2
 580              		.global	ADC_1_SelectConfig
 581              		.code	16
 582              		.thumb_func
 583              		.type	ADC_1_SelectConfig, %function
 584              	ADC_1_SelectConfig:
 585              	.LFB189:
 171:Generated_Source\PSoC6/ADC_1.c ****     /* Check whether the configuration number is valid or not */
 586              		.loc 1 171 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL40:
 591 0000 70B5     		push	{r4, r5, r6, lr}
 592              		.cfi_def_cfa_offset 16
 593              		.cfi_offset 4, -16
 594              		.cfi_offset 5, -12
 595              		.cfi_offset 6, -8
 596              		.cfi_offset 14, -4
 597 0002 0400     		movs	r4, r0
 598 0004 0D00     		movs	r5, r1
 173:Generated_Source\PSoC6/ADC_1.c ****     {
 599              		.loc 1 173 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 103


 600 0006 0028     		cmp	r0, #0
 601 0008 20D1     		bne	.L41
 602              	.LVL41:
 603              	.LBB53:
 604              	.LBB54:
 605              	.LBB55:
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 606              		.loc 3 1440 0
 607 000a 114A     		ldr	r2, .L44
 608 000c 1368     		ldr	r3, [r2]
 609 000e 5B00     		lsls	r3, r3, #1
 610 0010 5B08     		lsrs	r3, r3, #1
 611 0012 1360     		str	r3, [r2]
 612              	.LVL42:
 613              	.LBE55:
 614              	.LBE54:
 615              	.LBE53:
 177:Generated_Source\PSoC6/ADC_1.c **** 
 616              		.loc 1 177 0
 617 0014 0F4B     		ldr	r3, .L44+4
 618 0016 0122     		movs	r2, #1
 619 0018 5A71     		strb	r2, [r3, #5]
 179:Generated_Source\PSoC6/ADC_1.c ****         {
 620              		.loc 1 179 0
 621 001a 1B79     		ldrb	r3, [r3, #4]
 622 001c 002B     		cmp	r3, #0
 623 001e 06D1     		bne	.L43
 181:Generated_Source\PSoC6/ADC_1.c ****             ADC_1_initVar |= ADC_1_INIT_VAR_INIT_FLAG;
 624              		.loc 1 181 0
 625 0020 FFF7FEFF 		bl	ADC_1_Init
 626              	.LVL43:
 182:Generated_Source\PSoC6/ADC_1.c ****         }
 627              		.loc 1 182 0
 628 0024 0B4A     		ldr	r2, .L44+4
 629 0026 1179     		ldrb	r1, [r2, #4]
 630 0028 0123     		movs	r3, #1
 631 002a 0B43     		orrs	r3, r1
 632 002c 1371     		strb	r3, [r2, #4]
 633              	.L43:
 188:Generated_Source\PSoC6/ADC_1.c **** 
 634              		.loc 1 188 0
 635 002e A300     		lsls	r3, r4, #2
 636 0030 1B19     		adds	r3, r3, r4
 637 0032 9800     		lsls	r0, r3, #2
 638 0034 084B     		ldr	r3, .L44+8
 639 0036 C018     		adds	r0, r0, r3
 640 0038 FFF7FEFF 		bl	ADC_1_InitConfig
 641              	.LVL44:
 194:Generated_Source\PSoC6/ADC_1.c **** 
 642              		.loc 1 194 0
 643 003c 054B     		ldr	r3, .L44+4
 644 003e 1C60     		str	r4, [r3]
 196:Generated_Source\PSoC6/ADC_1.c ****         {
 645              		.loc 1 196 0
 646 0040 012D     		cmp	r5, #1
 647 0042 03D1     		bne	.L41
 199:Generated_Source\PSoC6/ADC_1.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 104


 648              		.loc 1 199 0
 649 0044 FFF7FEFF 		bl	ADC_1_Start
 650              	.LVL45:
 202:Generated_Source\PSoC6/ADC_1.c ****         }
 651              		.loc 1 202 0
 652 0048 FFF7FEFF 		bl	ADC_1_StartConvert
 653              	.LVL46:
 654              	.L41:
 206:Generated_Source\PSoC6/ADC_1.c **** 
 655              		.loc 1 206 0
 656              		@ sp needed
 657              	.LVL47:
 658              	.LVL48:
 659 004c 70BD     		pop	{r4, r5, r6, pc}
 660              	.L45:
 661 004e C046     		.align	2
 662              	.L44:
 663 0050 00001D41 		.word	1092419584
 664 0054 00000000 		.word	.LANCHOR0
 665 0058 00000000 		.word	ADC_1_allConfigs
 666              		.cfi_endproc
 667              	.LFE189:
 668              		.size	ADC_1_SelectConfig, .-ADC_1_SelectConfig
 669              		.global	ADC_1_currentConfig
 670              		.global	ADC_1_selected
 671              		.global	ADC_1_initVar
 672              		.section	.rodata.str1.4,"aMS",%progbits,1
 673              		.align	2
 674              	.LC1:
 675 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 675      72617465 
 675      645F536F 
 675      75726365 
 675      5C50536F 
 676 0030 722F6379 		.ascii	"r/cy_sar.h\000"
 676      5F736172 
 676      2E6800
 677              		.bss
 678              		.align	2
 679              		.set	.LANCHOR0,. + 0
 680              		.type	ADC_1_currentConfig, %object
 681              		.size	ADC_1_currentConfig, 4
 682              	ADC_1_currentConfig:
 683 0000 00000000 		.space	4
 684              		.type	ADC_1_initVar, %object
 685              		.size	ADC_1_initVar, 1
 686              	ADC_1_initVar:
 687 0004 00       		.space	1
 688              		.type	ADC_1_selected, %object
 689              		.size	ADC_1_selected, 1
 690              	ADC_1_selected:
 691 0005 00       		.space	1
 692              		.text
 693              	.Letext0:
 694              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 695              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 696              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_peri.h"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 105


 697              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_sar.h"
 698              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 699              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 700              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 701              		.file 12 "Generated_Source\\PSoC6\\ADC_1_intSarClock.h"
 702              		.section	.debug_info,"",%progbits
 703              	.Ldebug_info0:
 704 0000 5C150000 		.4byte	0x155c
 705 0004 0400     		.2byte	0x4
 706 0006 00000000 		.4byte	.Ldebug_abbrev0
 707 000a 04       		.byte	0x4
 708 000b 01       		.uleb128 0x1
 709 000c E4080000 		.4byte	.LASF294
 710 0010 0C       		.byte	0xc
 711 0011 51010000 		.4byte	.LASF295
 712 0015 3F0A0000 		.4byte	.LASF296
 713 0019 00000000 		.4byte	.Ldebug_ranges0+0
 714 001d 00000000 		.4byte	0
 715 0021 00000000 		.4byte	.Ldebug_line0
 716 0025 02       		.uleb128 0x2
 717 0026 02       		.byte	0x2
 718 0027 05       		.byte	0x5
 719 0028 9F020000 		.4byte	.LASF0
 720 002c 02       		.uleb128 0x2
 721 002d 01       		.byte	0x1
 722 002e 08       		.byte	0x8
 723 002f 030C0000 		.4byte	.LASF1
 724 0033 02       		.uleb128 0x2
 725 0034 01       		.byte	0x1
 726 0035 06       		.byte	0x6
 727 0036 4A100000 		.4byte	.LASF2
 728 003a 03       		.uleb128 0x3
 729 003b E10D0000 		.4byte	.LASF3
 730 003f 05       		.byte	0x5
 731 0040 1D       		.byte	0x1d
 732 0041 2C000000 		.4byte	0x2c
 733 0045 03       		.uleb128 0x3
 734 0046 98090000 		.4byte	.LASF4
 735 004a 05       		.byte	0x5
 736 004b 29       		.byte	0x29
 737 004c 25000000 		.4byte	0x25
 738 0050 03       		.uleb128 0x3
 739 0051 F1040000 		.4byte	.LASF5
 740 0055 05       		.byte	0x5
 741 0056 2B       		.byte	0x2b
 742 0057 5B000000 		.4byte	0x5b
 743 005b 02       		.uleb128 0x2
 744 005c 02       		.byte	0x2
 745 005d 07       		.byte	0x7
 746 005e 400B0000 		.4byte	.LASF6
 747 0062 02       		.uleb128 0x2
 748 0063 04       		.byte	0x4
 749 0064 05       		.byte	0x5
 750 0065 040D0000 		.4byte	.LASF7
 751 0069 03       		.uleb128 0x3
 752 006a 0A0F0000 		.4byte	.LASF8
 753 006e 05       		.byte	0x5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 106


 754 006f 41       		.byte	0x41
 755 0070 74000000 		.4byte	0x74
 756 0074 02       		.uleb128 0x2
 757 0075 04       		.byte	0x4
 758 0076 07       		.byte	0x7
 759 0077 6C0E0000 		.4byte	.LASF9
 760 007b 02       		.uleb128 0x2
 761 007c 08       		.byte	0x8
 762 007d 05       		.byte	0x5
 763 007e 59080000 		.4byte	.LASF10
 764 0082 02       		.uleb128 0x2
 765 0083 08       		.byte	0x8
 766 0084 07       		.byte	0x7
 767 0085 81040000 		.4byte	.LASF11
 768 0089 04       		.uleb128 0x4
 769 008a 04       		.byte	0x4
 770 008b 05       		.byte	0x5
 771 008c 696E7400 		.ascii	"int\000"
 772 0090 02       		.uleb128 0x2
 773 0091 04       		.byte	0x4
 774 0092 07       		.byte	0x7
 775 0093 82010000 		.4byte	.LASF12
 776 0097 03       		.uleb128 0x3
 777 0098 E4070000 		.4byte	.LASF13
 778 009c 06       		.byte	0x6
 779 009d 18       		.byte	0x18
 780 009e 3A000000 		.4byte	0x3a
 781 00a2 03       		.uleb128 0x3
 782 00a3 5F040000 		.4byte	.LASF14
 783 00a7 06       		.byte	0x6
 784 00a8 20       		.byte	0x20
 785 00a9 45000000 		.4byte	0x45
 786 00ad 03       		.uleb128 0x3
 787 00ae 5F0B0000 		.4byte	.LASF15
 788 00b2 06       		.byte	0x6
 789 00b3 24       		.byte	0x24
 790 00b4 50000000 		.4byte	0x50
 791 00b8 03       		.uleb128 0x3
 792 00b9 F4030000 		.4byte	.LASF16
 793 00bd 06       		.byte	0x6
 794 00be 30       		.byte	0x30
 795 00bf 69000000 		.4byte	0x69
 796 00c3 02       		.uleb128 0x2
 797 00c4 04       		.byte	0x4
 798 00c5 07       		.byte	0x7
 799 00c6 360C0000 		.4byte	.LASF17
 800 00ca 05       		.uleb128 0x5
 801 00cb B8000000 		.4byte	0xb8
 802 00cf 06       		.uleb128 0x6
 803 00d0 CA000000 		.4byte	0xca
 804 00d4 07       		.uleb128 0x7
 805 00d5 CF000000 		.4byte	0xcf
 806 00d9 E4000000 		.4byte	0xe4
 807 00dd 08       		.uleb128 0x8
 808 00de C3000000 		.4byte	0xc3
 809 00e2 01       		.byte	0x1
 810 00e3 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 107


 811 00e4 07       		.uleb128 0x7
 812 00e5 CA000000 		.4byte	0xca
 813 00e9 F4000000 		.4byte	0xf4
 814 00ed 08       		.uleb128 0x8
 815 00ee C3000000 		.4byte	0xc3
 816 00f2 7F       		.byte	0x7f
 817 00f3 00       		.byte	0
 818 00f4 07       		.uleb128 0x7
 819 00f5 CA000000 		.4byte	0xca
 820 00f9 04010000 		.4byte	0x104
 821 00fd 08       		.uleb128 0x8
 822 00fe C3000000 		.4byte	0xc3
 823 0102 0F       		.byte	0xf
 824 0103 00       		.byte	0
 825 0104 07       		.uleb128 0x7
 826 0105 CF000000 		.4byte	0xcf
 827 0109 14010000 		.4byte	0x114
 828 010d 08       		.uleb128 0x8
 829 010e C3000000 		.4byte	0xc3
 830 0112 06       		.byte	0x6
 831 0113 00       		.byte	0
 832 0114 09       		.uleb128 0x9
 833 0115 40       		.byte	0x40
 834 0116 07       		.byte	0x7
 835 0117 27       		.byte	0x27
 836 0118 59010000 		.4byte	0x159
 837 011c 0A       		.uleb128 0xa
 838 011d AD060000 		.4byte	.LASF18
 839 0121 07       		.byte	0x7
 840 0122 28       		.byte	0x28
 841 0123 CA000000 		.4byte	0xca
 842 0127 00       		.byte	0
 843 0128 0A       		.uleb128 0xa
 844 0129 27000000 		.4byte	.LASF19
 845 012d 07       		.byte	0x7
 846 012e 29       		.byte	0x29
 847 012f 5E010000 		.4byte	0x15e
 848 0133 04       		.byte	0x4
 849 0134 0A       		.uleb128 0xa
 850 0135 4D040000 		.4byte	.LASF20
 851 0139 07       		.byte	0x7
 852 013a 2A       		.byte	0x2a
 853 013b CA000000 		.4byte	0xca
 854 013f 20       		.byte	0x20
 855 0140 0A       		.uleb128 0xa
 856 0141 9F110000 		.4byte	.LASF21
 857 0145 07       		.byte	0x7
 858 0146 2B       		.byte	0x2b
 859 0147 CA000000 		.4byte	0xca
 860 014b 24       		.byte	0x24
 861 014c 0A       		.uleb128 0xa
 862 014d 0A110000 		.4byte	.LASF22
 863 0151 07       		.byte	0x7
 864 0152 2C       		.byte	0x2c
 865 0153 78010000 		.4byte	0x178
 866 0157 28       		.byte	0x28
 867 0158 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 108


 868 0159 05       		.uleb128 0x5
 869 015a 04010000 		.4byte	0x104
 870 015e 06       		.uleb128 0x6
 871 015f 59010000 		.4byte	0x159
 872 0163 07       		.uleb128 0x7
 873 0164 CF000000 		.4byte	0xcf
 874 0168 73010000 		.4byte	0x173
 875 016c 08       		.uleb128 0x8
 876 016d C3000000 		.4byte	0xc3
 877 0171 05       		.byte	0x5
 878 0172 00       		.byte	0
 879 0173 05       		.uleb128 0x5
 880 0174 63010000 		.4byte	0x163
 881 0178 06       		.uleb128 0x6
 882 0179 73010000 		.4byte	0x173
 883 017d 03       		.uleb128 0x3
 884 017e 2A110000 		.4byte	.LASF23
 885 0182 07       		.byte	0x7
 886 0183 2D       		.byte	0x2d
 887 0184 14010000 		.4byte	0x114
 888 0188 0B       		.uleb128 0xb
 889 0189 0002     		.2byte	0x200
 890 018b 07       		.byte	0x7
 891 018c 32       		.byte	0x32
 892 018d 9E010000 		.4byte	0x19e
 893 0191 0A       		.uleb128 0xa
 894 0192 21070000 		.4byte	.LASF24
 895 0196 07       		.byte	0x7
 896 0197 33       		.byte	0x33
 897 0198 9E010000 		.4byte	0x19e
 898 019c 00       		.byte	0
 899 019d 00       		.byte	0
 900 019e 05       		.uleb128 0x5
 901 019f E4000000 		.4byte	0xe4
 902 01a3 03       		.uleb128 0x3
 903 01a4 14000000 		.4byte	.LASF25
 904 01a8 07       		.byte	0x7
 905 01a9 34       		.byte	0x34
 906 01aa 88010000 		.4byte	0x188
 907 01ae 09       		.uleb128 0x9
 908 01af 40       		.byte	0x40
 909 01b0 07       		.byte	0x7
 910 01b1 39       		.byte	0x39
 911 01b2 FF010000 		.4byte	0x1ff
 912 01b6 0A       		.uleb128 0xa
 913 01b7 C3100000 		.4byte	.LASF26
 914 01bb 07       		.byte	0x7
 915 01bc 3A       		.byte	0x3a
 916 01bd CA000000 		.4byte	0xca
 917 01c1 00       		.byte	0
 918 01c2 0A       		.uleb128 0xa
 919 01c3 00110000 		.4byte	.LASF27
 920 01c7 07       		.byte	0x7
 921 01c8 3B       		.byte	0x3b
 922 01c9 CA000000 		.4byte	0xca
 923 01cd 04       		.byte	0x4
 924 01ce 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 109


 925 01cf 27000000 		.4byte	.LASF19
 926 01d3 07       		.byte	0x7
 927 01d4 3C       		.byte	0x3c
 928 01d5 04020000 		.4byte	0x204
 929 01d9 08       		.byte	0x8
 930 01da 0A       		.uleb128 0xa
 931 01db C9100000 		.4byte	.LASF28
 932 01df 07       		.byte	0x7
 933 01e0 3D       		.byte	0x3d
 934 01e1 CF000000 		.4byte	0xcf
 935 01e5 20       		.byte	0x20
 936 01e6 0A       		.uleb128 0xa
 937 01e7 05110000 		.4byte	.LASF29
 938 01eb 07       		.byte	0x7
 939 01ec 3E       		.byte	0x3e
 940 01ed CA000000 		.4byte	0xca
 941 01f1 24       		.byte	0x24
 942 01f2 0A       		.uleb128 0xa
 943 01f3 0A110000 		.4byte	.LASF22
 944 01f7 07       		.byte	0x7
 945 01f8 3F       		.byte	0x3f
 946 01f9 0E020000 		.4byte	0x20e
 947 01fd 28       		.byte	0x28
 948 01fe 00       		.byte	0
 949 01ff 05       		.uleb128 0x5
 950 0200 63010000 		.4byte	0x163
 951 0204 06       		.uleb128 0x6
 952 0205 FF010000 		.4byte	0x1ff
 953 0209 05       		.uleb128 0x5
 954 020a 63010000 		.4byte	0x163
 955 020e 06       		.uleb128 0x6
 956 020f 09020000 		.4byte	0x209
 957 0213 03       		.uleb128 0x3
 958 0214 E0030000 		.4byte	.LASF30
 959 0218 07       		.byte	0x7
 960 0219 40       		.byte	0x40
 961 021a AE010000 		.4byte	0x1ae
 962 021e 09       		.uleb128 0x9
 963 021f 40       		.byte	0x40
 964 0220 07       		.byte	0x7
 965 0221 45       		.byte	0x45
 966 0222 6F020000 		.4byte	0x26f
 967 0226 0A       		.uleb128 0xa
 968 0227 C3100000 		.4byte	.LASF26
 969 022b 07       		.byte	0x7
 970 022c 46       		.byte	0x46
 971 022d CF000000 		.4byte	0xcf
 972 0231 00       		.byte	0
 973 0232 0A       		.uleb128 0xa
 974 0233 00110000 		.4byte	.LASF27
 975 0237 07       		.byte	0x7
 976 0238 47       		.byte	0x47
 977 0239 CA000000 		.4byte	0xca
 978 023d 04       		.byte	0x4
 979 023e 0A       		.uleb128 0xa
 980 023f 27000000 		.4byte	.LASF19
 981 0243 07       		.byte	0x7
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 110


 982 0244 48       		.byte	0x48
 983 0245 74020000 		.4byte	0x274
 984 0249 08       		.byte	0x8
 985 024a 0A       		.uleb128 0xa
 986 024b C9100000 		.4byte	.LASF28
 987 024f 07       		.byte	0x7
 988 0250 49       		.byte	0x49
 989 0251 CF000000 		.4byte	0xcf
 990 0255 20       		.byte	0x20
 991 0256 0A       		.uleb128 0xa
 992 0257 05110000 		.4byte	.LASF29
 993 025b 07       		.byte	0x7
 994 025c 4A       		.byte	0x4a
 995 025d CA000000 		.4byte	0xca
 996 0261 24       		.byte	0x24
 997 0262 0A       		.uleb128 0xa
 998 0263 0A110000 		.4byte	.LASF22
 999 0267 07       		.byte	0x7
 1000 0268 4B       		.byte	0x4b
 1001 0269 7E020000 		.4byte	0x27e
 1002 026d 28       		.byte	0x28
 1003 026e 00       		.byte	0
 1004 026f 05       		.uleb128 0x5
 1005 0270 63010000 		.4byte	0x163
 1006 0274 06       		.uleb128 0x6
 1007 0275 6F020000 		.4byte	0x26f
 1008 0279 05       		.uleb128 0x5
 1009 027a 63010000 		.4byte	0x163
 1010 027e 06       		.uleb128 0x6
 1011 027f 79020000 		.4byte	0x279
 1012 0283 03       		.uleb128 0x3
 1013 0284 CB110000 		.4byte	.LASF31
 1014 0288 07       		.byte	0x7
 1015 0289 4C       		.byte	0x4c
 1016 028a 1E020000 		.4byte	0x21e
 1017 028e 0B       		.uleb128 0xb
 1018 028f 0054     		.2byte	0x5400
 1019 0291 07       		.byte	0x7
 1020 0292 69       		.byte	0x69
 1021 0293 66030000 		.4byte	0x366
 1022 0297 0C       		.uleb128 0xc
 1023 0298 475200   		.ascii	"GR\000"
 1024 029b 07       		.byte	0x7
 1025 029c 6A       		.byte	0x6a
 1026 029d 66030000 		.4byte	0x366
 1027 02a1 00       		.byte	0
 1028 02a2 0D       		.uleb128 0xd
 1029 02a3 260D0000 		.4byte	.LASF32
 1030 02a7 07       		.byte	0x7
 1031 02a8 6B       		.byte	0x6b
 1032 02a9 CA000000 		.4byte	0xca
 1033 02ad 0004     		.2byte	0x400
 1034 02af 0D       		.uleb128 0xd
 1035 02b0 27000000 		.4byte	.LASF19
 1036 02b4 07       		.byte	0x7
 1037 02b5 6C       		.byte	0x6c
 1038 02b6 8B030000 		.4byte	0x38b
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 111


 1039 02ba 0404     		.2byte	0x404
 1040 02bc 0D       		.uleb128 0xd
 1041 02bd E2000000 		.4byte	.LASF33
 1042 02c1 07       		.byte	0x7
 1043 02c2 6D       		.byte	0x6d
 1044 02c3 A0030000 		.4byte	0x3a0
 1045 02c7 0008     		.2byte	0x800
 1046 02c9 0D       		.uleb128 0xd
 1047 02ca A2060000 		.4byte	.LASF34
 1048 02ce 07       		.byte	0x7
 1049 02cf 6E       		.byte	0x6e
 1050 02d0 A5030000 		.4byte	0x3a5
 1051 02d4 0009     		.2byte	0x900
 1052 02d6 0D       		.uleb128 0xd
 1053 02d7 36020000 		.4byte	.LASF35
 1054 02db 07       		.byte	0x7
 1055 02dc 6F       		.byte	0x6f
 1056 02dd AA030000 		.4byte	0x3aa
 1057 02e1 000A     		.2byte	0xa00
 1058 02e3 0D       		.uleb128 0xd
 1059 02e4 40060000 		.4byte	.LASF36
 1060 02e8 07       		.byte	0x7
 1061 02e9 70       		.byte	0x70
 1062 02ea BF030000 		.4byte	0x3bf
 1063 02ee 000B     		.2byte	0xb00
 1064 02f0 0D       		.uleb128 0xd
 1065 02f1 0A110000 		.4byte	.LASF22
 1066 02f5 07       		.byte	0x7
 1067 02f6 71       		.byte	0x71
 1068 02f7 CF000000 		.4byte	0xcf
 1069 02fb FC0B     		.2byte	0xbfc
 1070 02fd 0D       		.uleb128 0xd
 1071 02fe AD060000 		.4byte	.LASF18
 1072 0302 07       		.byte	0x7
 1073 0303 72       		.byte	0x72
 1074 0304 C4030000 		.4byte	0x3c4
 1075 0308 000C     		.2byte	0xc00
 1076 030a 0D       		.uleb128 0xd
 1077 030b 8F0C0000 		.4byte	.LASF37
 1078 030f 07       		.byte	0x7
 1079 0310 73       		.byte	0x73
 1080 0311 DE030000 		.4byte	0x3de
 1081 0315 000E     		.2byte	0xe00
 1082 0317 0D       		.uleb128 0xd
 1083 0318 92050000 		.4byte	.LASF38
 1084 031c 07       		.byte	0x7
 1085 031d 74       		.byte	0x74
 1086 031e CA000000 		.4byte	0xca
 1087 0322 0010     		.2byte	0x1000
 1088 0324 0D       		.uleb128 0xd
 1089 0325 990C0000 		.4byte	.LASF39
 1090 0329 07       		.byte	0x7
 1091 032a 75       		.byte	0x75
 1092 032b F9030000 		.4byte	0x3f9
 1093 032f 0410     		.2byte	0x1004
 1094 0331 0D       		.uleb128 0xd
 1095 0332 3E070000 		.4byte	.LASF40
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 112


 1096 0336 07       		.byte	0x7
 1097 0337 76       		.byte	0x76
 1098 0338 FE030000 		.4byte	0x3fe
 1099 033c 0020     		.2byte	0x2000
 1100 033e 0D       		.uleb128 0xd
 1101 033f 59020000 		.4byte	.LASF41
 1102 0343 07       		.byte	0x7
 1103 0344 77       		.byte	0x77
 1104 0345 0E040000 		.4byte	0x40e
 1105 0349 0040     		.2byte	0x4000
 1106 034b 0D       		.uleb128 0xd
 1107 034c A30C0000 		.4byte	.LASF42
 1108 0350 07       		.byte	0x7
 1109 0351 78       		.byte	0x78
 1110 0352 34040000 		.4byte	0x434
 1111 0356 0048     		.2byte	0x4800
 1112 0358 0D       		.uleb128 0xd
 1113 0359 76090000 		.4byte	.LASF43
 1114 035d 07       		.byte	0x7
 1115 035e 79       		.byte	0x79
 1116 035f 39040000 		.4byte	0x439
 1117 0363 0050     		.2byte	0x5000
 1118 0365 00       		.byte	0
 1119 0366 07       		.uleb128 0x7
 1120 0367 7D010000 		.4byte	0x17d
 1121 036b 76030000 		.4byte	0x376
 1122 036f 08       		.uleb128 0x8
 1123 0370 C3000000 		.4byte	0xc3
 1124 0374 0F       		.byte	0xf
 1125 0375 00       		.byte	0
 1126 0376 07       		.uleb128 0x7
 1127 0377 CF000000 		.4byte	0xcf
 1128 037b 86030000 		.4byte	0x386
 1129 037f 08       		.uleb128 0x8
 1130 0380 C3000000 		.4byte	0xc3
 1131 0384 FE       		.byte	0xfe
 1132 0385 00       		.byte	0
 1133 0386 05       		.uleb128 0x5
 1134 0387 76030000 		.4byte	0x376
 1135 038b 06       		.uleb128 0x6
 1136 038c 86030000 		.4byte	0x386
 1137 0390 07       		.uleb128 0x7
 1138 0391 CA000000 		.4byte	0xca
 1139 0395 A0030000 		.4byte	0x3a0
 1140 0399 08       		.uleb128 0x8
 1141 039a C3000000 		.4byte	0xc3
 1142 039e 3F       		.byte	0x3f
 1143 039f 00       		.byte	0
 1144 03a0 05       		.uleb128 0x5
 1145 03a1 90030000 		.4byte	0x390
 1146 03a5 05       		.uleb128 0x5
 1147 03a6 90030000 		.4byte	0x390
 1148 03aa 05       		.uleb128 0x5
 1149 03ab 90030000 		.4byte	0x390
 1150 03af 07       		.uleb128 0x7
 1151 03b0 CA000000 		.4byte	0xca
 1152 03b4 BF030000 		.4byte	0x3bf
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 113


 1153 03b8 08       		.uleb128 0x8
 1154 03b9 C3000000 		.4byte	0xc3
 1155 03bd 3E       		.byte	0x3e
 1156 03be 00       		.byte	0
 1157 03bf 05       		.uleb128 0x5
 1158 03c0 AF030000 		.4byte	0x3af
 1159 03c4 05       		.uleb128 0x5
 1160 03c5 E4000000 		.4byte	0xe4
 1161 03c9 07       		.uleb128 0x7
 1162 03ca CF000000 		.4byte	0xcf
 1163 03ce D9030000 		.4byte	0x3d9
 1164 03d2 08       		.uleb128 0x8
 1165 03d3 C3000000 		.4byte	0xc3
 1166 03d7 7F       		.byte	0x7f
 1167 03d8 00       		.byte	0
 1168 03d9 05       		.uleb128 0x5
 1169 03da C9030000 		.4byte	0x3c9
 1170 03de 06       		.uleb128 0x6
 1171 03df D9030000 		.4byte	0x3d9
 1172 03e3 07       		.uleb128 0x7
 1173 03e4 CF000000 		.4byte	0xcf
 1174 03e8 F4030000 		.4byte	0x3f4
 1175 03ec 0E       		.uleb128 0xe
 1176 03ed C3000000 		.4byte	0xc3
 1177 03f1 FE03     		.2byte	0x3fe
 1178 03f3 00       		.byte	0
 1179 03f4 05       		.uleb128 0x5
 1180 03f5 E3030000 		.4byte	0x3e3
 1181 03f9 06       		.uleb128 0x6
 1182 03fa F4030000 		.4byte	0x3f4
 1183 03fe 07       		.uleb128 0x7
 1184 03ff A3010000 		.4byte	0x1a3
 1185 0403 0E040000 		.4byte	0x40e
 1186 0407 08       		.uleb128 0x8
 1187 0408 C3000000 		.4byte	0xc3
 1188 040c 0F       		.byte	0xf
 1189 040d 00       		.byte	0
 1190 040e 07       		.uleb128 0x7
 1191 040f 13020000 		.4byte	0x213
 1192 0413 1E040000 		.4byte	0x41e
 1193 0417 08       		.uleb128 0x8
 1194 0418 C3000000 		.4byte	0xc3
 1195 041c 1F       		.byte	0x1f
 1196 041d 00       		.byte	0
 1197 041e 07       		.uleb128 0x7
 1198 041f CF000000 		.4byte	0xcf
 1199 0423 2F040000 		.4byte	0x42f
 1200 0427 0E       		.uleb128 0xe
 1201 0428 C3000000 		.4byte	0xc3
 1202 042c FF01     		.2byte	0x1ff
 1203 042e 00       		.byte	0
 1204 042f 05       		.uleb128 0x5
 1205 0430 1E040000 		.4byte	0x41e
 1206 0434 06       		.uleb128 0x6
 1207 0435 2F040000 		.4byte	0x42f
 1208 0439 07       		.uleb128 0x7
 1209 043a 83020000 		.4byte	0x283
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 114


 1210 043e 49040000 		.4byte	0x449
 1211 0442 08       		.uleb128 0x8
 1212 0443 C3000000 		.4byte	0xc3
 1213 0447 0F       		.byte	0xf
 1214 0448 00       		.byte	0
 1215 0449 03       		.uleb128 0x3
 1216 044a E40C0000 		.4byte	.LASF44
 1217 044e 07       		.byte	0x7
 1218 044f 7B       		.byte	0x7b
 1219 0450 8E020000 		.4byte	0x28e
 1220 0454 07       		.uleb128 0x7
 1221 0455 CF000000 		.4byte	0xcf
 1222 0459 64040000 		.4byte	0x464
 1223 045d 08       		.uleb128 0x8
 1224 045e C3000000 		.4byte	0xc3
 1225 0462 0F       		.byte	0xf
 1226 0463 00       		.byte	0
 1227 0464 07       		.uleb128 0x7
 1228 0465 CF000000 		.4byte	0xcf
 1229 0469 74040000 		.4byte	0x474
 1230 046d 08       		.uleb128 0x8
 1231 046e C3000000 		.4byte	0xc3
 1232 0472 02       		.byte	0x2
 1233 0473 00       		.byte	0
 1234 0474 07       		.uleb128 0x7
 1235 0475 CF000000 		.4byte	0xcf
 1236 0479 84040000 		.4byte	0x484
 1237 047d 08       		.uleb128 0x8
 1238 047e C3000000 		.4byte	0xc3
 1239 0482 0E       		.byte	0xe
 1240 0483 00       		.byte	0
 1241 0484 0B       		.uleb128 0xb
 1242 0485 080F     		.2byte	0xf08
 1243 0487 08       		.byte	0x8
 1244 0488 21       		.byte	0x21
 1245 0489 0C070000 		.4byte	0x70c
 1246 048d 0A       		.uleb128 0xa
 1247 048e 33120000 		.4byte	.LASF45
 1248 0492 08       		.byte	0x8
 1249 0493 22       		.byte	0x22
 1250 0494 CA000000 		.4byte	0xca
 1251 0498 00       		.byte	0
 1252 0499 0A       		.uleb128 0xa
 1253 049a 0A0A0000 		.4byte	.LASF46
 1254 049e 08       		.byte	0x8
 1255 049f 23       		.byte	0x23
 1256 04a0 CA000000 		.4byte	0xca
 1257 04a4 04       		.byte	0x4
 1258 04a5 0A       		.uleb128 0xa
 1259 04a6 27000000 		.4byte	.LASF19
 1260 04aa 08       		.byte	0x8
 1261 04ab 24       		.byte	0x24
 1262 04ac 11070000 		.4byte	0x711
 1263 04b0 08       		.byte	0x8
 1264 04b1 0A       		.uleb128 0xa
 1265 04b2 B7020000 		.4byte	.LASF47
 1266 04b6 08       		.byte	0x8
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 115


 1267 04b7 25       		.byte	0x25
 1268 04b8 CA000000 		.4byte	0xca
 1269 04bc 10       		.byte	0x10
 1270 04bd 0A       		.uleb128 0xa
 1271 04be D8040000 		.4byte	.LASF48
 1272 04c2 08       		.byte	0x8
 1273 04c3 26       		.byte	0x26
 1274 04c4 CA000000 		.4byte	0xca
 1275 04c8 14       		.byte	0x14
 1276 04c9 0A       		.uleb128 0xa
 1277 04ca 890D0000 		.4byte	.LASF49
 1278 04ce 08       		.byte	0x8
 1279 04cf 27       		.byte	0x27
 1280 04d0 CA000000 		.4byte	0xca
 1281 04d4 18       		.byte	0x18
 1282 04d5 0A       		.uleb128 0xa
 1283 04d6 21060000 		.4byte	.LASF50
 1284 04da 08       		.byte	0x8
 1285 04db 28       		.byte	0x28
 1286 04dc CA000000 		.4byte	0xca
 1287 04e0 1C       		.byte	0x1c
 1288 04e1 0A       		.uleb128 0xa
 1289 04e2 22010000 		.4byte	.LASF51
 1290 04e6 08       		.byte	0x8
 1291 04e7 29       		.byte	0x29
 1292 04e8 CA000000 		.4byte	0xca
 1293 04ec 20       		.byte	0x20
 1294 04ed 0A       		.uleb128 0xa
 1295 04ee DF0A0000 		.4byte	.LASF52
 1296 04f2 08       		.byte	0x8
 1297 04f3 2A       		.byte	0x2a
 1298 04f4 CA000000 		.4byte	0xca
 1299 04f8 24       		.byte	0x24
 1300 04f9 0A       		.uleb128 0xa
 1301 04fa 0A110000 		.4byte	.LASF22
 1302 04fe 08       		.byte	0x8
 1303 04ff 2B       		.byte	0x2b
 1304 0500 2B070000 		.4byte	0x72b
 1305 0504 28       		.byte	0x28
 1306 0505 0A       		.uleb128 0xa
 1307 0506 C90E0000 		.4byte	.LASF53
 1308 050a 08       		.byte	0x8
 1309 050b 2C       		.byte	0x2c
 1310 050c 30070000 		.4byte	0x730
 1311 0510 80       		.byte	0x80
 1312 0511 0A       		.uleb128 0xa
 1313 0512 8F0C0000 		.4byte	.LASF37
 1314 0516 08       		.byte	0x8
 1315 0517 2D       		.byte	0x2d
 1316 0518 3A070000 		.4byte	0x73a
 1317 051c C0       		.byte	0xc0
 1318 051d 0D       		.uleb128 0xd
 1319 051e BB0D0000 		.4byte	.LASF54
 1320 0522 08       		.byte	0x8
 1321 0523 2E       		.byte	0x2e
 1322 0524 44070000 		.4byte	0x744
 1323 0528 0001     		.2byte	0x100
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 116


 1324 052a 0D       		.uleb128 0xd
 1325 052b 990C0000 		.4byte	.LASF39
 1326 052f 08       		.byte	0x8
 1327 0530 2F       		.byte	0x2f
 1328 0531 4E070000 		.4byte	0x74e
 1329 0535 4001     		.2byte	0x140
 1330 0537 0D       		.uleb128 0xd
 1331 0538 C0090000 		.4byte	.LASF55
 1332 053c 08       		.byte	0x8
 1333 053d 30       		.byte	0x30
 1334 053e 58070000 		.4byte	0x758
 1335 0542 8001     		.2byte	0x180
 1336 0544 0D       		.uleb128 0xd
 1337 0545 A30C0000 		.4byte	.LASF42
 1338 0549 08       		.byte	0x8
 1339 054a 31       		.byte	0x31
 1340 054b 62070000 		.4byte	0x762
 1341 054f C001     		.2byte	0x1c0
 1342 0551 0D       		.uleb128 0xd
 1343 0552 50000000 		.4byte	.LASF56
 1344 0556 08       		.byte	0x8
 1345 0557 32       		.byte	0x32
 1346 0558 CF000000 		.4byte	0xcf
 1347 055c 0002     		.2byte	0x200
 1348 055e 0D       		.uleb128 0xd
 1349 055f 9D0E0000 		.4byte	.LASF57
 1350 0563 08       		.byte	0x8
 1351 0564 33       		.byte	0x33
 1352 0565 CF000000 		.4byte	0xcf
 1353 0569 0402     		.2byte	0x204
 1354 056b 0D       		.uleb128 0xd
 1355 056c 19020000 		.4byte	.LASF58
 1356 0570 08       		.byte	0x8
 1357 0571 34       		.byte	0x34
 1358 0572 CF000000 		.4byte	0xcf
 1359 0576 0802     		.2byte	0x208
 1360 0578 0D       		.uleb128 0xd
 1361 0579 B9070000 		.4byte	.LASF59
 1362 057d 08       		.byte	0x8
 1363 057e 35       		.byte	0x35
 1364 057f CF000000 		.4byte	0xcf
 1365 0583 0C02     		.2byte	0x20c
 1366 0585 0D       		.uleb128 0xd
 1367 0586 11040000 		.4byte	.LASF60
 1368 058a 08       		.byte	0x8
 1369 058b 36       		.byte	0x36
 1370 058c CA000000 		.4byte	0xca
 1371 0590 1002     		.2byte	0x210
 1372 0592 0D       		.uleb128 0xd
 1373 0593 FD020000 		.4byte	.LASF61
 1374 0597 08       		.byte	0x8
 1375 0598 37       		.byte	0x37
 1376 0599 CA000000 		.4byte	0xca
 1377 059d 1402     		.2byte	0x214
 1378 059f 0D       		.uleb128 0xd
 1379 05a0 000A0000 		.4byte	.LASF62
 1380 05a4 08       		.byte	0x8
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 117


 1381 05a5 38       		.byte	0x38
 1382 05a6 CA000000 		.4byte	0xca
 1383 05aa 1802     		.2byte	0x218
 1384 05ac 0D       		.uleb128 0xd
 1385 05ad 220E0000 		.4byte	.LASF63
 1386 05b1 08       		.byte	0x8
 1387 05b2 39       		.byte	0x39
 1388 05b3 CF000000 		.4byte	0xcf
 1389 05b7 1C02     		.2byte	0x21c
 1390 05b9 0D       		.uleb128 0xd
 1391 05ba A9020000 		.4byte	.LASF64
 1392 05be 08       		.byte	0x8
 1393 05bf 3A       		.byte	0x3a
 1394 05c0 CA000000 		.4byte	0xca
 1395 05c4 2002     		.2byte	0x220
 1396 05c6 0D       		.uleb128 0xd
 1397 05c7 2C070000 		.4byte	.LASF65
 1398 05cb 08       		.byte	0x8
 1399 05cc 3B       		.byte	0x3b
 1400 05cd CA000000 		.4byte	0xca
 1401 05d1 2402     		.2byte	0x224
 1402 05d3 0D       		.uleb128 0xd
 1403 05d4 4D0F0000 		.4byte	.LASF66
 1404 05d8 08       		.byte	0x8
 1405 05d9 3C       		.byte	0x3c
 1406 05da CA000000 		.4byte	0xca
 1407 05de 2802     		.2byte	0x228
 1408 05e0 0D       		.uleb128 0xd
 1409 05e1 0C070000 		.4byte	.LASF67
 1410 05e5 08       		.byte	0x8
 1411 05e6 3D       		.byte	0x3d
 1412 05e7 CF000000 		.4byte	0xcf
 1413 05eb 2C02     		.2byte	0x22c
 1414 05ed 0D       		.uleb128 0xd
 1415 05ee E9090000 		.4byte	.LASF68
 1416 05f2 08       		.byte	0x8
 1417 05f3 3E       		.byte	0x3e
 1418 05f4 CA000000 		.4byte	0xca
 1419 05f8 3002     		.2byte	0x230
 1420 05fa 0D       		.uleb128 0xd
 1421 05fb 22080000 		.4byte	.LASF69
 1422 05ff 08       		.byte	0x8
 1423 0600 3F       		.byte	0x3f
 1424 0601 CA000000 		.4byte	0xca
 1425 0605 3402     		.2byte	0x234
 1426 0607 0D       		.uleb128 0xd
 1427 0608 F5050000 		.4byte	.LASF70
 1428 060c 08       		.byte	0x8
 1429 060d 40       		.byte	0x40
 1430 060e CA000000 		.4byte	0xca
 1431 0612 3802     		.2byte	0x238
 1432 0614 0D       		.uleb128 0xd
 1433 0615 30000000 		.4byte	.LASF71
 1434 0619 08       		.byte	0x8
 1435 061a 41       		.byte	0x41
 1436 061b CF000000 		.4byte	0xcf
 1437 061f 3C02     		.2byte	0x23c
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 118


 1438 0621 0D       		.uleb128 0xd
 1439 0622 A2010000 		.4byte	.LASF72
 1440 0626 08       		.byte	0x8
 1441 0627 42       		.byte	0x42
 1442 0628 CF000000 		.4byte	0xcf
 1443 062c 4002     		.2byte	0x240
 1444 062e 0D       		.uleb128 0xd
 1445 062f AD0C0000 		.4byte	.LASF73
 1446 0633 08       		.byte	0x8
 1447 0634 43       		.byte	0x43
 1448 0635 6C070000 		.4byte	0x76c
 1449 0639 4402     		.2byte	0x244
 1450 063b 0D       		.uleb128 0xd
 1451 063c 45050000 		.4byte	.LASF74
 1452 0640 08       		.byte	0x8
 1453 0641 44       		.byte	0x44
 1454 0642 CA000000 		.4byte	0xca
 1455 0646 8002     		.2byte	0x280
 1456 0648 0D       		.uleb128 0xd
 1457 0649 B70C0000 		.4byte	.LASF75
 1458 064d 08       		.byte	0x8
 1459 064e 45       		.byte	0x45
 1460 064f 76070000 		.4byte	0x776
 1461 0653 8402     		.2byte	0x284
 1462 0655 0D       		.uleb128 0xd
 1463 0656 DC020000 		.4byte	.LASF76
 1464 065a 08       		.byte	0x8
 1465 065b 46       		.byte	0x46
 1466 065c CF000000 		.4byte	0xcf
 1467 0660 9002     		.2byte	0x290
 1468 0662 0D       		.uleb128 0xd
 1469 0663 C1040000 		.4byte	.LASF77
 1470 0667 08       		.byte	0x8
 1471 0668 47       		.byte	0x47
 1472 0669 80070000 		.4byte	0x780
 1473 066d 9402     		.2byte	0x294
 1474 066f 0D       		.uleb128 0xd
 1475 0670 23110000 		.4byte	.LASF78
 1476 0674 08       		.byte	0x8
 1477 0675 48       		.byte	0x48
 1478 0676 CF000000 		.4byte	0xcf
 1479 067a A002     		.2byte	0x2a0
 1480 067c 0D       		.uleb128 0xd
 1481 067d CE070000 		.4byte	.LASF79
 1482 0681 08       		.byte	0x8
 1483 0682 49       		.byte	0x49
 1484 0683 CF000000 		.4byte	0xcf
 1485 0687 A402     		.2byte	0x2a4
 1486 0689 0D       		.uleb128 0xd
 1487 068a D00C0000 		.4byte	.LASF80
 1488 068e 08       		.byte	0x8
 1489 068f 4A       		.byte	0x4a
 1490 0690 8A070000 		.4byte	0x78a
 1491 0694 A802     		.2byte	0x2a8
 1492 0696 0D       		.uleb128 0xd
 1493 0697 910E0000 		.4byte	.LASF81
 1494 069b 08       		.byte	0x8
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 119


 1495 069c 4B       		.byte	0x4b
 1496 069d CA000000 		.4byte	0xca
 1497 06a1 0003     		.2byte	0x300
 1498 06a3 0D       		.uleb128 0xd
 1499 06a4 890A0000 		.4byte	.LASF82
 1500 06a8 08       		.byte	0x8
 1501 06a9 4C       		.byte	0x4c
 1502 06aa CA000000 		.4byte	0xca
 1503 06ae 0403     		.2byte	0x304
 1504 06b0 0D       		.uleb128 0xd
 1505 06b1 DA0C0000 		.4byte	.LASF83
 1506 06b5 08       		.byte	0x8
 1507 06b6 4D       		.byte	0x4d
 1508 06b7 A4070000 		.4byte	0x7a4
 1509 06bb 0803     		.2byte	0x308
 1510 06bd 0D       		.uleb128 0xd
 1511 06be 7E100000 		.4byte	.LASF84
 1512 06c2 08       		.byte	0x8
 1513 06c3 4E       		.byte	0x4e
 1514 06c4 CA000000 		.4byte	0xca
 1515 06c8 4003     		.2byte	0x340
 1516 06ca 0D       		.uleb128 0xd
 1517 06cb F10C0000 		.4byte	.LASF85
 1518 06cf 08       		.byte	0x8
 1519 06d0 4F       		.byte	0x4f
 1520 06d1 CA000000 		.4byte	0xca
 1521 06d5 4403     		.2byte	0x344
 1522 06d7 0D       		.uleb128 0xd
 1523 06d8 B1100000 		.4byte	.LASF86
 1524 06dc 08       		.byte	0x8
 1525 06dd 50       		.byte	0x50
 1526 06de CF000000 		.4byte	0xcf
 1527 06e2 4803     		.2byte	0x348
 1528 06e4 0D       		.uleb128 0xd
 1529 06e5 680F0000 		.4byte	.LASF87
 1530 06e9 08       		.byte	0x8
 1531 06ea 51       		.byte	0x51
 1532 06eb BF070000 		.4byte	0x7bf
 1533 06ef 4C03     		.2byte	0x34c
 1534 06f1 0D       		.uleb128 0xd
 1535 06f2 F60E0000 		.4byte	.LASF88
 1536 06f6 08       		.byte	0x8
 1537 06f7 52       		.byte	0x52
 1538 06f8 CA000000 		.4byte	0xca
 1539 06fc 000F     		.2byte	0xf00
 1540 06fe 0D       		.uleb128 0xd
 1541 06ff 000F0000 		.4byte	.LASF89
 1542 0703 08       		.byte	0x8
 1543 0704 53       		.byte	0x53
 1544 0705 CA000000 		.4byte	0xca
 1545 0709 040F     		.2byte	0xf04
 1546 070b 00       		.byte	0
 1547 070c 05       		.uleb128 0x5
 1548 070d D4000000 		.4byte	0xd4
 1549 0711 06       		.uleb128 0x6
 1550 0712 0C070000 		.4byte	0x70c
 1551 0716 07       		.uleb128 0x7
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 120


 1552 0717 CF000000 		.4byte	0xcf
 1553 071b 26070000 		.4byte	0x726
 1554 071f 08       		.uleb128 0x8
 1555 0720 C3000000 		.4byte	0xc3
 1556 0724 15       		.byte	0x15
 1557 0725 00       		.byte	0
 1558 0726 05       		.uleb128 0x5
 1559 0727 16070000 		.4byte	0x716
 1560 072b 06       		.uleb128 0x6
 1561 072c 26070000 		.4byte	0x726
 1562 0730 05       		.uleb128 0x5
 1563 0731 F4000000 		.4byte	0xf4
 1564 0735 05       		.uleb128 0x5
 1565 0736 54040000 		.4byte	0x454
 1566 073a 06       		.uleb128 0x6
 1567 073b 35070000 		.4byte	0x735
 1568 073f 05       		.uleb128 0x5
 1569 0740 54040000 		.4byte	0x454
 1570 0744 06       		.uleb128 0x6
 1571 0745 3F070000 		.4byte	0x73f
 1572 0749 05       		.uleb128 0x5
 1573 074a 54040000 		.4byte	0x454
 1574 074e 06       		.uleb128 0x6
 1575 074f 49070000 		.4byte	0x749
 1576 0753 05       		.uleb128 0x5
 1577 0754 54040000 		.4byte	0x454
 1578 0758 06       		.uleb128 0x6
 1579 0759 53070000 		.4byte	0x753
 1580 075d 05       		.uleb128 0x5
 1581 075e 54040000 		.4byte	0x454
 1582 0762 06       		.uleb128 0x6
 1583 0763 5D070000 		.4byte	0x75d
 1584 0767 05       		.uleb128 0x5
 1585 0768 74040000 		.4byte	0x474
 1586 076c 06       		.uleb128 0x6
 1587 076d 67070000 		.4byte	0x767
 1588 0771 05       		.uleb128 0x5
 1589 0772 64040000 		.4byte	0x464
 1590 0776 06       		.uleb128 0x6
 1591 0777 71070000 		.4byte	0x771
 1592 077b 05       		.uleb128 0x5
 1593 077c 64040000 		.4byte	0x464
 1594 0780 06       		.uleb128 0x6
 1595 0781 7B070000 		.4byte	0x77b
 1596 0785 05       		.uleb128 0x5
 1597 0786 16070000 		.4byte	0x716
 1598 078a 06       		.uleb128 0x6
 1599 078b 85070000 		.4byte	0x785
 1600 078f 07       		.uleb128 0x7
 1601 0790 CF000000 		.4byte	0xcf
 1602 0794 9F070000 		.4byte	0x79f
 1603 0798 08       		.uleb128 0x8
 1604 0799 C3000000 		.4byte	0xc3
 1605 079d 0D       		.byte	0xd
 1606 079e 00       		.byte	0
 1607 079f 05       		.uleb128 0x5
 1608 07a0 8F070000 		.4byte	0x78f
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 121


 1609 07a4 06       		.uleb128 0x6
 1610 07a5 9F070000 		.4byte	0x79f
 1611 07a9 07       		.uleb128 0x7
 1612 07aa CF000000 		.4byte	0xcf
 1613 07ae BA070000 		.4byte	0x7ba
 1614 07b2 0E       		.uleb128 0xe
 1615 07b3 C3000000 		.4byte	0xc3
 1616 07b7 EC02     		.2byte	0x2ec
 1617 07b9 00       		.byte	0
 1618 07ba 05       		.uleb128 0x5
 1619 07bb A9070000 		.4byte	0x7a9
 1620 07bf 06       		.uleb128 0x6
 1621 07c0 BA070000 		.4byte	0x7ba
 1622 07c4 03       		.uleb128 0x3
 1623 07c5 F4060000 		.4byte	.LASF90
 1624 07c9 08       		.byte	0x8
 1625 07ca 54       		.byte	0x54
 1626 07cb 84040000 		.4byte	0x484
 1627 07cf 0F       		.uleb128 0xf
 1628 07d0 99050000 		.4byte	.LASF91
 1629 07d4 09       		.byte	0x9
 1630 07d5 5206     		.2byte	0x652
 1631 07d7 C4070000 		.4byte	0x7c4
 1632 07db 02       		.uleb128 0x2
 1633 07dc 08       		.byte	0x8
 1634 07dd 04       		.byte	0x4
 1635 07de 530B0000 		.4byte	.LASF92
 1636 07e2 09       		.uleb128 0x9
 1637 07e3 B8       		.byte	0xb8
 1638 07e4 0A       		.byte	0xa
 1639 07e5 34       		.byte	0x34
 1640 07e6 F30B0000 		.4byte	0xbf3
 1641 07ea 0A       		.uleb128 0xa
 1642 07eb 2C020000 		.4byte	.LASF93
 1643 07ef 0A       		.byte	0xa
 1644 07f0 37       		.byte	0x37
 1645 07f1 B8000000 		.4byte	0xb8
 1646 07f5 00       		.byte	0
 1647 07f6 0A       		.uleb128 0xa
 1648 07f7 54040000 		.4byte	.LASF94
 1649 07fb 0A       		.byte	0xa
 1650 07fc 38       		.byte	0x38
 1651 07fd B8000000 		.4byte	0xb8
 1652 0801 04       		.byte	0x4
 1653 0802 0A       		.uleb128 0xa
 1654 0803 2A010000 		.4byte	.LASF95
 1655 0807 0A       		.byte	0xa
 1656 0808 39       		.byte	0x39
 1657 0809 B8000000 		.4byte	0xb8
 1658 080d 08       		.byte	0x8
 1659 080e 0A       		.uleb128 0xa
 1660 080f 06010000 		.4byte	.LASF96
 1661 0813 0A       		.byte	0xa
 1662 0814 3A       		.byte	0x3a
 1663 0815 B8000000 		.4byte	0xb8
 1664 0819 0C       		.byte	0xc
 1665 081a 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 122


 1666 081b 4E0D0000 		.4byte	.LASF97
 1667 081f 0A       		.byte	0xa
 1668 0820 3B       		.byte	0x3b
 1669 0821 B8000000 		.4byte	0xb8
 1670 0825 10       		.byte	0x10
 1671 0826 0A       		.uleb128 0xa
 1672 0827 A2090000 		.4byte	.LASF98
 1673 082b 0A       		.byte	0xa
 1674 082c 3C       		.byte	0x3c
 1675 082d B8000000 		.4byte	0xb8
 1676 0831 14       		.byte	0x14
 1677 0832 0A       		.uleb128 0xa
 1678 0833 73060000 		.4byte	.LASF99
 1679 0837 0A       		.byte	0xa
 1680 0838 3D       		.byte	0x3d
 1681 0839 B8000000 		.4byte	0xb8
 1682 083d 18       		.byte	0x18
 1683 083e 0A       		.uleb128 0xa
 1684 083f F7100000 		.4byte	.LASF100
 1685 0843 0A       		.byte	0xa
 1686 0844 3E       		.byte	0x3e
 1687 0845 B8000000 		.4byte	0xb8
 1688 0849 1C       		.byte	0x1c
 1689 084a 0A       		.uleb128 0xa
 1690 084b 67080000 		.4byte	.LASF101
 1691 084f 0A       		.byte	0xa
 1692 0850 3F       		.byte	0x3f
 1693 0851 B8000000 		.4byte	0xb8
 1694 0855 20       		.byte	0x20
 1695 0856 0A       		.uleb128 0xa
 1696 0857 7E080000 		.4byte	.LASF102
 1697 085b 0A       		.byte	0xa
 1698 085c 40       		.byte	0x40
 1699 085d B8000000 		.4byte	0xb8
 1700 0861 24       		.byte	0x24
 1701 0862 0A       		.uleb128 0xa
 1702 0863 0D0D0000 		.4byte	.LASF103
 1703 0867 0A       		.byte	0xa
 1704 0868 43       		.byte	0x43
 1705 0869 97000000 		.4byte	0x97
 1706 086d 28       		.byte	0x28
 1707 086e 0A       		.uleb128 0xa
 1708 086f 1C040000 		.4byte	.LASF104
 1709 0873 0A       		.byte	0xa
 1710 0874 44       		.byte	0x44
 1711 0875 97000000 		.4byte	0x97
 1712 0879 29       		.byte	0x29
 1713 087a 0A       		.uleb128 0xa
 1714 087b E50B0000 		.4byte	.LASF105
 1715 087f 0A       		.byte	0xa
 1716 0880 45       		.byte	0x45
 1717 0881 97000000 		.4byte	0x97
 1718 0885 2A       		.byte	0x2a
 1719 0886 0A       		.uleb128 0xa
 1720 0887 2E0D0000 		.4byte	.LASF106
 1721 088b 0A       		.byte	0xa
 1722 088c 46       		.byte	0x46
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 123


 1723 088d 97000000 		.4byte	0x97
 1724 0891 2B       		.byte	0x2b
 1725 0892 0A       		.uleb128 0xa
 1726 0893 1A0D0000 		.4byte	.LASF107
 1727 0897 0A       		.byte	0xa
 1728 0898 47       		.byte	0x47
 1729 0899 97000000 		.4byte	0x97
 1730 089d 2C       		.byte	0x2c
 1731 089e 0A       		.uleb128 0xa
 1732 089f 5F0E0000 		.4byte	.LASF108
 1733 08a3 0A       		.byte	0xa
 1734 08a4 48       		.byte	0x48
 1735 08a5 97000000 		.4byte	0x97
 1736 08a9 2D       		.byte	0x2d
 1737 08aa 0A       		.uleb128 0xa
 1738 08ab DF110000 		.4byte	.LASF109
 1739 08af 0A       		.byte	0xa
 1740 08b0 49       		.byte	0x49
 1741 08b1 97000000 		.4byte	0x97
 1742 08b5 2E       		.byte	0x2e
 1743 08b6 0A       		.uleb128 0xa
 1744 08b7 CF100000 		.4byte	.LASF110
 1745 08bb 0A       		.byte	0xa
 1746 08bc 4A       		.byte	0x4a
 1747 08bd 97000000 		.4byte	0x97
 1748 08c1 2F       		.byte	0x2f
 1749 08c2 0A       		.uleb128 0xa
 1750 08c3 81030000 		.4byte	.LASF111
 1751 08c7 0A       		.byte	0xa
 1752 08c8 4B       		.byte	0x4b
 1753 08c9 97000000 		.4byte	0x97
 1754 08cd 30       		.byte	0x30
 1755 08ce 0A       		.uleb128 0xa
 1756 08cf 340A0000 		.4byte	.LASF112
 1757 08d3 0A       		.byte	0xa
 1758 08d4 4E       		.byte	0x4e
 1759 08d5 97000000 		.4byte	0x97
 1760 08d9 31       		.byte	0x31
 1761 08da 0A       		.uleb128 0xa
 1762 08db 61100000 		.4byte	.LASF113
 1763 08df 0A       		.byte	0xa
 1764 08e0 4F       		.byte	0x4f
 1765 08e1 97000000 		.4byte	0x97
 1766 08e5 32       		.byte	0x32
 1767 08e6 0A       		.uleb128 0xa
 1768 08e7 F4090000 		.4byte	.LASF114
 1769 08eb 0A       		.byte	0xa
 1770 08ec 50       		.byte	0x50
 1771 08ed 97000000 		.4byte	0x97
 1772 08f1 33       		.byte	0x33
 1773 08f2 0A       		.uleb128 0xa
 1774 08f3 F6010000 		.4byte	.LASF115
 1775 08f7 0A       		.byte	0xa
 1776 08f8 51       		.byte	0x51
 1777 08f9 97000000 		.4byte	0x97
 1778 08fd 34       		.byte	0x34
 1779 08fe 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 124


 1780 08ff CB040000 		.4byte	.LASF116
 1781 0903 0A       		.byte	0xa
 1782 0904 52       		.byte	0x52
 1783 0905 A2000000 		.4byte	0xa2
 1784 0909 36       		.byte	0x36
 1785 090a 0A       		.uleb128 0xa
 1786 090b 60020000 		.4byte	.LASF117
 1787 090f 0A       		.byte	0xa
 1788 0910 53       		.byte	0x53
 1789 0911 A2000000 		.4byte	0xa2
 1790 0915 38       		.byte	0x38
 1791 0916 0A       		.uleb128 0xa
 1792 0917 77020000 		.4byte	.LASF118
 1793 091b 0A       		.byte	0xa
 1794 091c 54       		.byte	0x54
 1795 091d A2000000 		.4byte	0xa2
 1796 0921 3A       		.byte	0x3a
 1797 0922 0A       		.uleb128 0xa
 1798 0923 14110000 		.4byte	.LASF119
 1799 0927 0A       		.byte	0xa
 1800 0928 55       		.byte	0x55
 1801 0929 97000000 		.4byte	0x97
 1802 092d 3C       		.byte	0x3c
 1803 092e 0A       		.uleb128 0xa
 1804 092f 53030000 		.4byte	.LASF120
 1805 0933 0A       		.byte	0xa
 1806 0934 56       		.byte	0x56
 1807 0935 97000000 		.4byte	0x97
 1808 0939 3D       		.byte	0x3d
 1809 093a 0A       		.uleb128 0xa
 1810 093b AC0B0000 		.4byte	.LASF121
 1811 093f 0A       		.byte	0xa
 1812 0940 57       		.byte	0x57
 1813 0941 97000000 		.4byte	0x97
 1814 0945 3E       		.byte	0x3e
 1815 0946 0A       		.uleb128 0xa
 1816 0947 C8000000 		.4byte	.LASF122
 1817 094b 0A       		.byte	0xa
 1818 094c 58       		.byte	0x58
 1819 094d 97000000 		.4byte	0x97
 1820 0951 3F       		.byte	0x3f
 1821 0952 0A       		.uleb128 0xa
 1822 0953 AD010000 		.4byte	.LASF123
 1823 0957 0A       		.byte	0xa
 1824 0958 59       		.byte	0x59
 1825 0959 97000000 		.4byte	0x97
 1826 095d 40       		.byte	0x40
 1827 095e 0A       		.uleb128 0xa
 1828 095f A00A0000 		.4byte	.LASF124
 1829 0963 0A       		.byte	0xa
 1830 0964 5A       		.byte	0x5a
 1831 0965 97000000 		.4byte	0x97
 1832 0969 41       		.byte	0x41
 1833 096a 0A       		.uleb128 0xa
 1834 096b 2B100000 		.4byte	.LASF125
 1835 096f 0A       		.byte	0xa
 1836 0970 5B       		.byte	0x5b
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 125


 1837 0971 97000000 		.4byte	0x97
 1838 0975 42       		.byte	0x42
 1839 0976 0A       		.uleb128 0xa
 1840 0977 D8060000 		.4byte	.LASF126
 1841 097b 0A       		.byte	0xa
 1842 097c 5C       		.byte	0x5c
 1843 097d 97000000 		.4byte	0x97
 1844 0981 43       		.byte	0x43
 1845 0982 0A       		.uleb128 0xa
 1846 0983 9A070000 		.4byte	.LASF127
 1847 0987 0A       		.byte	0xa
 1848 0988 5D       		.byte	0x5d
 1849 0989 97000000 		.4byte	0x97
 1850 098d 44       		.byte	0x44
 1851 098e 0A       		.uleb128 0xa
 1852 098f 3C0D0000 		.4byte	.LASF128
 1853 0993 0A       		.byte	0xa
 1854 0994 5E       		.byte	0x5e
 1855 0995 B8000000 		.4byte	0xb8
 1856 0999 48       		.byte	0x48
 1857 099a 0A       		.uleb128 0xa
 1858 099b AB070000 		.4byte	.LASF129
 1859 099f 0A       		.byte	0xa
 1860 09a0 5F       		.byte	0x5f
 1861 09a1 B8000000 		.4byte	0xb8
 1862 09a5 4C       		.byte	0x4c
 1863 09a6 0A       		.uleb128 0xa
 1864 09a7 09100000 		.4byte	.LASF130
 1865 09ab 0A       		.byte	0xa
 1866 09ac 60       		.byte	0x60
 1867 09ad 97000000 		.4byte	0x97
 1868 09b1 50       		.byte	0x50
 1869 09b2 0A       		.uleb128 0xa
 1870 09b3 E3050000 		.4byte	.LASF131
 1871 09b7 0A       		.byte	0xa
 1872 09b8 61       		.byte	0x61
 1873 09b9 97000000 		.4byte	0x97
 1874 09bd 51       		.byte	0x51
 1875 09be 0A       		.uleb128 0xa
 1876 09bf D4080000 		.4byte	.LASF132
 1877 09c3 0A       		.byte	0xa
 1878 09c4 62       		.byte	0x62
 1879 09c5 97000000 		.4byte	0x97
 1880 09c9 52       		.byte	0x52
 1881 09ca 0A       		.uleb128 0xa
 1882 09cb 2A040000 		.4byte	.LASF133
 1883 09cf 0A       		.byte	0xa
 1884 09d0 63       		.byte	0x63
 1885 09d1 97000000 		.4byte	0x97
 1886 09d5 53       		.byte	0x53
 1887 09d6 0A       		.uleb128 0xa
 1888 09d7 730F0000 		.4byte	.LASF134
 1889 09db 0A       		.byte	0xa
 1890 09dc 64       		.byte	0x64
 1891 09dd 97000000 		.4byte	0x97
 1892 09e1 54       		.byte	0x54
 1893 09e2 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 126


 1894 09e3 2C060000 		.4byte	.LASF135
 1895 09e7 0A       		.byte	0xa
 1896 09e8 65       		.byte	0x65
 1897 09e9 97000000 		.4byte	0x97
 1898 09ed 55       		.byte	0x55
 1899 09ee 0A       		.uleb128 0xa
 1900 09ef 00000000 		.4byte	.LASF136
 1901 09f3 0A       		.byte	0xa
 1902 09f4 66       		.byte	0x66
 1903 09f5 97000000 		.4byte	0x97
 1904 09f9 56       		.byte	0x56
 1905 09fa 0A       		.uleb128 0xa
 1906 09fb EF0B0000 		.4byte	.LASF137
 1907 09ff 0A       		.byte	0xa
 1908 0a00 67       		.byte	0x67
 1909 0a01 97000000 		.4byte	0x97
 1910 0a05 57       		.byte	0x57
 1911 0a06 0A       		.uleb128 0xa
 1912 0a07 55050000 		.4byte	.LASF138
 1913 0a0b 0A       		.byte	0xa
 1914 0a0c 68       		.byte	0x68
 1915 0a0d 97000000 		.4byte	0x97
 1916 0a11 58       		.byte	0x58
 1917 0a12 0A       		.uleb128 0xa
 1918 0a13 3A110000 		.4byte	.LASF139
 1919 0a17 0A       		.byte	0xa
 1920 0a18 69       		.byte	0x69
 1921 0a19 97000000 		.4byte	0x97
 1922 0a1d 59       		.byte	0x59
 1923 0a1e 0A       		.uleb128 0xa
 1924 0a1f 56100000 		.4byte	.LASF140
 1925 0a23 0A       		.byte	0xa
 1926 0a24 6E       		.byte	0x6e
 1927 0a25 AD000000 		.4byte	0xad
 1928 0a29 5A       		.byte	0x5a
 1929 0a2a 0A       		.uleb128 0xa
 1930 0a2b 48010000 		.4byte	.LASF141
 1931 0a2f 0A       		.byte	0xa
 1932 0a30 6F       		.byte	0x6f
 1933 0a31 AD000000 		.4byte	0xad
 1934 0a35 5C       		.byte	0x5c
 1935 0a36 0A       		.uleb128 0xa
 1936 0a37 6F080000 		.4byte	.LASF142
 1937 0a3b 0A       		.byte	0xa
 1938 0a3c 70       		.byte	0x70
 1939 0a3d 97000000 		.4byte	0x97
 1940 0a41 5E       		.byte	0x5e
 1941 0a42 0A       		.uleb128 0xa
 1942 0a43 BA0B0000 		.4byte	.LASF143
 1943 0a47 0A       		.byte	0xa
 1944 0a48 71       		.byte	0x71
 1945 0a49 97000000 		.4byte	0x97
 1946 0a4d 5F       		.byte	0x5f
 1947 0a4e 0A       		.uleb128 0xa
 1948 0a4f E3060000 		.4byte	.LASF144
 1949 0a53 0A       		.byte	0xa
 1950 0a54 72       		.byte	0x72
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 127


 1951 0a55 97000000 		.4byte	0x97
 1952 0a59 60       		.byte	0x60
 1953 0a5a 0A       		.uleb128 0xa
 1954 0a5b 4D060000 		.4byte	.LASF145
 1955 0a5f 0A       		.byte	0xa
 1956 0a60 73       		.byte	0x73
 1957 0a61 B8000000 		.4byte	0xb8
 1958 0a65 64       		.byte	0x64
 1959 0a66 0A       		.uleb128 0xa
 1960 0a67 F3110000 		.4byte	.LASF146
 1961 0a6b 0A       		.byte	0xa
 1962 0a6c 76       		.byte	0x76
 1963 0a6d AD000000 		.4byte	0xad
 1964 0a71 68       		.byte	0x68
 1965 0a72 0A       		.uleb128 0xa
 1966 0a73 750B0000 		.4byte	.LASF147
 1967 0a77 0A       		.byte	0xa
 1968 0a78 77       		.byte	0x77
 1969 0a79 AD000000 		.4byte	0xad
 1970 0a7d 6A       		.byte	0x6a
 1971 0a7e 0A       		.uleb128 0xa
 1972 0a7f DA090000 		.4byte	.LASF148
 1973 0a83 0A       		.byte	0xa
 1974 0a84 78       		.byte	0x78
 1975 0a85 AD000000 		.4byte	0xad
 1976 0a89 6C       		.byte	0x6c
 1977 0a8a 0A       		.uleb128 0xa
 1978 0a8b 46030000 		.4byte	.LASF149
 1979 0a8f 0A       		.byte	0xa
 1980 0a90 79       		.byte	0x79
 1981 0a91 AD000000 		.4byte	0xad
 1982 0a95 6E       		.byte	0x6e
 1983 0a96 0A       		.uleb128 0xa
 1984 0a97 FF070000 		.4byte	.LASF150
 1985 0a9b 0A       		.byte	0xa
 1986 0a9c 7B       		.byte	0x7b
 1987 0a9d 97000000 		.4byte	0x97
 1988 0aa1 70       		.byte	0x70
 1989 0aa2 0A       		.uleb128 0xa
 1990 0aa3 A5030000 		.4byte	.LASF151
 1991 0aa7 0A       		.byte	0xa
 1992 0aa8 7C       		.byte	0x7c
 1993 0aa9 97000000 		.4byte	0x97
 1994 0aad 71       		.byte	0x71
 1995 0aae 0A       		.uleb128 0xa
 1996 0aaf E7020000 		.4byte	.LASF152
 1997 0ab3 0A       		.byte	0xa
 1998 0ab4 7D       		.byte	0x7d
 1999 0ab5 97000000 		.4byte	0x97
 2000 0ab9 72       		.byte	0x72
 2001 0aba 0A       		.uleb128 0xa
 2002 0abb D4010000 		.4byte	.LASF153
 2003 0abf 0A       		.byte	0xa
 2004 0ac0 7E       		.byte	0x7e
 2005 0ac1 97000000 		.4byte	0x97
 2006 0ac5 73       		.byte	0x73
 2007 0ac6 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 128


 2008 0ac7 7D0C0000 		.4byte	.LASF154
 2009 0acb 0A       		.byte	0xa
 2010 0acc 80       		.byte	0x80
 2011 0acd AD000000 		.4byte	0xad
 2012 0ad1 74       		.byte	0x74
 2013 0ad2 0A       		.uleb128 0xa
 2014 0ad3 010B0000 		.4byte	.LASF155
 2015 0ad7 0A       		.byte	0xa
 2016 0ad8 81       		.byte	0x81
 2017 0ad9 AD000000 		.4byte	0xad
 2018 0add 76       		.byte	0x76
 2019 0ade 0A       		.uleb128 0xa
 2020 0adf 79070000 		.4byte	.LASF156
 2021 0ae3 0A       		.byte	0xa
 2022 0ae4 82       		.byte	0x82
 2023 0ae5 AD000000 		.4byte	0xad
 2024 0ae9 78       		.byte	0x78
 2025 0aea 0A       		.uleb128 0xa
 2026 0aeb 98040000 		.4byte	.LASF157
 2027 0aef 0A       		.byte	0xa
 2028 0af0 83       		.byte	0x83
 2029 0af1 AD000000 		.4byte	0xad
 2030 0af5 7A       		.byte	0x7a
 2031 0af6 0A       		.uleb128 0xa
 2032 0af7 F60D0000 		.4byte	.LASF158
 2033 0afb 0A       		.byte	0xa
 2034 0afc 86       		.byte	0x86
 2035 0afd 97000000 		.4byte	0x97
 2036 0b01 7C       		.byte	0x7c
 2037 0b02 0A       		.uleb128 0xa
 2038 0b03 1A100000 		.4byte	.LASF159
 2039 0b07 0A       		.byte	0xa
 2040 0b08 87       		.byte	0x87
 2041 0b09 97000000 		.4byte	0x97
 2042 0b0d 7D       		.byte	0x7d
 2043 0b0e 0A       		.uleb128 0xa
 2044 0b0f 67040000 		.4byte	.LASF160
 2045 0b13 0A       		.byte	0xa
 2046 0b14 88       		.byte	0x88
 2047 0b15 97000000 		.4byte	0x97
 2048 0b19 7E       		.byte	0x7e
 2049 0b1a 0A       		.uleb128 0xa
 2050 0b1b FD030000 		.4byte	.LASF161
 2051 0b1f 0A       		.byte	0xa
 2052 0b20 89       		.byte	0x89
 2053 0b21 97000000 		.4byte	0x97
 2054 0b25 7F       		.byte	0x7f
 2055 0b26 0A       		.uleb128 0xa
 2056 0b27 AD040000 		.4byte	.LASF162
 2057 0b2b 0A       		.byte	0xa
 2058 0b2c 8A       		.byte	0x8a
 2059 0b2d 97000000 		.4byte	0x97
 2060 0b31 80       		.byte	0x80
 2061 0b32 0A       		.uleb128 0xa
 2062 0b33 B1000000 		.4byte	.LASF163
 2063 0b37 0A       		.byte	0xa
 2064 0b38 8D       		.byte	0x8d
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 129


 2065 0b39 B8000000 		.4byte	0xb8
 2066 0b3d 84       		.byte	0x84
 2067 0b3e 0A       		.uleb128 0xa
 2068 0b3f 0B0E0000 		.4byte	.LASF164
 2069 0b43 0A       		.byte	0xa
 2070 0b44 8E       		.byte	0x8e
 2071 0b45 B8000000 		.4byte	0xb8
 2072 0b49 88       		.byte	0x88
 2073 0b4a 0A       		.uleb128 0xa
 2074 0b4b 91100000 		.4byte	.LASF165
 2075 0b4f 0A       		.byte	0xa
 2076 0b50 8F       		.byte	0x8f
 2077 0b51 B8000000 		.4byte	0xb8
 2078 0b55 8C       		.byte	0x8c
 2079 0b56 0A       		.uleb128 0xa
 2080 0b57 680C0000 		.4byte	.LASF166
 2081 0b5b 0A       		.byte	0xa
 2082 0b5c 90       		.byte	0x90
 2083 0b5d B8000000 		.4byte	0xb8
 2084 0b61 90       		.byte	0x90
 2085 0b62 0A       		.uleb128 0xa
 2086 0b63 CC0D0000 		.4byte	.LASF167
 2087 0b67 0A       		.byte	0xa
 2088 0b68 91       		.byte	0x91
 2089 0b69 B8000000 		.4byte	0xb8
 2090 0b6d 94       		.byte	0x94
 2091 0b6e 0A       		.uleb128 0xa
 2092 0b6f BA030000 		.4byte	.LASF168
 2093 0b73 0A       		.byte	0xa
 2094 0b74 92       		.byte	0x92
 2095 0b75 B8000000 		.4byte	0xb8
 2096 0b79 98       		.byte	0x98
 2097 0b7a 0A       		.uleb128 0xa
 2098 0b7b 2E0E0000 		.4byte	.LASF169
 2099 0b7f 0A       		.byte	0xa
 2100 0b80 93       		.byte	0x93
 2101 0b81 B8000000 		.4byte	0xb8
 2102 0b85 9C       		.byte	0x9c
 2103 0b86 0A       		.uleb128 0xa
 2104 0b87 C2060000 		.4byte	.LASF170
 2105 0b8b 0A       		.byte	0xa
 2106 0b8c 94       		.byte	0x94
 2107 0b8d B8000000 		.4byte	0xb8
 2108 0b91 A0       		.byte	0xa0
 2109 0b92 0A       		.uleb128 0xa
 2110 0b93 33010000 		.4byte	.LASF171
 2111 0b97 0A       		.byte	0xa
 2112 0b98 95       		.byte	0x95
 2113 0b99 AD000000 		.4byte	0xad
 2114 0b9d A4       		.byte	0xa4
 2115 0b9e 0A       		.uleb128 0xa
 2116 0b9f 530C0000 		.4byte	.LASF172
 2117 0ba3 0A       		.byte	0xa
 2118 0ba4 96       		.byte	0x96
 2119 0ba5 AD000000 		.4byte	0xad
 2120 0ba9 A6       		.byte	0xa6
 2121 0baa 0A       		.uleb128 0xa
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 130


 2122 0bab 850E0000 		.4byte	.LASF173
 2123 0baf 0A       		.byte	0xa
 2124 0bb0 97       		.byte	0x97
 2125 0bb1 AD000000 		.4byte	0xad
 2126 0bb5 A8       		.byte	0xa8
 2127 0bb6 0A       		.uleb128 0xa
 2128 0bb7 4B080000 		.4byte	.LASF174
 2129 0bbb 0A       		.byte	0xa
 2130 0bbc 98       		.byte	0x98
 2131 0bbd AD000000 		.4byte	0xad
 2132 0bc1 AA       		.byte	0xaa
 2133 0bc2 0A       		.uleb128 0xa
 2134 0bc3 CC090000 		.4byte	.LASF175
 2135 0bc7 0A       		.byte	0xa
 2136 0bc8 99       		.byte	0x99
 2137 0bc9 AD000000 		.4byte	0xad
 2138 0bcd AC       		.byte	0xac
 2139 0bce 0A       		.uleb128 0xa
 2140 0bcf B00A0000 		.4byte	.LASF176
 2141 0bd3 0A       		.byte	0xa
 2142 0bd4 9A       		.byte	0x9a
 2143 0bd5 AD000000 		.4byte	0xad
 2144 0bd9 AE       		.byte	0xae
 2145 0bda 0A       		.uleb128 0xa
 2146 0bdb 5E030000 		.4byte	.LASF177
 2147 0bdf 0A       		.byte	0xa
 2148 0be0 9D       		.byte	0x9d
 2149 0be1 AD000000 		.4byte	0xad
 2150 0be5 B0       		.byte	0xb0
 2151 0be6 0A       		.uleb128 0xa
 2152 0be7 62000000 		.4byte	.LASF178
 2153 0beb 0A       		.byte	0xa
 2154 0bec 9E       		.byte	0x9e
 2155 0bed B8000000 		.4byte	0xb8
 2156 0bf1 B4       		.byte	0xb4
 2157 0bf2 00       		.byte	0
 2158 0bf3 03       		.uleb128 0x3
 2159 0bf4 D0030000 		.4byte	.LASF179
 2160 0bf8 0A       		.byte	0xa
 2161 0bf9 9F       		.byte	0x9f
 2162 0bfa E2070000 		.4byte	0x7e2
 2163 0bfe 0F       		.uleb128 0xf
 2164 0bff 150F0000 		.4byte	.LASF180
 2165 0c03 0B       		.byte	0xb
 2166 0c04 EE01     		.2byte	0x1ee
 2167 0c06 0A0C0000 		.4byte	0xc0a
 2168 0c0a 10       		.uleb128 0x10
 2169 0c0b 04       		.byte	0x4
 2170 0c0c 100C0000 		.4byte	0xc10
 2171 0c10 11       		.uleb128 0x11
 2172 0c11 0F       		.uleb128 0xf
 2173 0c12 950D0000 		.4byte	.LASF181
 2174 0c16 0B       		.byte	0xb
 2175 0c17 F601     		.2byte	0x1f6
 2176 0c19 1D0C0000 		.4byte	0xc1d
 2177 0c1d 02       		.uleb128 0x2
 2178 0c1e 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 131


 2179 0c1f 08       		.byte	0x8
 2180 0c20 5C070000 		.4byte	.LASF182
 2181 0c24 02       		.uleb128 0x2
 2182 0c25 04       		.byte	0x4
 2183 0c26 04       		.byte	0x4
 2184 0c27 16040000 		.4byte	.LASF183
 2185 0c2b 02       		.uleb128 0x2
 2186 0c2c 08       		.byte	0x8
 2187 0c2d 04       		.byte	0x4
 2188 0c2e C50D0000 		.4byte	.LASF184
 2189 0c32 0F       		.uleb128 0xf
 2190 0c33 2D0A0000 		.4byte	.LASF185
 2191 0c37 0B       		.byte	0xb
 2192 0c38 EC03     		.2byte	0x3ec
 2193 0c3a B8000000 		.4byte	0xb8
 2194 0c3e 12       		.uleb128 0x12
 2195 0c3f 04       		.byte	0x4
 2196 0c40 90000000 		.4byte	0x90
 2197 0c44 03       		.byte	0x3
 2198 0c45 FE02     		.2byte	0x2fe
 2199 0c47 6D0C0000 		.4byte	0xc6d
 2200 0c4b 13       		.uleb128 0x13
 2201 0c4c 13080000 		.4byte	.LASF186
 2202 0c50 00       		.byte	0
 2203 0c51 14       		.uleb128 0x14
 2204 0c52 7C060000 		.4byte	.LASF187
 2205 0c56 01000600 		.4byte	0x60001
 2206 0c5a 14       		.uleb128 0x14
 2207 0c5b 1E0A0000 		.4byte	.LASF188
 2208 0c5f 02000600 		.4byte	0x60002
 2209 0c63 14       		.uleb128 0x14
 2210 0c64 9C0D0000 		.4byte	.LASF189
 2211 0c68 03000600 		.4byte	0x60003
 2212 0c6c 00       		.byte	0
 2213 0c6d 0F       		.uleb128 0xf
 2214 0c6e EC070000 		.4byte	.LASF190
 2215 0c72 03       		.byte	0x3
 2216 0c73 0303     		.2byte	0x303
 2217 0c75 3E0C0000 		.4byte	0xc3e
 2218 0c79 12       		.uleb128 0x12
 2219 0c7a 01       		.byte	0x1
 2220 0c7b 2C000000 		.4byte	0x2c
 2221 0c7f 03       		.byte	0x3
 2222 0c80 0703     		.2byte	0x307
 2223 0c82 930C0000 		.4byte	0xc93
 2224 0c86 13       		.uleb128 0x13
 2225 0c87 BE0A0000 		.4byte	.LASF191
 2226 0c8b 00       		.byte	0
 2227 0c8c 13       		.uleb128 0x13
 2228 0c8d AB110000 		.4byte	.LASF192
 2229 0c91 01       		.byte	0x1
 2230 0c92 00       		.byte	0
 2231 0c93 0F       		.uleb128 0xf
 2232 0c94 28030000 		.4byte	.LASF193
 2233 0c98 03       		.byte	0x3
 2234 0c99 0A03     		.2byte	0x30a
 2235 0c9b 790C0000 		.4byte	0xc79
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 132


 2236 0c9f 12       		.uleb128 0x12
 2237 0ca0 01       		.byte	0x1
 2238 0ca1 2C000000 		.4byte	0x2c
 2239 0ca5 03       		.byte	0x3
 2240 0ca6 0E03     		.2byte	0x30e
 2241 0ca8 B90C0000 		.4byte	0xcb9
 2242 0cac 13       		.uleb128 0x13
 2243 0cad 7D050000 		.4byte	.LASF194
 2244 0cb1 00       		.byte	0
 2245 0cb2 13       		.uleb128 0x13
 2246 0cb3 C5020000 		.4byte	.LASF195
 2247 0cb7 01       		.byte	0x1
 2248 0cb8 00       		.byte	0
 2249 0cb9 0F       		.uleb128 0xf
 2250 0cba B10E0000 		.4byte	.LASF196
 2251 0cbe 03       		.byte	0x3
 2252 0cbf 1103     		.2byte	0x311
 2253 0cc1 9F0C0000 		.4byte	0xc9f
 2254 0cc5 12       		.uleb128 0x12
 2255 0cc6 01       		.byte	0x1
 2256 0cc7 2C000000 		.4byte	0x2c
 2257 0ccb 03       		.byte	0x3
 2258 0ccc 1503     		.2byte	0x315
 2259 0cce DF0C0000 		.4byte	0xcdf
 2260 0cd2 13       		.uleb128 0x13
 2261 0cd3 230F0000 		.4byte	.LASF197
 2262 0cd7 00       		.byte	0
 2263 0cd8 13       		.uleb128 0x13
 2264 0cd9 5C110000 		.4byte	.LASF198
 2265 0cdd 01       		.byte	0x1
 2266 0cde 00       		.byte	0
 2267 0cdf 12       		.uleb128 0x12
 2268 0ce0 01       		.byte	0x1
 2269 0ce1 2C000000 		.4byte	0x2c
 2270 0ce5 03       		.byte	0x3
 2271 0ce6 1C03     		.2byte	0x31c
 2272 0ce8 F90C0000 		.4byte	0xcf9
 2273 0cec 13       		.uleb128 0x13
 2274 0ced CC0F0000 		.4byte	.LASF199
 2275 0cf1 00       		.byte	0
 2276 0cf2 13       		.uleb128 0x13
 2277 0cf3 180C0000 		.4byte	.LASF200
 2278 0cf7 01       		.byte	0x1
 2279 0cf8 00       		.byte	0
 2280 0cf9 12       		.uleb128 0x12
 2281 0cfa 01       		.byte	0x1
 2282 0cfb 2C000000 		.4byte	0x2c
 2283 0cff 03       		.byte	0x3
 2284 0d00 1304     		.2byte	0x413
 2285 0d02 1F0D0000 		.4byte	0xd1f
 2286 0d06 13       		.uleb128 0x13
 2287 0d07 8D030000 		.4byte	.LASF201
 2288 0d0b 00       		.byte	0
 2289 0d0c 13       		.uleb128 0x13
 2290 0d0d FC040000 		.4byte	.LASF202
 2291 0d11 01       		.byte	0x1
 2292 0d12 13       		.uleb128 0x13
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 133


 2293 0d13 44070000 		.4byte	.LASF203
 2294 0d17 02       		.byte	0x2
 2295 0d18 13       		.uleb128 0x13
 2296 0d19 BA010000 		.4byte	.LASF204
 2297 0d1d 03       		.byte	0x3
 2298 0d1e 00       		.byte	0
 2299 0d1f 0F       		.uleb128 0xf
 2300 0d20 7C110000 		.4byte	.LASF205
 2301 0d24 03       		.byte	0x3
 2302 0d25 1804     		.2byte	0x418
 2303 0d27 F90C0000 		.4byte	0xcf9
 2304 0d2b 12       		.uleb128 0x12
 2305 0d2c 01       		.byte	0x1
 2306 0d2d 2C000000 		.4byte	0x2c
 2307 0d31 03       		.byte	0x3
 2308 0d32 9404     		.2byte	0x494
 2309 0d34 510D0000 		.4byte	0xd51
 2310 0d38 13       		.uleb128 0x13
 2311 0d39 E00E0000 		.4byte	.LASF206
 2312 0d3d 00       		.byte	0
 2313 0d3e 13       		.uleb128 0x13
 2314 0d3f 5E060000 		.4byte	.LASF207
 2315 0d43 01       		.byte	0x1
 2316 0d44 13       		.uleb128 0x13
 2317 0d45 89080000 		.4byte	.LASF208
 2318 0d49 02       		.byte	0x2
 2319 0d4a 13       		.uleb128 0x13
 2320 0d4b B6080000 		.4byte	.LASF209
 2321 0d4f 04       		.byte	0x4
 2322 0d50 00       		.byte	0
 2323 0d51 15       		.uleb128 0x15
 2324 0d52 78       		.byte	0x78
 2325 0d53 03       		.byte	0x3
 2326 0d54 0205     		.2byte	0x502
 2327 0d56 1E0E0000 		.4byte	0xe1e
 2328 0d5a 16       		.uleb128 0x16
 2329 0d5b 29050000 		.4byte	.LASF210
 2330 0d5f 03       		.byte	0x3
 2331 0d60 0405     		.2byte	0x504
 2332 0d62 B8000000 		.4byte	0xb8
 2333 0d66 00       		.byte	0
 2334 0d67 16       		.uleb128 0x16
 2335 0d68 D50E0000 		.4byte	.LASF211
 2336 0d6c 03       		.byte	0x3
 2337 0d6d 0505     		.2byte	0x505
 2338 0d6f B8000000 		.4byte	0xb8
 2339 0d73 04       		.byte	0x4
 2340 0d74 16       		.uleb128 0x16
 2341 0d75 9F0B0000 		.4byte	.LASF212
 2342 0d79 03       		.byte	0x3
 2343 0d7a 0605     		.2byte	0x506
 2344 0d7c B8000000 		.4byte	0xb8
 2345 0d80 08       		.byte	0x8
 2346 0d81 16       		.uleb128 0x16
 2347 0d82 440E0000 		.4byte	.LASF213
 2348 0d86 03       		.byte	0x3
 2349 0d87 0705     		.2byte	0x507
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 134


 2350 0d89 B8000000 		.4byte	0xb8
 2351 0d8d 0C       		.byte	0xc
 2352 0d8e 16       		.uleb128 0x16
 2353 0d8f E6040000 		.4byte	.LASF214
 2354 0d93 03       		.byte	0x3
 2355 0d94 0805     		.2byte	0x508
 2356 0d96 B8000000 		.4byte	0xb8
 2357 0d9a 10       		.byte	0x10
 2358 0d9b 16       		.uleb128 0x16
 2359 0d9c 41080000 		.4byte	.LASF215
 2360 0da0 03       		.byte	0x3
 2361 0da1 0905     		.2byte	0x509
 2362 0da3 1F0D0000 		.4byte	0xd1f
 2363 0da7 14       		.byte	0x14
 2364 0da8 16       		.uleb128 0x16
 2365 0da9 72070000 		.4byte	.LASF216
 2366 0dad 03       		.byte	0x3
 2367 0dae 0A05     		.2byte	0x50a
 2368 0db0 B8000000 		.4byte	0xb8
 2369 0db4 18       		.byte	0x18
 2370 0db5 16       		.uleb128 0x16
 2371 0db6 A6100000 		.4byte	.LASF217
 2372 0dba 03       		.byte	0x3
 2373 0dbb 0B05     		.2byte	0x50b
 2374 0dbd 1E0E0000 		.4byte	0xe1e
 2375 0dc1 1C       		.byte	0x1c
 2376 0dc2 16       		.uleb128 0x16
 2377 0dc3 EA110000 		.4byte	.LASF218
 2378 0dc7 03       		.byte	0x3
 2379 0dc8 0C05     		.2byte	0x50c
 2380 0dca B8000000 		.4byte	0xb8
 2381 0dce 5C       		.byte	0x5c
 2382 0dcf 16       		.uleb128 0x16
 2383 0dd0 1C030000 		.4byte	.LASF219
 2384 0dd4 03       		.byte	0x3
 2385 0dd5 0D05     		.2byte	0x50d
 2386 0dd7 B8000000 		.4byte	0xb8
 2387 0ddb 60       		.byte	0x60
 2388 0ddc 16       		.uleb128 0x16
 2389 0ddd 4E110000 		.4byte	.LASF220
 2390 0de1 03       		.byte	0x3
 2391 0de2 0E05     		.2byte	0x50e
 2392 0de4 B8000000 		.4byte	0xb8
 2393 0de8 64       		.byte	0x64
 2394 0de9 16       		.uleb128 0x16
 2395 0dea 360B0000 		.4byte	.LASF221
 2396 0dee 03       		.byte	0x3
 2397 0def 0F05     		.2byte	0x50f
 2398 0df1 B8000000 		.4byte	0xb8
 2399 0df5 68       		.byte	0x68
 2400 0df6 16       		.uleb128 0x16
 2401 0df7 31080000 		.4byte	.LASF222
 2402 0dfb 03       		.byte	0x3
 2403 0dfc 1005     		.2byte	0x510
 2404 0dfe B8000000 		.4byte	0xb8
 2405 0e02 6C       		.byte	0x6c
 2406 0e03 16       		.uleb128 0x16
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 135


 2407 0e04 E9100000 		.4byte	.LASF223
 2408 0e08 03       		.byte	0x3
 2409 0e09 1105     		.2byte	0x511
 2410 0e0b 2E0E0000 		.4byte	0xe2e
 2411 0e0f 70       		.byte	0x70
 2412 0e10 16       		.uleb128 0x16
 2413 0e11 00070000 		.4byte	.LASF224
 2414 0e15 03       		.byte	0x3
 2415 0e16 1205     		.2byte	0x512
 2416 0e18 B8000000 		.4byte	0xb8
 2417 0e1c 74       		.byte	0x74
 2418 0e1d 00       		.byte	0
 2419 0e1e 07       		.uleb128 0x7
 2420 0e1f B8000000 		.4byte	0xb8
 2421 0e23 2E0E0000 		.4byte	0xe2e
 2422 0e27 08       		.uleb128 0x8
 2423 0e28 C3000000 		.4byte	0xc3
 2424 0e2c 0F       		.byte	0xf
 2425 0e2d 00       		.byte	0
 2426 0e2e 02       		.uleb128 0x2
 2427 0e2f 01       		.byte	0x1
 2428 0e30 02       		.byte	0x2
 2429 0e31 1B060000 		.4byte	.LASF225
 2430 0e35 0F       		.uleb128 0xf
 2431 0e36 15050000 		.4byte	.LASF226
 2432 0e3a 03       		.byte	0x3
 2433 0e3b 1305     		.2byte	0x513
 2434 0e3d 510D0000 		.4byte	0xd51
 2435 0e41 12       		.uleb128 0x12
 2436 0e42 04       		.byte	0x4
 2437 0e43 90000000 		.4byte	0x90
 2438 0e47 02       		.byte	0x2
 2439 0e48 5C02     		.2byte	0x25c
 2440 0e4a 700E0000 		.4byte	0xe70
 2441 0e4e 13       		.uleb128 0x13
 2442 0e4f 07020000 		.4byte	.LASF227
 2443 0e53 00       		.byte	0
 2444 0e54 14       		.uleb128 0x14
 2445 0e55 3F0C0000 		.4byte	.LASF228
 2446 0e59 01004A00 		.4byte	0x4a0001
 2447 0e5d 14       		.uleb128 0x14
 2448 0e5e 70010000 		.4byte	.LASF229
 2449 0e62 02004A00 		.4byte	0x4a0002
 2450 0e66 14       		.uleb128 0x14
 2451 0e67 870B0000 		.4byte	.LASF230
 2452 0e6b 03004A00 		.4byte	0x4a0003
 2453 0e6f 00       		.byte	0
 2454 0e70 0F       		.uleb128 0xf
 2455 0e71 B0050000 		.4byte	.LASF231
 2456 0e75 02       		.byte	0x2
 2457 0e76 6102     		.2byte	0x261
 2458 0e78 410E0000 		.4byte	0xe41
 2459 0e7c 12       		.uleb128 0x12
 2460 0e7d 01       		.byte	0x1
 2461 0e7e 2C000000 		.4byte	0x2c
 2462 0e82 02       		.byte	0x2
 2463 0e83 2107     		.2byte	0x721
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 136


 2464 0e85 A20E0000 		.4byte	0xea2
 2465 0e89 13       		.uleb128 0x13
 2466 0e8a 0E010000 		.4byte	.LASF232
 2467 0e8e 00       		.byte	0
 2468 0e8f 13       		.uleb128 0x13
 2469 0e90 D00B0000 		.4byte	.LASF233
 2470 0e94 01       		.byte	0x1
 2471 0e95 13       		.uleb128 0x13
 2472 0e96 EA0A0000 		.4byte	.LASF234
 2473 0e9a 02       		.byte	0x2
 2474 0e9b 13       		.uleb128 0x13
 2475 0e9c 360F0000 		.4byte	.LASF235
 2476 0ea0 03       		.byte	0x3
 2477 0ea1 00       		.byte	0
 2478 0ea2 0F       		.uleb128 0xf
 2479 0ea3 8E0F0000 		.4byte	.LASF236
 2480 0ea7 02       		.byte	0x2
 2481 0ea8 2607     		.2byte	0x726
 2482 0eaa 7C0E0000 		.4byte	0xe7c
 2483 0eae 09       		.uleb128 0x9
 2484 0eaf 14       		.byte	0x14
 2485 0eb0 04       		.byte	0x4
 2486 0eb1 3B       		.byte	0x3b
 2487 0eb2 F30E0000 		.4byte	0xef3
 2488 0eb6 0A       		.uleb128 0xa
 2489 0eb7 38120000 		.4byte	.LASF237
 2490 0ebb 04       		.byte	0x4
 2491 0ebc 3D       		.byte	0x3d
 2492 0ebd B8000000 		.4byte	0xb8
 2493 0ec1 00       		.byte	0
 2494 0ec2 0A       		.uleb128 0xa
 2495 0ec3 41040000 		.4byte	.LASF238
 2496 0ec7 04       		.byte	0x4
 2497 0ec8 3E       		.byte	0x3e
 2498 0ec9 B8000000 		.4byte	0xb8
 2499 0ecd 04       		.byte	0x4
 2500 0ece 0A       		.uleb128 0xa
 2501 0ecf 6B020000 		.4byte	.LASF239
 2502 0ed3 04       		.byte	0x4
 2503 0ed4 3F       		.byte	0x3f
 2504 0ed5 F30E0000 		.4byte	0xef3
 2505 0ed9 08       		.byte	0x8
 2506 0eda 0A       		.uleb128 0xa
 2507 0edb EB0D0000 		.4byte	.LASF240
 2508 0edf 04       		.byte	0x4
 2509 0ee0 40       		.byte	0x40
 2510 0ee1 B8000000 		.4byte	0xb8
 2511 0ee5 0C       		.byte	0xc
 2512 0ee6 0A       		.uleb128 0xa
 2513 0ee7 830F0000 		.4byte	.LASF241
 2514 0eeb 04       		.byte	0x4
 2515 0eec 45       		.byte	0x45
 2516 0eed B8000000 		.4byte	0xb8
 2517 0ef1 10       		.byte	0x10
 2518 0ef2 00       		.byte	0
 2519 0ef3 10       		.uleb128 0x10
 2520 0ef4 04       		.byte	0x4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 137


 2521 0ef5 F90E0000 		.4byte	0xef9
 2522 0ef9 06       		.uleb128 0x6
 2523 0efa 350E0000 		.4byte	0xe35
 2524 0efe 03       		.uleb128 0x3
 2525 0eff 69050000 		.4byte	.LASF242
 2526 0f03 04       		.byte	0x4
 2527 0f04 48       		.byte	0x48
 2528 0f05 AE0E0000 		.4byte	0xeae
 2529 0f09 17       		.uleb128 0x17
 2530 0f0a 88000000 		.4byte	.LASF245
 2531 0f0e 02       		.byte	0x2
 2532 0f0f 6F08     		.2byte	0x86f
 2533 0f11 700E0000 		.4byte	0xe70
 2534 0f15 03       		.byte	0x3
 2535 0f16 3F0F0000 		.4byte	0xf3f
 2536 0f1a 18       		.uleb128 0x18
 2537 0f1b 8E070000 		.4byte	.LASF243
 2538 0f1f 02       		.byte	0x2
 2539 0f20 6F08     		.2byte	0x86f
 2540 0f22 A20E0000 		.4byte	0xea2
 2541 0f26 18       		.uleb128 0x18
 2542 0f27 EB010000 		.4byte	.LASF244
 2543 0f2b 02       		.byte	0x2
 2544 0f2c 6F08     		.2byte	0x86f
 2545 0f2e B8000000 		.4byte	0xb8
 2546 0f32 19       		.uleb128 0x19
 2547 0f33 7E0E0000 		.4byte	.LASF248
 2548 0f37 02       		.byte	0x2
 2549 0f38 7108     		.2byte	0x871
 2550 0f3a 700E0000 		.4byte	0xe70
 2551 0f3e 00       		.byte	0
 2552 0f3f 17       		.uleb128 0x17
 2553 0f40 7D090000 		.4byte	.LASF246
 2554 0f44 02       		.byte	0x2
 2555 0f45 5207     		.2byte	0x752
 2556 0f47 700E0000 		.4byte	0xe70
 2557 0f4b 03       		.byte	0x3
 2558 0f4c 810F0000 		.4byte	0xf81
 2559 0f50 18       		.uleb128 0x18
 2560 0f51 8E070000 		.4byte	.LASF243
 2561 0f55 02       		.byte	0x2
 2562 0f56 5207     		.2byte	0x752
 2563 0f58 A20E0000 		.4byte	0xea2
 2564 0f5c 18       		.uleb128 0x18
 2565 0f5d EB010000 		.4byte	.LASF244
 2566 0f61 02       		.byte	0x2
 2567 0f62 5307     		.2byte	0x753
 2568 0f64 B8000000 		.4byte	0xb8
 2569 0f68 18       		.uleb128 0x18
 2570 0f69 D7070000 		.4byte	.LASF247
 2571 0f6d 02       		.byte	0x2
 2572 0f6e 5307     		.2byte	0x753
 2573 0f70 B8000000 		.4byte	0xb8
 2574 0f74 19       		.uleb128 0x19
 2575 0f75 7E0E0000 		.4byte	.LASF248
 2576 0f79 02       		.byte	0x2
 2577 0f7a 5507     		.2byte	0x755
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 138


 2578 0f7c 700E0000 		.4byte	0xe70
 2579 0f80 00       		.byte	0
 2580 0f81 1A       		.uleb128 0x1a
 2581 0f82 C10C0000 		.4byte	.LASF250
 2582 0f86 03       		.byte	0x3
 2583 0f87 9E05     		.2byte	0x59e
 2584 0f89 03       		.byte	0x3
 2585 0f8a 9B0F0000 		.4byte	0xf9b
 2586 0f8e 18       		.uleb128 0x18
 2587 0f8f 3C040000 		.4byte	.LASF249
 2588 0f93 03       		.byte	0x3
 2589 0f94 9E05     		.2byte	0x59e
 2590 0f96 9B0F0000 		.4byte	0xf9b
 2591 0f9a 00       		.byte	0
 2592 0f9b 10       		.uleb128 0x10
 2593 0f9c 04       		.byte	0x4
 2594 0f9d CF070000 		.4byte	0x7cf
 2595 0fa1 1B       		.uleb128 0x1b
 2596 0fa2 1A120000 		.4byte	.LASF252
 2597 0fa6 0C       		.byte	0xc
 2598 0fa7 3C       		.byte	0x3c
 2599 0fa8 03       		.byte	0x3
 2600 0fa9 1C       		.uleb128 0x1c
 2601 0faa C6050000 		.4byte	.LASF251
 2602 0fae 0C       		.byte	0xc
 2603 0faf 62       		.byte	0x62
 2604 0fb0 03       		.byte	0x3
 2605 0fb1 C10F0000 		.4byte	0xfc1
 2606 0fb5 1D       		.uleb128 0x1d
 2607 0fb6 D7070000 		.4byte	.LASF247
 2608 0fba 0C       		.byte	0xc
 2609 0fbb 62       		.byte	0x62
 2610 0fbc B8000000 		.4byte	0xb8
 2611 0fc0 00       		.byte	0
 2612 0fc1 1B       		.uleb128 0x1b
 2613 0fc2 EC000000 		.4byte	.LASF253
 2614 0fc6 0C       		.byte	0xc
 2615 0fc7 4C       		.byte	0x4c
 2616 0fc8 03       		.byte	0x3
 2617 0fc9 1A       		.uleb128 0x1a
 2618 0fca A40F0000 		.4byte	.LASF254
 2619 0fce 03       		.byte	0x3
 2620 0fcf 6D06     		.2byte	0x66d
 2621 0fd1 03       		.byte	0x3
 2622 0fd2 EF0F0000 		.4byte	0xfef
 2623 0fd6 18       		.uleb128 0x18
 2624 0fd7 3C040000 		.4byte	.LASF249
 2625 0fdb 03       		.byte	0x3
 2626 0fdc 6D06     		.2byte	0x66d
 2627 0fde 9B0F0000 		.4byte	0xf9b
 2628 0fe2 18       		.uleb128 0x18
 2629 0fe3 EA110000 		.4byte	.LASF218
 2630 0fe7 03       		.byte	0x3
 2631 0fe8 6D06     		.2byte	0x66d
 2632 0fea B8000000 		.4byte	0xb8
 2633 0fee 00       		.byte	0
 2634 0fef 1A       		.uleb128 0x1a
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 139


 2635 0ff0 A3080000 		.4byte	.LASF255
 2636 0ff4 03       		.byte	0x3
 2637 0ff5 DB05     		.2byte	0x5db
 2638 0ff7 03       		.byte	0x3
 2639 0ff8 15100000 		.4byte	0x1015
 2640 0ffc 18       		.uleb128 0x18
 2641 0ffd 3C040000 		.4byte	.LASF249
 2642 1001 03       		.byte	0x3
 2643 1002 DB05     		.2byte	0x5db
 2644 1004 9B0F0000 		.4byte	0xf9b
 2645 1008 18       		.uleb128 0x18
 2646 1009 B7060000 		.4byte	.LASF256
 2647 100d 03       		.byte	0x3
 2648 100e DB05     		.2byte	0x5db
 2649 1010 B8000000 		.4byte	0xb8
 2650 1014 00       		.byte	0
 2651 1015 1E       		.uleb128 0x1e
 2652 1016 680B0000 		.4byte	.LASF257
 2653 101a 04       		.byte	0x4
 2654 101b 9203     		.2byte	0x392
 2655 101d 03       		.byte	0x3
 2656 101e 1E       		.uleb128 0x1e
 2657 101f 8D060000 		.4byte	.LASF258
 2658 1023 04       		.byte	0x4
 2659 1024 AE03     		.2byte	0x3ae
 2660 1026 03       		.byte	0x3
 2661 1027 17       		.uleb128 0x17
 2662 1028 570D0000 		.4byte	.LASF259
 2663 102c 02       		.byte	0x2
 2664 102d 4908     		.2byte	0x849
 2665 102f 700E0000 		.4byte	0xe70
 2666 1033 03       		.byte	0x3
 2667 1034 5D100000 		.4byte	0x105d
 2668 1038 18       		.uleb128 0x18
 2669 1039 8E070000 		.4byte	.LASF243
 2670 103d 02       		.byte	0x2
 2671 103e 4908     		.2byte	0x849
 2672 1040 A20E0000 		.4byte	0xea2
 2673 1044 18       		.uleb128 0x18
 2674 1045 EB010000 		.4byte	.LASF244
 2675 1049 02       		.byte	0x2
 2676 104a 4908     		.2byte	0x849
 2677 104c B8000000 		.4byte	0xb8
 2678 1050 19       		.uleb128 0x19
 2679 1051 7E0E0000 		.4byte	.LASF248
 2680 1055 02       		.byte	0x2
 2681 1056 4B08     		.2byte	0x84b
 2682 1058 700E0000 		.4byte	0xe70
 2683 105c 00       		.byte	0
 2684 105d 1F       		.uleb128 0x1f
 2685 105e 06030000 		.4byte	.LASF260
 2686 1062 01       		.byte	0x1
 2687 1063 80       		.byte	0x80
 2688 1064 00000000 		.4byte	.LFB188
 2689 1068 8C000000 		.4byte	.LFE188-.LFB188
 2690 106c 01       		.uleb128 0x1
 2691 106d 9C       		.byte	0x9c
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 140


 2692 106e A4110000 		.4byte	0x11a4
 2693 1072 20       		.uleb128 0x20
 2694 1073 110C0000 		.4byte	.LASF263
 2695 1077 01       		.byte	0x1
 2696 1078 80       		.byte	0x80
 2697 1079 A4110000 		.4byte	0x11a4
 2698 107d 00000000 		.4byte	.LLST0
 2699 1081 21       		.uleb128 0x21
 2700 1082 DB100000 		.4byte	.LASF269
 2701 1086 01       		.byte	0x1
 2702 1087 82       		.byte	0x82
 2703 1088 2E0E0000 		.4byte	0xe2e
 2704 108c 00       		.byte	0
 2705 108d 22       		.uleb128 0x22
 2706 108e C10F0000 		.4byte	0xfc1
 2707 1092 04000000 		.4byte	.LBB38
 2708 1096 1A000000 		.4byte	.LBE38-.LBB38
 2709 109a 01       		.byte	0x1
 2710 109b 86       		.byte	0x86
 2711 109c D6100000 		.4byte	0x10d6
 2712 10a0 23       		.uleb128 0x23
 2713 10a1 090F0000 		.4byte	0xf09
 2714 10a5 04000000 		.4byte	.LBB39
 2715 10a9 1A000000 		.4byte	.LBE39-.LBB39
 2716 10ad 0C       		.byte	0xc
 2717 10ae 4E       		.byte	0x4e
 2718 10af 24       		.uleb128 0x24
 2719 10b0 260F0000 		.4byte	0xf26
 2720 10b4 2C000000 		.4byte	.LLST1
 2721 10b8 24       		.uleb128 0x24
 2722 10b9 1A0F0000 		.4byte	0xf1a
 2723 10bd 40000000 		.4byte	.LLST2
 2724 10c1 25       		.uleb128 0x25
 2725 10c2 04000000 		.4byte	.LBB40
 2726 10c6 1A000000 		.4byte	.LBE40-.LBB40
 2727 10ca 26       		.uleb128 0x26
 2728 10cb 320F0000 		.4byte	0xf32
 2729 10cf 54000000 		.4byte	.LLST3
 2730 10d3 00       		.byte	0
 2731 10d4 00       		.byte	0
 2732 10d5 00       		.byte	0
 2733 10d6 22       		.uleb128 0x22
 2734 10d7 A90F0000 		.4byte	0xfa9
 2735 10db 20000000 		.4byte	.LBB41
 2736 10df 1A000000 		.4byte	.LBE41-.LBB41
 2737 10e3 01       		.byte	0x1
 2738 10e4 87       		.byte	0x87
 2739 10e5 31110000 		.4byte	0x1131
 2740 10e9 24       		.uleb128 0x24
 2741 10ea B50F0000 		.4byte	0xfb5
 2742 10ee 6C000000 		.4byte	.LLST4
 2743 10f2 23       		.uleb128 0x23
 2744 10f3 3F0F0000 		.4byte	0xf3f
 2745 10f7 20000000 		.4byte	.LBB42
 2746 10fb 1A000000 		.4byte	.LBE42-.LBB42
 2747 10ff 0C       		.byte	0xc
 2748 1100 64       		.byte	0x64
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 141


 2749 1101 24       		.uleb128 0x24
 2750 1102 680F0000 		.4byte	0xf68
 2751 1106 6C000000 		.4byte	.LLST4
 2752 110a 24       		.uleb128 0x24
 2753 110b 5C0F0000 		.4byte	0xf5c
 2754 110f 8B000000 		.4byte	.LLST6
 2755 1113 24       		.uleb128 0x24
 2756 1114 500F0000 		.4byte	0xf50
 2757 1118 9F000000 		.4byte	.LLST7
 2758 111c 25       		.uleb128 0x25
 2759 111d 20000000 		.4byte	.LBB43
 2760 1121 1A000000 		.4byte	.LBE43-.LBB43
 2761 1125 26       		.uleb128 0x26
 2762 1126 740F0000 		.4byte	0xf74
 2763 112a B3000000 		.4byte	.LLST8
 2764 112e 00       		.byte	0
 2765 112f 00       		.byte	0
 2766 1130 00       		.byte	0
 2767 1131 22       		.uleb128 0x22
 2768 1132 A10F0000 		.4byte	0xfa1
 2769 1136 3A000000 		.4byte	.LBB44
 2770 113a 32000000 		.4byte	.LBE44-.LBB44
 2771 113e 01       		.byte	0x1
 2772 113f 88       		.byte	0x88
 2773 1140 7A110000 		.4byte	0x117a
 2774 1144 23       		.uleb128 0x23
 2775 1145 27100000 		.4byte	0x1027
 2776 1149 3A000000 		.4byte	.LBB45
 2777 114d 32000000 		.4byte	.LBE45-.LBB45
 2778 1151 0C       		.byte	0xc
 2779 1152 3E       		.byte	0x3e
 2780 1153 24       		.uleb128 0x24
 2781 1154 44100000 		.4byte	0x1044
 2782 1158 CB000000 		.4byte	.LLST9
 2783 115c 24       		.uleb128 0x24
 2784 115d 38100000 		.4byte	0x1038
 2785 1161 DF000000 		.4byte	.LLST10
 2786 1165 25       		.uleb128 0x25
 2787 1166 3A000000 		.4byte	.LBB46
 2788 116a 32000000 		.4byte	.LBE46-.LBB46
 2789 116e 26       		.uleb128 0x26
 2790 116f 50100000 		.4byte	0x1050
 2791 1173 F3000000 		.4byte	.LLST11
 2792 1177 00       		.byte	0
 2793 1178 00       		.byte	0
 2794 1179 00       		.byte	0
 2795 117a 27       		.uleb128 0x27
 2796 117b 76000000 		.4byte	.LVL8
 2797 117f 17150000 		.4byte	0x1517
 2798 1183 93110000 		.4byte	0x1193
 2799 1187 28       		.uleb128 0x28
 2800 1188 01       		.uleb128 0x1
 2801 1189 50       		.byte	0x50
 2802 118a 02       		.uleb128 0x2
 2803 118b 75       		.byte	0x75
 2804 118c 00       		.sleb128 0
 2805 118d 28       		.uleb128 0x28
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 142


 2806 118e 01       		.uleb128 0x1
 2807 118f 51       		.byte	0x51
 2808 1190 01       		.uleb128 0x1
 2809 1191 30       		.byte	0x30
 2810 1192 00       		.byte	0
 2811 1193 29       		.uleb128 0x29
 2812 1194 7E000000 		.4byte	.LVL9
 2813 1198 23150000 		.4byte	0x1523
 2814 119c 28       		.uleb128 0x28
 2815 119d 01       		.uleb128 0x1
 2816 119e 50       		.byte	0x50
 2817 119f 02       		.uleb128 0x2
 2818 11a0 75       		.byte	0x75
 2819 11a1 00       		.sleb128 0
 2820 11a2 00       		.byte	0
 2821 11a3 00       		.byte	0
 2822 11a4 10       		.uleb128 0x10
 2823 11a5 04       		.byte	0x4
 2824 11a6 AA110000 		.4byte	0x11aa
 2825 11aa 06       		.uleb128 0x6
 2826 11ab FE0E0000 		.4byte	0xefe
 2827 11af 1F       		.uleb128 0x1f
 2828 11b0 8C020000 		.4byte	.LASF261
 2829 11b4 01       		.byte	0x1
 2830 11b5 E3       		.byte	0xe3
 2831 11b6 00000000 		.4byte	.LFB190
 2832 11ba 24000000 		.4byte	.LFE190-.LFB190
 2833 11be 01       		.uleb128 0x1
 2834 11bf 9C       		.byte	0x9c
 2835 11c0 F9110000 		.4byte	0x11f9
 2836 11c4 27       		.uleb128 0x27
 2837 11c5 12000000 		.4byte	.LVL11
 2838 11c9 2F150000 		.4byte	0x152f
 2839 11cd E0110000 		.4byte	0x11e0
 2840 11d1 28       		.uleb128 0x28
 2841 11d2 01       		.uleb128 0x1
 2842 11d3 50       		.byte	0x50
 2843 11d4 05       		.uleb128 0x5
 2844 11d5 0C       		.byte	0xc
 2845 11d6 00001D41 		.4byte	0x411d0000
 2846 11da 28       		.uleb128 0x28
 2847 11db 01       		.uleb128 0x1
 2848 11dc 51       		.byte	0x51
 2849 11dd 01       		.uleb128 0x1
 2850 11de 31       		.byte	0x31
 2851 11df 00       		.byte	0
 2852 11e0 29       		.uleb128 0x29
 2853 11e1 1C000000 		.4byte	.LVL12
 2854 11e5 2F150000 		.4byte	0x152f
 2855 11e9 28       		.uleb128 0x28
 2856 11ea 01       		.uleb128 0x1
 2857 11eb 50       		.byte	0x50
 2858 11ec 05       		.uleb128 0x5
 2859 11ed 0C       		.byte	0xc
 2860 11ee 00001D41 		.4byte	0x411d0000
 2861 11f2 28       		.uleb128 0x28
 2862 11f3 01       		.uleb128 0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 143


 2863 11f4 51       		.byte	0x51
 2864 11f5 01       		.uleb128 0x1
 2865 11f6 30       		.byte	0x30
 2866 11f7 00       		.byte	0
 2867 11f8 00       		.byte	0
 2868 11f9 1F       		.uleb128 0x1f
 2869 11fa 6C030000 		.4byte	.LASF262
 2870 11fe 01       		.byte	0x1
 2871 11ff FE       		.byte	0xfe
 2872 1200 00000000 		.4byte	.LFB191
 2873 1204 28000000 		.4byte	.LFE191-.LFB191
 2874 1208 01       		.uleb128 0x1
 2875 1209 9C       		.byte	0x9c
 2876 120a 1C120000 		.4byte	0x121c
 2877 120e 2A       		.uleb128 0x2a
 2878 120f 17030000 		.4byte	.LASF264
 2879 1213 01       		.byte	0x1
 2880 1214 FE       		.byte	0xfe
 2881 1215 930C0000 		.4byte	0xc93
 2882 1219 01       		.uleb128 0x1
 2883 121a 50       		.byte	0x50
 2884 121b 00       		.byte	0
 2885 121c 2B       		.uleb128 0x2b
 2886 121d 61070000 		.4byte	.LASF265
 2887 1221 01       		.byte	0x1
 2888 1222 1A01     		.2byte	0x11a
 2889 1224 00000000 		.4byte	.LFB192
 2890 1228 02000000 		.4byte	.LFE192-.LFB192
 2891 122c 01       		.uleb128 0x1
 2892 122d 9C       		.byte	0x9c
 2893 122e 2B       		.uleb128 0x2b
 2894 122f EB0F0000 		.4byte	.LASF266
 2895 1233 01       		.byte	0x1
 2896 1234 3601     		.2byte	0x136
 2897 1236 00000000 		.4byte	.LFB193
 2898 123a 02000000 		.4byte	.LFE193-.LFB193
 2899 123e 01       		.uleb128 0x1
 2900 123f 9C       		.byte	0x9c
 2901 1240 2C       		.uleb128 0x2c
 2902 1241 250B0000 		.4byte	.LASF267
 2903 1245 01       		.byte	0x1
 2904 1246 5201     		.2byte	0x152
 2905 1248 00000000 		.4byte	.LFB194
 2906 124c 2C000000 		.4byte	.LFE194-.LFB194
 2907 1250 01       		.uleb128 0x1
 2908 1251 9C       		.byte	0x9c
 2909 1252 B4120000 		.4byte	0x12b4
 2910 1256 2D       		.uleb128 0x2d
 2911 1257 9B0A0000 		.4byte	.LASF268
 2912 125b 01       		.byte	0x1
 2913 125c 5201     		.2byte	0x152
 2914 125e B8000000 		.4byte	0xb8
 2915 1262 0B010000 		.4byte	.LLST12
 2916 1266 2E       		.uleb128 0x2e
 2917 1267 70110000 		.4byte	.LASF270
 2918 126b 01       		.byte	0x1
 2919 126c 5401     		.2byte	0x154
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 144


 2920 126e B8000000 		.4byte	0xb8
 2921 1272 2C010000 		.4byte	.LLST13
 2922 1276 2F       		.uleb128 0x2f
 2923 1277 C90F0000 		.4byte	0xfc9
 2924 127b 08000000 		.4byte	.LBB47
 2925 127f 14000000 		.4byte	.LBE47-.LBB47
 2926 1283 01       		.byte	0x1
 2927 1284 5801     		.2byte	0x158
 2928 1286 24       		.uleb128 0x24
 2929 1287 E20F0000 		.4byte	0xfe2
 2930 128b 4E010000 		.4byte	.LLST14
 2931 128f 24       		.uleb128 0x24
 2932 1290 D60F0000 		.4byte	0xfd6
 2933 1294 61010000 		.4byte	.LLST15
 2934 1298 29       		.uleb128 0x29
 2935 1299 14000000 		.4byte	.LVL17
 2936 129d 3B150000 		.4byte	0x153b
 2937 12a1 28       		.uleb128 0x28
 2938 12a2 01       		.uleb128 0x1
 2939 12a3 50       		.byte	0x50
 2940 12a4 05       		.uleb128 0x5
 2941 12a5 03       		.byte	0x3
 2942 12a6 00000000 		.4byte	.LC1
 2943 12aa 28       		.uleb128 0x28
 2944 12ab 01       		.uleb128 0x1
 2945 12ac 51       		.byte	0x51
 2946 12ad 03       		.uleb128 0x3
 2947 12ae 0A       		.byte	0xa
 2948 12af 6F06     		.2byte	0x66f
 2949 12b1 00       		.byte	0
 2950 12b2 00       		.byte	0
 2951 12b3 00       		.byte	0
 2952 12b4 2C       		.uleb128 0x2c
 2953 12b5 76000000 		.4byte	.LASF271
 2954 12b9 01       		.byte	0x1
 2955 12ba 6901     		.2byte	0x169
 2956 12bc 00000000 		.4byte	.LFB195
 2957 12c0 48000000 		.4byte	.LFE195-.LFB195
 2958 12c4 01       		.uleb128 0x1
 2959 12c5 9C       		.byte	0x9c
 2960 12c6 28130000 		.4byte	0x1328
 2961 12ca 2D       		.uleb128 0x2d
 2962 12cb B7060000 		.4byte	.LASF256
 2963 12cf 01       		.byte	0x1
 2964 12d0 6901     		.2byte	0x169
 2965 12d2 B8000000 		.4byte	0xb8
 2966 12d6 79010000 		.4byte	.LLST16
 2967 12da 2E       		.uleb128 0x2e
 2968 12db 98060000 		.4byte	.LASF272
 2969 12df 01       		.byte	0x1
 2970 12e0 6B01     		.2byte	0x16b
 2971 12e2 320C0000 		.4byte	0xc32
 2972 12e6 A3010000 		.4byte	.LLST17
 2973 12ea 2F       		.uleb128 0x2f
 2974 12eb EF0F0000 		.4byte	0xfef
 2975 12ef 1A000000 		.4byte	.LBB49
 2976 12f3 12000000 		.4byte	.LBE49-.LBB49
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 145


 2977 12f7 01       		.byte	0x1
 2978 12f8 6E01     		.2byte	0x16e
 2979 12fa 24       		.uleb128 0x24
 2980 12fb 08100000 		.4byte	0x1008
 2981 12ff C2010000 		.4byte	.LLST18
 2982 1303 24       		.uleb128 0x24
 2983 1304 FC0F0000 		.4byte	0xffc
 2984 1308 D5010000 		.4byte	.LLST19
 2985 130c 29       		.uleb128 0x29
 2986 130d 28000000 		.4byte	.LVL24
 2987 1311 3B150000 		.4byte	0x153b
 2988 1315 28       		.uleb128 0x28
 2989 1316 01       		.uleb128 0x1
 2990 1317 50       		.byte	0x50
 2991 1318 05       		.uleb128 0x5
 2992 1319 03       		.byte	0x3
 2993 131a 00000000 		.4byte	.LC1
 2994 131e 28       		.uleb128 0x28
 2995 131f 01       		.uleb128 0x1
 2996 1320 51       		.byte	0x51
 2997 1321 03       		.uleb128 0x3
 2998 1322 0A       		.byte	0xa
 2999 1323 DD05     		.2byte	0x5dd
 3000 1325 00       		.byte	0
 3001 1326 00       		.byte	0
 3002 1327 00       		.byte	0
 3003 1328 30       		.uleb128 0x30
 3004 1329 43020000 		.4byte	.LASF297
 3005 132d 01       		.byte	0x1
 3006 132e 8201     		.2byte	0x182
 3007 1330 B8000000 		.4byte	0xb8
 3008 1334 00000000 		.4byte	.LFB196
 3009 1338 1C000000 		.4byte	.LFE196-.LFB196
 3010 133c 01       		.uleb128 0x1
 3011 133d 9C       		.byte	0x9c
 3012 133e 86130000 		.4byte	0x1386
 3013 1342 2D       		.uleb128 0x2d
 3014 1343 600F0000 		.4byte	.LASF273
 3015 1347 01       		.byte	0x1
 3016 1348 8201     		.2byte	0x182
 3017 134a B90C0000 		.4byte	0xcb9
 3018 134e ED010000 		.4byte	.LLST20
 3019 1352 2E       		.uleb128 0x2e
 3020 1353 BC0F0000 		.4byte	.LASF274
 3021 1357 01       		.byte	0x1
 3022 1358 8401     		.2byte	0x184
 3023 135a 320C0000 		.4byte	0xc32
 3024 135e 0E020000 		.4byte	.LLST21
 3025 1362 2E       		.uleb128 0x2e
 3026 1363 7A040000 		.4byte	.LASF275
 3027 1367 01       		.byte	0x1
 3028 1368 8501     		.2byte	0x185
 3029 136a 6D0C0000 		.4byte	0xc6d
 3030 136e 2D020000 		.4byte	.LLST22
 3031 1372 29       		.uleb128 0x29
 3032 1373 0A000000 		.4byte	.LVL30
 3033 1377 47150000 		.4byte	0x1547
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 146


 3034 137b 28       		.uleb128 0x28
 3035 137c 01       		.uleb128 0x1
 3036 137d 50       		.byte	0x50
 3037 137e 05       		.uleb128 0x5
 3038 137f 0C       		.byte	0xc
 3039 1380 00001D41 		.4byte	0x411d0000
 3040 1384 00       		.byte	0
 3041 1385 00       		.byte	0
 3042 1386 2C       		.uleb128 0x2c
 3043 1387 8F010000 		.4byte	.LASF276
 3044 138b 01       		.byte	0x1
 3045 138c 9F01     		.2byte	0x19f
 3046 138e 00000000 		.4byte	.LFB197
 3047 1392 28000000 		.4byte	.LFE197-.LFB197
 3048 1396 01       		.uleb128 0x1
 3049 1397 9C       		.byte	0x9c
 3050 1398 B3130000 		.4byte	0x13b3
 3051 139c 31       		.uleb128 0x31
 3052 139d 05060000 		.4byte	.LASF277
 3053 13a1 01       		.byte	0x1
 3054 13a2 A101     		.2byte	0x1a1
 3055 13a4 B8000000 		.4byte	0xb8
 3056 13a8 00       		.byte	0
 3057 13a9 32       		.uleb128 0x32
 3058 13aa 1E000000 		.4byte	.LVL35
 3059 13ae 5D100000 		.4byte	0x105d
 3060 13b2 00       		.byte	0
 3061 13b3 1F       		.uleb128 0x1f
 3062 13b4 0F060000 		.4byte	.LASF278
 3063 13b8 01       		.byte	0x1
 3064 13b9 41       		.byte	0x41
 3065 13ba 00000000 		.4byte	.LFB186
 3066 13be 28000000 		.4byte	.LFE186-.LFB186
 3067 13c2 01       		.uleb128 0x1
 3068 13c3 9C       		.byte	0x9c
 3069 13c4 F9130000 		.4byte	0x13f9
 3070 13c8 22       		.uleb128 0x22
 3071 13c9 15100000 		.4byte	0x1015
 3072 13cd 18000000 		.4byte	.LBB51
 3073 13d1 06000000 		.4byte	.LBE51-.LBB51
 3074 13d5 01       		.byte	0x1
 3075 13d6 49       		.byte	0x49
 3076 13d7 EF130000 		.4byte	0x13ef
 3077 13db 29       		.uleb128 0x29
 3078 13dc 1E000000 		.4byte	.LVL37
 3079 13e0 53150000 		.4byte	0x1553
 3080 13e4 28       		.uleb128 0x28
 3081 13e5 01       		.uleb128 0x1
 3082 13e6 50       		.byte	0x50
 3083 13e7 05       		.uleb128 0x5
 3084 13e8 0C       		.byte	0xc
 3085 13e9 00001D41 		.4byte	0x411d0000
 3086 13ed 00       		.byte	0
 3087 13ee 00       		.byte	0
 3088 13ef 32       		.uleb128 0x32
 3089 13f0 0E000000 		.4byte	.LVL36
 3090 13f4 86130000 		.4byte	0x1386
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 147


 3091 13f8 00       		.byte	0
 3092 13f9 1F       		.uleb128 0x1f
 3093 13fa D4000000 		.4byte	.LASF279
 3094 13fe 01       		.byte	0x1
 3095 13ff 5E       		.byte	0x5e
 3096 1400 00000000 		.4byte	.LFB187
 3097 1404 08000000 		.4byte	.LFE187-.LFB187
 3098 1408 01       		.uleb128 0x1
 3099 1409 9C       		.byte	0x9c
 3100 140a 27140000 		.4byte	0x1427
 3101 140e 20       		.uleb128 0x20
 3102 140f 160A0000 		.4byte	.LASF280
 3103 1413 01       		.byte	0x1
 3104 1414 5E       		.byte	0x5e
 3105 1415 FE0B0000 		.4byte	0xbfe
 3106 1419 4B020000 		.4byte	.LLST23
 3107 141d 32       		.uleb128 0x32
 3108 141e 06000000 		.4byte	.LVL39
 3109 1422 B3130000 		.4byte	0x13b3
 3110 1426 00       		.byte	0
 3111 1427 1F       		.uleb128 0x1f
 3112 1428 37100000 		.4byte	.LASF281
 3113 142c 01       		.byte	0x1
 3114 142d AA       		.byte	0xaa
 3115 142e 00000000 		.4byte	.LFB189
 3116 1432 5C000000 		.4byte	.LFE189-.LFB189
 3117 1436 01       		.uleb128 0x1
 3118 1437 9C       		.byte	0x9c
 3119 1438 AD140000 		.4byte	0x14ad
 3120 143c 20       		.uleb128 0x20
 3121 143d 110C0000 		.4byte	.LASF263
 3122 1441 01       		.byte	0x1
 3123 1442 AA       		.byte	0xaa
 3124 1443 B8000000 		.4byte	0xb8
 3125 1447 6C020000 		.4byte	.LLST24
 3126 144b 20       		.uleb128 0x20
 3127 144c 9A010000 		.4byte	.LASF282
 3128 1450 01       		.byte	0x1
 3129 1451 AA       		.byte	0xaa
 3130 1452 B8000000 		.4byte	0xb8
 3131 1456 98020000 		.4byte	.LLST25
 3132 145a 22       		.uleb128 0x22
 3133 145b 1E100000 		.4byte	0x101e
 3134 145f 0A000000 		.4byte	.LBB53
 3135 1463 0A000000 		.4byte	.LBE53-.LBB53
 3136 1467 01       		.byte	0x1
 3137 1468 B0       		.byte	0xb0
 3138 1469 88140000 		.4byte	0x1488
 3139 146d 2F       		.uleb128 0x2f
 3140 146e 810F0000 		.4byte	0xf81
 3141 1472 0A000000 		.4byte	.LBB54
 3142 1476 0A000000 		.4byte	.LBE54-.LBB54
 3143 147a 04       		.byte	0x4
 3144 147b B003     		.2byte	0x3b0
 3145 147d 24       		.uleb128 0x24
 3146 147e 8E0F0000 		.4byte	0xf8e
 3147 1482 C4020000 		.4byte	.LLST26
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 148


 3148 1486 00       		.byte	0
 3149 1487 00       		.byte	0
 3150 1488 32       		.uleb128 0x32
 3151 1489 24000000 		.4byte	.LVL43
 3152 148d 86130000 		.4byte	0x1386
 3153 1491 32       		.uleb128 0x32
 3154 1492 3C000000 		.4byte	.LVL44
 3155 1496 5D100000 		.4byte	0x105d
 3156 149a 32       		.uleb128 0x32
 3157 149b 48000000 		.4byte	.LVL45
 3158 149f B3130000 		.4byte	0x13b3
 3159 14a3 32       		.uleb128 0x32
 3160 14a4 4C000000 		.4byte	.LVL46
 3161 14a8 AF110000 		.4byte	0x11af
 3162 14ac 00       		.byte	0
 3163 14ad 33       		.uleb128 0x33
 3164 14ae A7000000 		.4byte	.LASF283
 3165 14b2 0A       		.byte	0xa
 3166 14b3 A7       		.byte	0xa7
 3167 14b4 B8140000 		.4byte	0x14b8
 3168 14b8 10       		.uleb128 0x10
 3169 14b9 04       		.byte	0x4
 3170 14ba BE140000 		.4byte	0x14be
 3171 14be 06       		.uleb128 0x6
 3172 14bf F30B0000 		.4byte	0xbf3
 3173 14c3 34       		.uleb128 0x34
 3174 14c4 42000000 		.4byte	.LASF284
 3175 14c8 01       		.byte	0x1
 3176 14c9 2B       		.byte	0x2b
 3177 14ca 97000000 		.4byte	0x97
 3178 14ce 05       		.uleb128 0x5
 3179 14cf 03       		.byte	0x3
 3180 14d0 00000000 		.4byte	ADC_1_initVar
 3181 14d4 34       		.uleb128 0x34
 3182 14d5 6F100000 		.4byte	.LASF285
 3183 14d9 01       		.byte	0x1
 3184 14da 2C       		.byte	0x2c
 3185 14db 97000000 		.4byte	0x97
 3186 14df 05       		.uleb128 0x5
 3187 14e0 03       		.byte	0x3
 3188 14e1 00000000 		.4byte	ADC_1_selected
 3189 14e5 34       		.uleb128 0x34
 3190 14e6 750D0000 		.4byte	.LASF286
 3191 14ea 01       		.byte	0x1
 3192 14eb 2D       		.byte	0x2d
 3193 14ec B8000000 		.4byte	0xb8
 3194 14f0 05       		.uleb128 0x5
 3195 14f1 03       		.byte	0x3
 3196 14f2 00000000 		.4byte	ADC_1_currentConfig
 3197 14f6 07       		.uleb128 0x7
 3198 14f7 AA110000 		.4byte	0x11aa
 3199 14fb 06150000 		.4byte	0x1506
 3200 14ff 08       		.uleb128 0x8
 3201 1500 C3000000 		.4byte	0xc3
 3202 1504 00       		.byte	0
 3203 1505 00       		.byte	0
 3204 1506 35       		.uleb128 0x35
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 149


 3205 1507 140B0000 		.4byte	.LASF287
 3206 150b 04       		.byte	0x4
 3207 150c 6401     		.2byte	0x164
 3208 150e 12150000 		.4byte	0x1512
 3209 1512 06       		.uleb128 0x6
 3210 1513 F6140000 		.4byte	0x14f6
 3211 1517 36       		.uleb128 0x36
 3212 1518 A2050000 		.4byte	.LASF288
 3213 151c A2050000 		.4byte	.LASF288
 3214 1520 03       		.byte	0x3
 3215 1521 3005     		.2byte	0x530
 3216 1523 36       		.uleb128 0x36
 3217 1524 FD0F0000 		.4byte	.LASF289
 3218 1528 FD0F0000 		.4byte	.LASF289
 3219 152c 03       		.byte	0x3
 3220 152d 2F05     		.2byte	0x52f
 3221 152f 36       		.uleb128 0x36
 3222 1530 AC090000 		.4byte	.LASF290
 3223 1534 AC090000 		.4byte	.LASF290
 3224 1538 03       		.byte	0x3
 3225 1539 3305     		.2byte	0x533
 3226 153b 36       		.uleb128 0x36
 3227 153c 2E050000 		.4byte	.LASF291
 3228 1540 2E050000 		.4byte	.LASF291
 3229 1544 0B       		.byte	0xb
 3230 1545 9203     		.2byte	0x392
 3231 1547 36       		.uleb128 0x36
 3232 1548 03120000 		.4byte	.LASF292
 3233 154c 03120000 		.4byte	.LASF292
 3234 1550 03       		.byte	0x3
 3235 1551 3505     		.2byte	0x535
 3236 1553 36       		.uleb128 0x36
 3237 1554 510E0000 		.4byte	.LASF293
 3238 1558 510E0000 		.4byte	.LASF293
 3239 155c 03       		.byte	0x3
 3240 155d 3105     		.2byte	0x531
 3241 155f 00       		.byte	0
 3242              		.section	.debug_abbrev,"",%progbits
 3243              	.Ldebug_abbrev0:
 3244 0000 01       		.uleb128 0x1
 3245 0001 11       		.uleb128 0x11
 3246 0002 01       		.byte	0x1
 3247 0003 25       		.uleb128 0x25
 3248 0004 0E       		.uleb128 0xe
 3249 0005 13       		.uleb128 0x13
 3250 0006 0B       		.uleb128 0xb
 3251 0007 03       		.uleb128 0x3
 3252 0008 0E       		.uleb128 0xe
 3253 0009 1B       		.uleb128 0x1b
 3254 000a 0E       		.uleb128 0xe
 3255 000b 55       		.uleb128 0x55
 3256 000c 17       		.uleb128 0x17
 3257 000d 11       		.uleb128 0x11
 3258 000e 01       		.uleb128 0x1
 3259 000f 10       		.uleb128 0x10
 3260 0010 17       		.uleb128 0x17
 3261 0011 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 150


 3262 0012 00       		.byte	0
 3263 0013 02       		.uleb128 0x2
 3264 0014 24       		.uleb128 0x24
 3265 0015 00       		.byte	0
 3266 0016 0B       		.uleb128 0xb
 3267 0017 0B       		.uleb128 0xb
 3268 0018 3E       		.uleb128 0x3e
 3269 0019 0B       		.uleb128 0xb
 3270 001a 03       		.uleb128 0x3
 3271 001b 0E       		.uleb128 0xe
 3272 001c 00       		.byte	0
 3273 001d 00       		.byte	0
 3274 001e 03       		.uleb128 0x3
 3275 001f 16       		.uleb128 0x16
 3276 0020 00       		.byte	0
 3277 0021 03       		.uleb128 0x3
 3278 0022 0E       		.uleb128 0xe
 3279 0023 3A       		.uleb128 0x3a
 3280 0024 0B       		.uleb128 0xb
 3281 0025 3B       		.uleb128 0x3b
 3282 0026 0B       		.uleb128 0xb
 3283 0027 49       		.uleb128 0x49
 3284 0028 13       		.uleb128 0x13
 3285 0029 00       		.byte	0
 3286 002a 00       		.byte	0
 3287 002b 04       		.uleb128 0x4
 3288 002c 24       		.uleb128 0x24
 3289 002d 00       		.byte	0
 3290 002e 0B       		.uleb128 0xb
 3291 002f 0B       		.uleb128 0xb
 3292 0030 3E       		.uleb128 0x3e
 3293 0031 0B       		.uleb128 0xb
 3294 0032 03       		.uleb128 0x3
 3295 0033 08       		.uleb128 0x8
 3296 0034 00       		.byte	0
 3297 0035 00       		.byte	0
 3298 0036 05       		.uleb128 0x5
 3299 0037 35       		.uleb128 0x35
 3300 0038 00       		.byte	0
 3301 0039 49       		.uleb128 0x49
 3302 003a 13       		.uleb128 0x13
 3303 003b 00       		.byte	0
 3304 003c 00       		.byte	0
 3305 003d 06       		.uleb128 0x6
 3306 003e 26       		.uleb128 0x26
 3307 003f 00       		.byte	0
 3308 0040 49       		.uleb128 0x49
 3309 0041 13       		.uleb128 0x13
 3310 0042 00       		.byte	0
 3311 0043 00       		.byte	0
 3312 0044 07       		.uleb128 0x7
 3313 0045 01       		.uleb128 0x1
 3314 0046 01       		.byte	0x1
 3315 0047 49       		.uleb128 0x49
 3316 0048 13       		.uleb128 0x13
 3317 0049 01       		.uleb128 0x1
 3318 004a 13       		.uleb128 0x13
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 151


 3319 004b 00       		.byte	0
 3320 004c 00       		.byte	0
 3321 004d 08       		.uleb128 0x8
 3322 004e 21       		.uleb128 0x21
 3323 004f 00       		.byte	0
 3324 0050 49       		.uleb128 0x49
 3325 0051 13       		.uleb128 0x13
 3326 0052 2F       		.uleb128 0x2f
 3327 0053 0B       		.uleb128 0xb
 3328 0054 00       		.byte	0
 3329 0055 00       		.byte	0
 3330 0056 09       		.uleb128 0x9
 3331 0057 13       		.uleb128 0x13
 3332 0058 01       		.byte	0x1
 3333 0059 0B       		.uleb128 0xb
 3334 005a 0B       		.uleb128 0xb
 3335 005b 3A       		.uleb128 0x3a
 3336 005c 0B       		.uleb128 0xb
 3337 005d 3B       		.uleb128 0x3b
 3338 005e 0B       		.uleb128 0xb
 3339 005f 01       		.uleb128 0x1
 3340 0060 13       		.uleb128 0x13
 3341 0061 00       		.byte	0
 3342 0062 00       		.byte	0
 3343 0063 0A       		.uleb128 0xa
 3344 0064 0D       		.uleb128 0xd
 3345 0065 00       		.byte	0
 3346 0066 03       		.uleb128 0x3
 3347 0067 0E       		.uleb128 0xe
 3348 0068 3A       		.uleb128 0x3a
 3349 0069 0B       		.uleb128 0xb
 3350 006a 3B       		.uleb128 0x3b
 3351 006b 0B       		.uleb128 0xb
 3352 006c 49       		.uleb128 0x49
 3353 006d 13       		.uleb128 0x13
 3354 006e 38       		.uleb128 0x38
 3355 006f 0B       		.uleb128 0xb
 3356 0070 00       		.byte	0
 3357 0071 00       		.byte	0
 3358 0072 0B       		.uleb128 0xb
 3359 0073 13       		.uleb128 0x13
 3360 0074 01       		.byte	0x1
 3361 0075 0B       		.uleb128 0xb
 3362 0076 05       		.uleb128 0x5
 3363 0077 3A       		.uleb128 0x3a
 3364 0078 0B       		.uleb128 0xb
 3365 0079 3B       		.uleb128 0x3b
 3366 007a 0B       		.uleb128 0xb
 3367 007b 01       		.uleb128 0x1
 3368 007c 13       		.uleb128 0x13
 3369 007d 00       		.byte	0
 3370 007e 00       		.byte	0
 3371 007f 0C       		.uleb128 0xc
 3372 0080 0D       		.uleb128 0xd
 3373 0081 00       		.byte	0
 3374 0082 03       		.uleb128 0x3
 3375 0083 08       		.uleb128 0x8
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 152


 3376 0084 3A       		.uleb128 0x3a
 3377 0085 0B       		.uleb128 0xb
 3378 0086 3B       		.uleb128 0x3b
 3379 0087 0B       		.uleb128 0xb
 3380 0088 49       		.uleb128 0x49
 3381 0089 13       		.uleb128 0x13
 3382 008a 38       		.uleb128 0x38
 3383 008b 0B       		.uleb128 0xb
 3384 008c 00       		.byte	0
 3385 008d 00       		.byte	0
 3386 008e 0D       		.uleb128 0xd
 3387 008f 0D       		.uleb128 0xd
 3388 0090 00       		.byte	0
 3389 0091 03       		.uleb128 0x3
 3390 0092 0E       		.uleb128 0xe
 3391 0093 3A       		.uleb128 0x3a
 3392 0094 0B       		.uleb128 0xb
 3393 0095 3B       		.uleb128 0x3b
 3394 0096 0B       		.uleb128 0xb
 3395 0097 49       		.uleb128 0x49
 3396 0098 13       		.uleb128 0x13
 3397 0099 38       		.uleb128 0x38
 3398 009a 05       		.uleb128 0x5
 3399 009b 00       		.byte	0
 3400 009c 00       		.byte	0
 3401 009d 0E       		.uleb128 0xe
 3402 009e 21       		.uleb128 0x21
 3403 009f 00       		.byte	0
 3404 00a0 49       		.uleb128 0x49
 3405 00a1 13       		.uleb128 0x13
 3406 00a2 2F       		.uleb128 0x2f
 3407 00a3 05       		.uleb128 0x5
 3408 00a4 00       		.byte	0
 3409 00a5 00       		.byte	0
 3410 00a6 0F       		.uleb128 0xf
 3411 00a7 16       		.uleb128 0x16
 3412 00a8 00       		.byte	0
 3413 00a9 03       		.uleb128 0x3
 3414 00aa 0E       		.uleb128 0xe
 3415 00ab 3A       		.uleb128 0x3a
 3416 00ac 0B       		.uleb128 0xb
 3417 00ad 3B       		.uleb128 0x3b
 3418 00ae 05       		.uleb128 0x5
 3419 00af 49       		.uleb128 0x49
 3420 00b0 13       		.uleb128 0x13
 3421 00b1 00       		.byte	0
 3422 00b2 00       		.byte	0
 3423 00b3 10       		.uleb128 0x10
 3424 00b4 0F       		.uleb128 0xf
 3425 00b5 00       		.byte	0
 3426 00b6 0B       		.uleb128 0xb
 3427 00b7 0B       		.uleb128 0xb
 3428 00b8 49       		.uleb128 0x49
 3429 00b9 13       		.uleb128 0x13
 3430 00ba 00       		.byte	0
 3431 00bb 00       		.byte	0
 3432 00bc 11       		.uleb128 0x11
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 153


 3433 00bd 15       		.uleb128 0x15
 3434 00be 00       		.byte	0
 3435 00bf 27       		.uleb128 0x27
 3436 00c0 19       		.uleb128 0x19
 3437 00c1 00       		.byte	0
 3438 00c2 00       		.byte	0
 3439 00c3 12       		.uleb128 0x12
 3440 00c4 04       		.uleb128 0x4
 3441 00c5 01       		.byte	0x1
 3442 00c6 0B       		.uleb128 0xb
 3443 00c7 0B       		.uleb128 0xb
 3444 00c8 49       		.uleb128 0x49
 3445 00c9 13       		.uleb128 0x13
 3446 00ca 3A       		.uleb128 0x3a
 3447 00cb 0B       		.uleb128 0xb
 3448 00cc 3B       		.uleb128 0x3b
 3449 00cd 05       		.uleb128 0x5
 3450 00ce 01       		.uleb128 0x1
 3451 00cf 13       		.uleb128 0x13
 3452 00d0 00       		.byte	0
 3453 00d1 00       		.byte	0
 3454 00d2 13       		.uleb128 0x13
 3455 00d3 28       		.uleb128 0x28
 3456 00d4 00       		.byte	0
 3457 00d5 03       		.uleb128 0x3
 3458 00d6 0E       		.uleb128 0xe
 3459 00d7 1C       		.uleb128 0x1c
 3460 00d8 0B       		.uleb128 0xb
 3461 00d9 00       		.byte	0
 3462 00da 00       		.byte	0
 3463 00db 14       		.uleb128 0x14
 3464 00dc 28       		.uleb128 0x28
 3465 00dd 00       		.byte	0
 3466 00de 03       		.uleb128 0x3
 3467 00df 0E       		.uleb128 0xe
 3468 00e0 1C       		.uleb128 0x1c
 3469 00e1 06       		.uleb128 0x6
 3470 00e2 00       		.byte	0
 3471 00e3 00       		.byte	0
 3472 00e4 15       		.uleb128 0x15
 3473 00e5 13       		.uleb128 0x13
 3474 00e6 01       		.byte	0x1
 3475 00e7 0B       		.uleb128 0xb
 3476 00e8 0B       		.uleb128 0xb
 3477 00e9 3A       		.uleb128 0x3a
 3478 00ea 0B       		.uleb128 0xb
 3479 00eb 3B       		.uleb128 0x3b
 3480 00ec 05       		.uleb128 0x5
 3481 00ed 01       		.uleb128 0x1
 3482 00ee 13       		.uleb128 0x13
 3483 00ef 00       		.byte	0
 3484 00f0 00       		.byte	0
 3485 00f1 16       		.uleb128 0x16
 3486 00f2 0D       		.uleb128 0xd
 3487 00f3 00       		.byte	0
 3488 00f4 03       		.uleb128 0x3
 3489 00f5 0E       		.uleb128 0xe
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 154


 3490 00f6 3A       		.uleb128 0x3a
 3491 00f7 0B       		.uleb128 0xb
 3492 00f8 3B       		.uleb128 0x3b
 3493 00f9 05       		.uleb128 0x5
 3494 00fa 49       		.uleb128 0x49
 3495 00fb 13       		.uleb128 0x13
 3496 00fc 38       		.uleb128 0x38
 3497 00fd 0B       		.uleb128 0xb
 3498 00fe 00       		.byte	0
 3499 00ff 00       		.byte	0
 3500 0100 17       		.uleb128 0x17
 3501 0101 2E       		.uleb128 0x2e
 3502 0102 01       		.byte	0x1
 3503 0103 03       		.uleb128 0x3
 3504 0104 0E       		.uleb128 0xe
 3505 0105 3A       		.uleb128 0x3a
 3506 0106 0B       		.uleb128 0xb
 3507 0107 3B       		.uleb128 0x3b
 3508 0108 05       		.uleb128 0x5
 3509 0109 27       		.uleb128 0x27
 3510 010a 19       		.uleb128 0x19
 3511 010b 49       		.uleb128 0x49
 3512 010c 13       		.uleb128 0x13
 3513 010d 20       		.uleb128 0x20
 3514 010e 0B       		.uleb128 0xb
 3515 010f 01       		.uleb128 0x1
 3516 0110 13       		.uleb128 0x13
 3517 0111 00       		.byte	0
 3518 0112 00       		.byte	0
 3519 0113 18       		.uleb128 0x18
 3520 0114 05       		.uleb128 0x5
 3521 0115 00       		.byte	0
 3522 0116 03       		.uleb128 0x3
 3523 0117 0E       		.uleb128 0xe
 3524 0118 3A       		.uleb128 0x3a
 3525 0119 0B       		.uleb128 0xb
 3526 011a 3B       		.uleb128 0x3b
 3527 011b 05       		.uleb128 0x5
 3528 011c 49       		.uleb128 0x49
 3529 011d 13       		.uleb128 0x13
 3530 011e 00       		.byte	0
 3531 011f 00       		.byte	0
 3532 0120 19       		.uleb128 0x19
 3533 0121 34       		.uleb128 0x34
 3534 0122 00       		.byte	0
 3535 0123 03       		.uleb128 0x3
 3536 0124 0E       		.uleb128 0xe
 3537 0125 3A       		.uleb128 0x3a
 3538 0126 0B       		.uleb128 0xb
 3539 0127 3B       		.uleb128 0x3b
 3540 0128 05       		.uleb128 0x5
 3541 0129 49       		.uleb128 0x49
 3542 012a 13       		.uleb128 0x13
 3543 012b 00       		.byte	0
 3544 012c 00       		.byte	0
 3545 012d 1A       		.uleb128 0x1a
 3546 012e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 155


 3547 012f 01       		.byte	0x1
 3548 0130 03       		.uleb128 0x3
 3549 0131 0E       		.uleb128 0xe
 3550 0132 3A       		.uleb128 0x3a
 3551 0133 0B       		.uleb128 0xb
 3552 0134 3B       		.uleb128 0x3b
 3553 0135 05       		.uleb128 0x5
 3554 0136 27       		.uleb128 0x27
 3555 0137 19       		.uleb128 0x19
 3556 0138 20       		.uleb128 0x20
 3557 0139 0B       		.uleb128 0xb
 3558 013a 01       		.uleb128 0x1
 3559 013b 13       		.uleb128 0x13
 3560 013c 00       		.byte	0
 3561 013d 00       		.byte	0
 3562 013e 1B       		.uleb128 0x1b
 3563 013f 2E       		.uleb128 0x2e
 3564 0140 00       		.byte	0
 3565 0141 03       		.uleb128 0x3
 3566 0142 0E       		.uleb128 0xe
 3567 0143 3A       		.uleb128 0x3a
 3568 0144 0B       		.uleb128 0xb
 3569 0145 3B       		.uleb128 0x3b
 3570 0146 0B       		.uleb128 0xb
 3571 0147 27       		.uleb128 0x27
 3572 0148 19       		.uleb128 0x19
 3573 0149 20       		.uleb128 0x20
 3574 014a 0B       		.uleb128 0xb
 3575 014b 00       		.byte	0
 3576 014c 00       		.byte	0
 3577 014d 1C       		.uleb128 0x1c
 3578 014e 2E       		.uleb128 0x2e
 3579 014f 01       		.byte	0x1
 3580 0150 03       		.uleb128 0x3
 3581 0151 0E       		.uleb128 0xe
 3582 0152 3A       		.uleb128 0x3a
 3583 0153 0B       		.uleb128 0xb
 3584 0154 3B       		.uleb128 0x3b
 3585 0155 0B       		.uleb128 0xb
 3586 0156 27       		.uleb128 0x27
 3587 0157 19       		.uleb128 0x19
 3588 0158 20       		.uleb128 0x20
 3589 0159 0B       		.uleb128 0xb
 3590 015a 01       		.uleb128 0x1
 3591 015b 13       		.uleb128 0x13
 3592 015c 00       		.byte	0
 3593 015d 00       		.byte	0
 3594 015e 1D       		.uleb128 0x1d
 3595 015f 05       		.uleb128 0x5
 3596 0160 00       		.byte	0
 3597 0161 03       		.uleb128 0x3
 3598 0162 0E       		.uleb128 0xe
 3599 0163 3A       		.uleb128 0x3a
 3600 0164 0B       		.uleb128 0xb
 3601 0165 3B       		.uleb128 0x3b
 3602 0166 0B       		.uleb128 0xb
 3603 0167 49       		.uleb128 0x49
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 156


 3604 0168 13       		.uleb128 0x13
 3605 0169 00       		.byte	0
 3606 016a 00       		.byte	0
 3607 016b 1E       		.uleb128 0x1e
 3608 016c 2E       		.uleb128 0x2e
 3609 016d 00       		.byte	0
 3610 016e 03       		.uleb128 0x3
 3611 016f 0E       		.uleb128 0xe
 3612 0170 3A       		.uleb128 0x3a
 3613 0171 0B       		.uleb128 0xb
 3614 0172 3B       		.uleb128 0x3b
 3615 0173 05       		.uleb128 0x5
 3616 0174 27       		.uleb128 0x27
 3617 0175 19       		.uleb128 0x19
 3618 0176 20       		.uleb128 0x20
 3619 0177 0B       		.uleb128 0xb
 3620 0178 00       		.byte	0
 3621 0179 00       		.byte	0
 3622 017a 1F       		.uleb128 0x1f
 3623 017b 2E       		.uleb128 0x2e
 3624 017c 01       		.byte	0x1
 3625 017d 3F       		.uleb128 0x3f
 3626 017e 19       		.uleb128 0x19
 3627 017f 03       		.uleb128 0x3
 3628 0180 0E       		.uleb128 0xe
 3629 0181 3A       		.uleb128 0x3a
 3630 0182 0B       		.uleb128 0xb
 3631 0183 3B       		.uleb128 0x3b
 3632 0184 0B       		.uleb128 0xb
 3633 0185 27       		.uleb128 0x27
 3634 0186 19       		.uleb128 0x19
 3635 0187 11       		.uleb128 0x11
 3636 0188 01       		.uleb128 0x1
 3637 0189 12       		.uleb128 0x12
 3638 018a 06       		.uleb128 0x6
 3639 018b 40       		.uleb128 0x40
 3640 018c 18       		.uleb128 0x18
 3641 018d 9742     		.uleb128 0x2117
 3642 018f 19       		.uleb128 0x19
 3643 0190 01       		.uleb128 0x1
 3644 0191 13       		.uleb128 0x13
 3645 0192 00       		.byte	0
 3646 0193 00       		.byte	0
 3647 0194 20       		.uleb128 0x20
 3648 0195 05       		.uleb128 0x5
 3649 0196 00       		.byte	0
 3650 0197 03       		.uleb128 0x3
 3651 0198 0E       		.uleb128 0xe
 3652 0199 3A       		.uleb128 0x3a
 3653 019a 0B       		.uleb128 0xb
 3654 019b 3B       		.uleb128 0x3b
 3655 019c 0B       		.uleb128 0xb
 3656 019d 49       		.uleb128 0x49
 3657 019e 13       		.uleb128 0x13
 3658 019f 02       		.uleb128 0x2
 3659 01a0 17       		.uleb128 0x17
 3660 01a1 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 157


 3661 01a2 00       		.byte	0
 3662 01a3 21       		.uleb128 0x21
 3663 01a4 34       		.uleb128 0x34
 3664 01a5 00       		.byte	0
 3665 01a6 03       		.uleb128 0x3
 3666 01a7 0E       		.uleb128 0xe
 3667 01a8 3A       		.uleb128 0x3a
 3668 01a9 0B       		.uleb128 0xb
 3669 01aa 3B       		.uleb128 0x3b
 3670 01ab 0B       		.uleb128 0xb
 3671 01ac 49       		.uleb128 0x49
 3672 01ad 13       		.uleb128 0x13
 3673 01ae 1C       		.uleb128 0x1c
 3674 01af 0B       		.uleb128 0xb
 3675 01b0 00       		.byte	0
 3676 01b1 00       		.byte	0
 3677 01b2 22       		.uleb128 0x22
 3678 01b3 1D       		.uleb128 0x1d
 3679 01b4 01       		.byte	0x1
 3680 01b5 31       		.uleb128 0x31
 3681 01b6 13       		.uleb128 0x13
 3682 01b7 11       		.uleb128 0x11
 3683 01b8 01       		.uleb128 0x1
 3684 01b9 12       		.uleb128 0x12
 3685 01ba 06       		.uleb128 0x6
 3686 01bb 58       		.uleb128 0x58
 3687 01bc 0B       		.uleb128 0xb
 3688 01bd 59       		.uleb128 0x59
 3689 01be 0B       		.uleb128 0xb
 3690 01bf 01       		.uleb128 0x1
 3691 01c0 13       		.uleb128 0x13
 3692 01c1 00       		.byte	0
 3693 01c2 00       		.byte	0
 3694 01c3 23       		.uleb128 0x23
 3695 01c4 1D       		.uleb128 0x1d
 3696 01c5 01       		.byte	0x1
 3697 01c6 31       		.uleb128 0x31
 3698 01c7 13       		.uleb128 0x13
 3699 01c8 11       		.uleb128 0x11
 3700 01c9 01       		.uleb128 0x1
 3701 01ca 12       		.uleb128 0x12
 3702 01cb 06       		.uleb128 0x6
 3703 01cc 58       		.uleb128 0x58
 3704 01cd 0B       		.uleb128 0xb
 3705 01ce 59       		.uleb128 0x59
 3706 01cf 0B       		.uleb128 0xb
 3707 01d0 00       		.byte	0
 3708 01d1 00       		.byte	0
 3709 01d2 24       		.uleb128 0x24
 3710 01d3 05       		.uleb128 0x5
 3711 01d4 00       		.byte	0
 3712 01d5 31       		.uleb128 0x31
 3713 01d6 13       		.uleb128 0x13
 3714 01d7 02       		.uleb128 0x2
 3715 01d8 17       		.uleb128 0x17
 3716 01d9 00       		.byte	0
 3717 01da 00       		.byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 158


 3718 01db 25       		.uleb128 0x25
 3719 01dc 0B       		.uleb128 0xb
 3720 01dd 01       		.byte	0x1
 3721 01de 11       		.uleb128 0x11
 3722 01df 01       		.uleb128 0x1
 3723 01e0 12       		.uleb128 0x12
 3724 01e1 06       		.uleb128 0x6
 3725 01e2 00       		.byte	0
 3726 01e3 00       		.byte	0
 3727 01e4 26       		.uleb128 0x26
 3728 01e5 34       		.uleb128 0x34
 3729 01e6 00       		.byte	0
 3730 01e7 31       		.uleb128 0x31
 3731 01e8 13       		.uleb128 0x13
 3732 01e9 02       		.uleb128 0x2
 3733 01ea 17       		.uleb128 0x17
 3734 01eb 00       		.byte	0
 3735 01ec 00       		.byte	0
 3736 01ed 27       		.uleb128 0x27
 3737 01ee 898201   		.uleb128 0x4109
 3738 01f1 01       		.byte	0x1
 3739 01f2 11       		.uleb128 0x11
 3740 01f3 01       		.uleb128 0x1
 3741 01f4 31       		.uleb128 0x31
 3742 01f5 13       		.uleb128 0x13
 3743 01f6 01       		.uleb128 0x1
 3744 01f7 13       		.uleb128 0x13
 3745 01f8 00       		.byte	0
 3746 01f9 00       		.byte	0
 3747 01fa 28       		.uleb128 0x28
 3748 01fb 8A8201   		.uleb128 0x410a
 3749 01fe 00       		.byte	0
 3750 01ff 02       		.uleb128 0x2
 3751 0200 18       		.uleb128 0x18
 3752 0201 9142     		.uleb128 0x2111
 3753 0203 18       		.uleb128 0x18
 3754 0204 00       		.byte	0
 3755 0205 00       		.byte	0
 3756 0206 29       		.uleb128 0x29
 3757 0207 898201   		.uleb128 0x4109
 3758 020a 01       		.byte	0x1
 3759 020b 11       		.uleb128 0x11
 3760 020c 01       		.uleb128 0x1
 3761 020d 31       		.uleb128 0x31
 3762 020e 13       		.uleb128 0x13
 3763 020f 00       		.byte	0
 3764 0210 00       		.byte	0
 3765 0211 2A       		.uleb128 0x2a
 3766 0212 05       		.uleb128 0x5
 3767 0213 00       		.byte	0
 3768 0214 03       		.uleb128 0x3
 3769 0215 0E       		.uleb128 0xe
 3770 0216 3A       		.uleb128 0x3a
 3771 0217 0B       		.uleb128 0xb
 3772 0218 3B       		.uleb128 0x3b
 3773 0219 0B       		.uleb128 0xb
 3774 021a 49       		.uleb128 0x49
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 159


 3775 021b 13       		.uleb128 0x13
 3776 021c 02       		.uleb128 0x2
 3777 021d 18       		.uleb128 0x18
 3778 021e 00       		.byte	0
 3779 021f 00       		.byte	0
 3780 0220 2B       		.uleb128 0x2b
 3781 0221 2E       		.uleb128 0x2e
 3782 0222 00       		.byte	0
 3783 0223 3F       		.uleb128 0x3f
 3784 0224 19       		.uleb128 0x19
 3785 0225 03       		.uleb128 0x3
 3786 0226 0E       		.uleb128 0xe
 3787 0227 3A       		.uleb128 0x3a
 3788 0228 0B       		.uleb128 0xb
 3789 0229 3B       		.uleb128 0x3b
 3790 022a 05       		.uleb128 0x5
 3791 022b 27       		.uleb128 0x27
 3792 022c 19       		.uleb128 0x19
 3793 022d 11       		.uleb128 0x11
 3794 022e 01       		.uleb128 0x1
 3795 022f 12       		.uleb128 0x12
 3796 0230 06       		.uleb128 0x6
 3797 0231 40       		.uleb128 0x40
 3798 0232 18       		.uleb128 0x18
 3799 0233 9742     		.uleb128 0x2117
 3800 0235 19       		.uleb128 0x19
 3801 0236 00       		.byte	0
 3802 0237 00       		.byte	0
 3803 0238 2C       		.uleb128 0x2c
 3804 0239 2E       		.uleb128 0x2e
 3805 023a 01       		.byte	0x1
 3806 023b 3F       		.uleb128 0x3f
 3807 023c 19       		.uleb128 0x19
 3808 023d 03       		.uleb128 0x3
 3809 023e 0E       		.uleb128 0xe
 3810 023f 3A       		.uleb128 0x3a
 3811 0240 0B       		.uleb128 0xb
 3812 0241 3B       		.uleb128 0x3b
 3813 0242 05       		.uleb128 0x5
 3814 0243 27       		.uleb128 0x27
 3815 0244 19       		.uleb128 0x19
 3816 0245 11       		.uleb128 0x11
 3817 0246 01       		.uleb128 0x1
 3818 0247 12       		.uleb128 0x12
 3819 0248 06       		.uleb128 0x6
 3820 0249 40       		.uleb128 0x40
 3821 024a 18       		.uleb128 0x18
 3822 024b 9742     		.uleb128 0x2117
 3823 024d 19       		.uleb128 0x19
 3824 024e 01       		.uleb128 0x1
 3825 024f 13       		.uleb128 0x13
 3826 0250 00       		.byte	0
 3827 0251 00       		.byte	0
 3828 0252 2D       		.uleb128 0x2d
 3829 0253 05       		.uleb128 0x5
 3830 0254 00       		.byte	0
 3831 0255 03       		.uleb128 0x3
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 160


 3832 0256 0E       		.uleb128 0xe
 3833 0257 3A       		.uleb128 0x3a
 3834 0258 0B       		.uleb128 0xb
 3835 0259 3B       		.uleb128 0x3b
 3836 025a 05       		.uleb128 0x5
 3837 025b 49       		.uleb128 0x49
 3838 025c 13       		.uleb128 0x13
 3839 025d 02       		.uleb128 0x2
 3840 025e 17       		.uleb128 0x17
 3841 025f 00       		.byte	0
 3842 0260 00       		.byte	0
 3843 0261 2E       		.uleb128 0x2e
 3844 0262 34       		.uleb128 0x34
 3845 0263 00       		.byte	0
 3846 0264 03       		.uleb128 0x3
 3847 0265 0E       		.uleb128 0xe
 3848 0266 3A       		.uleb128 0x3a
 3849 0267 0B       		.uleb128 0xb
 3850 0268 3B       		.uleb128 0x3b
 3851 0269 05       		.uleb128 0x5
 3852 026a 49       		.uleb128 0x49
 3853 026b 13       		.uleb128 0x13
 3854 026c 02       		.uleb128 0x2
 3855 026d 17       		.uleb128 0x17
 3856 026e 00       		.byte	0
 3857 026f 00       		.byte	0
 3858 0270 2F       		.uleb128 0x2f
 3859 0271 1D       		.uleb128 0x1d
 3860 0272 01       		.byte	0x1
 3861 0273 31       		.uleb128 0x31
 3862 0274 13       		.uleb128 0x13
 3863 0275 11       		.uleb128 0x11
 3864 0276 01       		.uleb128 0x1
 3865 0277 12       		.uleb128 0x12
 3866 0278 06       		.uleb128 0x6
 3867 0279 58       		.uleb128 0x58
 3868 027a 0B       		.uleb128 0xb
 3869 027b 59       		.uleb128 0x59
 3870 027c 05       		.uleb128 0x5
 3871 027d 00       		.byte	0
 3872 027e 00       		.byte	0
 3873 027f 30       		.uleb128 0x30
 3874 0280 2E       		.uleb128 0x2e
 3875 0281 01       		.byte	0x1
 3876 0282 3F       		.uleb128 0x3f
 3877 0283 19       		.uleb128 0x19
 3878 0284 03       		.uleb128 0x3
 3879 0285 0E       		.uleb128 0xe
 3880 0286 3A       		.uleb128 0x3a
 3881 0287 0B       		.uleb128 0xb
 3882 0288 3B       		.uleb128 0x3b
 3883 0289 05       		.uleb128 0x5
 3884 028a 27       		.uleb128 0x27
 3885 028b 19       		.uleb128 0x19
 3886 028c 49       		.uleb128 0x49
 3887 028d 13       		.uleb128 0x13
 3888 028e 11       		.uleb128 0x11
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 161


 3889 028f 01       		.uleb128 0x1
 3890 0290 12       		.uleb128 0x12
 3891 0291 06       		.uleb128 0x6
 3892 0292 40       		.uleb128 0x40
 3893 0293 18       		.uleb128 0x18
 3894 0294 9742     		.uleb128 0x2117
 3895 0296 19       		.uleb128 0x19
 3896 0297 01       		.uleb128 0x1
 3897 0298 13       		.uleb128 0x13
 3898 0299 00       		.byte	0
 3899 029a 00       		.byte	0
 3900 029b 31       		.uleb128 0x31
 3901 029c 34       		.uleb128 0x34
 3902 029d 00       		.byte	0
 3903 029e 03       		.uleb128 0x3
 3904 029f 0E       		.uleb128 0xe
 3905 02a0 3A       		.uleb128 0x3a
 3906 02a1 0B       		.uleb128 0xb
 3907 02a2 3B       		.uleb128 0x3b
 3908 02a3 05       		.uleb128 0x5
 3909 02a4 49       		.uleb128 0x49
 3910 02a5 13       		.uleb128 0x13
 3911 02a6 1C       		.uleb128 0x1c
 3912 02a7 0B       		.uleb128 0xb
 3913 02a8 00       		.byte	0
 3914 02a9 00       		.byte	0
 3915 02aa 32       		.uleb128 0x32
 3916 02ab 898201   		.uleb128 0x4109
 3917 02ae 00       		.byte	0
 3918 02af 11       		.uleb128 0x11
 3919 02b0 01       		.uleb128 0x1
 3920 02b1 31       		.uleb128 0x31
 3921 02b2 13       		.uleb128 0x13
 3922 02b3 00       		.byte	0
 3923 02b4 00       		.byte	0
 3924 02b5 33       		.uleb128 0x33
 3925 02b6 34       		.uleb128 0x34
 3926 02b7 00       		.byte	0
 3927 02b8 03       		.uleb128 0x3
 3928 02b9 0E       		.uleb128 0xe
 3929 02ba 3A       		.uleb128 0x3a
 3930 02bb 0B       		.uleb128 0xb
 3931 02bc 3B       		.uleb128 0x3b
 3932 02bd 0B       		.uleb128 0xb
 3933 02be 49       		.uleb128 0x49
 3934 02bf 13       		.uleb128 0x13
 3935 02c0 3F       		.uleb128 0x3f
 3936 02c1 19       		.uleb128 0x19
 3937 02c2 3C       		.uleb128 0x3c
 3938 02c3 19       		.uleb128 0x19
 3939 02c4 00       		.byte	0
 3940 02c5 00       		.byte	0
 3941 02c6 34       		.uleb128 0x34
 3942 02c7 34       		.uleb128 0x34
 3943 02c8 00       		.byte	0
 3944 02c9 03       		.uleb128 0x3
 3945 02ca 0E       		.uleb128 0xe
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 162


 3946 02cb 3A       		.uleb128 0x3a
 3947 02cc 0B       		.uleb128 0xb
 3948 02cd 3B       		.uleb128 0x3b
 3949 02ce 0B       		.uleb128 0xb
 3950 02cf 49       		.uleb128 0x49
 3951 02d0 13       		.uleb128 0x13
 3952 02d1 3F       		.uleb128 0x3f
 3953 02d2 19       		.uleb128 0x19
 3954 02d3 02       		.uleb128 0x2
 3955 02d4 18       		.uleb128 0x18
 3956 02d5 00       		.byte	0
 3957 02d6 00       		.byte	0
 3958 02d7 35       		.uleb128 0x35
 3959 02d8 34       		.uleb128 0x34
 3960 02d9 00       		.byte	0
 3961 02da 03       		.uleb128 0x3
 3962 02db 0E       		.uleb128 0xe
 3963 02dc 3A       		.uleb128 0x3a
 3964 02dd 0B       		.uleb128 0xb
 3965 02de 3B       		.uleb128 0x3b
 3966 02df 05       		.uleb128 0x5
 3967 02e0 49       		.uleb128 0x49
 3968 02e1 13       		.uleb128 0x13
 3969 02e2 3F       		.uleb128 0x3f
 3970 02e3 19       		.uleb128 0x19
 3971 02e4 3C       		.uleb128 0x3c
 3972 02e5 19       		.uleb128 0x19
 3973 02e6 00       		.byte	0
 3974 02e7 00       		.byte	0
 3975 02e8 36       		.uleb128 0x36
 3976 02e9 2E       		.uleb128 0x2e
 3977 02ea 00       		.byte	0
 3978 02eb 3F       		.uleb128 0x3f
 3979 02ec 19       		.uleb128 0x19
 3980 02ed 3C       		.uleb128 0x3c
 3981 02ee 19       		.uleb128 0x19
 3982 02ef 6E       		.uleb128 0x6e
 3983 02f0 0E       		.uleb128 0xe
 3984 02f1 03       		.uleb128 0x3
 3985 02f2 0E       		.uleb128 0xe
 3986 02f3 3A       		.uleb128 0x3a
 3987 02f4 0B       		.uleb128 0xb
 3988 02f5 3B       		.uleb128 0x3b
 3989 02f6 05       		.uleb128 0x5
 3990 02f7 00       		.byte	0
 3991 02f8 00       		.byte	0
 3992 02f9 00       		.byte	0
 3993              		.section	.debug_loc,"",%progbits
 3994              	.Ldebug_loc0:
 3995              	.LLST0:
 3996 0000 00000000 		.4byte	.LVL0
 3997 0004 1C000000 		.4byte	.LVL2
 3998 0008 0100     		.2byte	0x1
 3999 000a 50       		.byte	0x50
 4000 000b 1C000000 		.4byte	.LVL2
 4001 000f 7E000000 		.4byte	.LVL10
 4002 0013 0100     		.2byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 163


 4003 0015 54       		.byte	0x54
 4004 0016 7E000000 		.4byte	.LVL10
 4005 001a 8C000000 		.4byte	.LFE188
 4006 001e 0400     		.2byte	0x4
 4007 0020 F3       		.byte	0xf3
 4008 0021 01       		.uleb128 0x1
 4009 0022 50       		.byte	0x50
 4010 0023 9F       		.byte	0x9f
 4011 0024 00000000 		.4byte	0
 4012 0028 00000000 		.4byte	0
 4013              	.LLST1:
 4014 002c 04000000 		.4byte	.LVL1
 4015 0030 1E000000 		.4byte	.LVL3
 4016 0034 0200     		.2byte	0x2
 4017 0036 31       		.byte	0x31
 4018 0037 9F       		.byte	0x9f
 4019 0038 00000000 		.4byte	0
 4020 003c 00000000 		.4byte	0
 4021              	.LLST2:
 4022 0040 04000000 		.4byte	.LVL1
 4023 0044 1E000000 		.4byte	.LVL3
 4024 0048 0200     		.2byte	0x2
 4025 004a 30       		.byte	0x30
 4026 004b 9F       		.byte	0x9f
 4027 004c 00000000 		.4byte	0
 4028 0050 00000000 		.4byte	0
 4029              	.LLST3:
 4030 0054 04000000 		.4byte	.LVL1
 4031 0058 1E000000 		.4byte	.LVL3
 4032 005c 0600     		.2byte	0x6
 4033 005e 0C       		.byte	0xc
 4034 005f 01004A00 		.4byte	0x4a0001
 4035 0063 9F       		.byte	0x9f
 4036 0064 00000000 		.4byte	0
 4037 0068 00000000 		.4byte	0
 4038              	.LLST4:
 4039 006c 20000000 		.4byte	.LVL4
 4040 0070 34000000 		.4byte	.LVL5
 4041 0074 0100     		.2byte	0x1
 4042 0076 53       		.byte	0x53
 4043 0077 34000000 		.4byte	.LVL5
 4044 007b 3A000000 		.4byte	.LVL6
 4045 007f 0200     		.2byte	0x2
 4046 0081 74       		.byte	0x74
 4047 0082 10       		.sleb128 16
 4048 0083 00000000 		.4byte	0
 4049 0087 00000000 		.4byte	0
 4050              	.LLST6:
 4051 008b 20000000 		.4byte	.LVL4
 4052 008f 3A000000 		.4byte	.LVL6
 4053 0093 0200     		.2byte	0x2
 4054 0095 31       		.byte	0x31
 4055 0096 9F       		.byte	0x9f
 4056 0097 00000000 		.4byte	0
 4057 009b 00000000 		.4byte	0
 4058              	.LLST7:
 4059 009f 20000000 		.4byte	.LVL4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 164


 4060 00a3 3A000000 		.4byte	.LVL6
 4061 00a7 0200     		.2byte	0x2
 4062 00a9 30       		.byte	0x30
 4063 00aa 9F       		.byte	0x9f
 4064 00ab 00000000 		.4byte	0
 4065 00af 00000000 		.4byte	0
 4066              	.LLST8:
 4067 00b3 20000000 		.4byte	.LVL4
 4068 00b7 3A000000 		.4byte	.LVL6
 4069 00bb 0600     		.2byte	0x6
 4070 00bd 0C       		.byte	0xc
 4071 00be 01004A00 		.4byte	0x4a0001
 4072 00c2 9F       		.byte	0x9f
 4073 00c3 00000000 		.4byte	0
 4074 00c7 00000000 		.4byte	0
 4075              	.LLST9:
 4076 00cb 3A000000 		.4byte	.LVL6
 4077 00cf 6C000000 		.4byte	.LVL7
 4078 00d3 0200     		.2byte	0x2
 4079 00d5 31       		.byte	0x31
 4080 00d6 9F       		.byte	0x9f
 4081 00d7 00000000 		.4byte	0
 4082 00db 00000000 		.4byte	0
 4083              	.LLST10:
 4084 00df 3A000000 		.4byte	.LVL6
 4085 00e3 6C000000 		.4byte	.LVL7
 4086 00e7 0200     		.2byte	0x2
 4087 00e9 30       		.byte	0x30
 4088 00ea 9F       		.byte	0x9f
 4089 00eb 00000000 		.4byte	0
 4090 00ef 00000000 		.4byte	0
 4091              	.LLST11:
 4092 00f3 3A000000 		.4byte	.LVL6
 4093 00f7 6C000000 		.4byte	.LVL7
 4094 00fb 0600     		.2byte	0x6
 4095 00fd 0C       		.byte	0xc
 4096 00fe 01004A00 		.4byte	0x4a0001
 4097 0102 9F       		.byte	0x9f
 4098 0103 00000000 		.4byte	0
 4099 0107 00000000 		.4byte	0
 4100              	.LLST12:
 4101 010b 00000000 		.4byte	.LVL14
 4102 010f 06000000 		.4byte	.LVL15
 4103 0113 0100     		.2byte	0x1
 4104 0115 50       		.byte	0x50
 4105 0116 06000000 		.4byte	.LVL15
 4106 011a 2C000000 		.4byte	.LFE194
 4107 011e 0400     		.2byte	0x4
 4108 0120 F3       		.byte	0xf3
 4109 0121 01       		.uleb128 0x1
 4110 0122 50       		.byte	0x50
 4111 0123 9F       		.byte	0x9f
 4112 0124 00000000 		.4byte	0
 4113 0128 00000000 		.4byte	0
 4114              	.LLST13:
 4115 012c 08000000 		.4byte	.LVL16
 4116 0130 1C000000 		.4byte	.LVL19
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 165


 4117 0134 0100     		.2byte	0x1
 4118 0136 54       		.byte	0x54
 4119 0137 1C000000 		.4byte	.LVL19
 4120 013b 2C000000 		.4byte	.LFE194
 4121 013f 0500     		.2byte	0x5
 4122 0141 72       		.byte	0x72
 4123 0142 00       		.sleb128 0
 4124 0143 73       		.byte	0x73
 4125 0144 00       		.sleb128 0
 4126 0145 22       		.byte	0x22
 4127 0146 00000000 		.4byte	0
 4128 014a 00000000 		.4byte	0
 4129              	.LLST14:
 4130 014e 08000000 		.4byte	.LVL16
 4131 0152 1C000000 		.4byte	.LVL18
 4132 0156 0100     		.2byte	0x1
 4133 0158 54       		.byte	0x54
 4134 0159 00000000 		.4byte	0
 4135 015d 00000000 		.4byte	0
 4136              	.LLST15:
 4137 0161 08000000 		.4byte	.LVL16
 4138 0165 1C000000 		.4byte	.LVL18
 4139 0169 0600     		.2byte	0x6
 4140 016b 0C       		.byte	0xc
 4141 016c 00001D41 		.4byte	0x411d0000
 4142 0170 9F       		.byte	0x9f
 4143 0171 00000000 		.4byte	0
 4144 0175 00000000 		.4byte	0
 4145              	.LLST16:
 4146 0179 00000000 		.4byte	.LVL20
 4147 017d 1A000000 		.4byte	.LVL22
 4148 0181 0100     		.2byte	0x1
 4149 0183 50       		.byte	0x50
 4150 0184 1A000000 		.4byte	.LVL22
 4151 0188 2C000000 		.4byte	.LVL26
 4152 018c 0100     		.2byte	0x1
 4153 018e 54       		.byte	0x54
 4154 018f 2C000000 		.4byte	.LVL26
 4155 0193 48000000 		.4byte	.LFE195
 4156 0197 0200     		.2byte	0x2
 4157 0199 73       		.byte	0x73
 4158 019a 20       		.sleb128 32
 4159 019b 00000000 		.4byte	0
 4160 019f 00000000 		.4byte	0
 4161              	.LLST17:
 4162 01a3 12000000 		.4byte	.LVL21
 4163 01a7 1C000000 		.4byte	.LVL23
 4164 01ab 0100     		.2byte	0x1
 4165 01ad 53       		.byte	0x53
 4166 01ae 1C000000 		.4byte	.LVL23
 4167 01b2 27000000 		.4byte	.LVL24-1
 4168 01b6 0200     		.2byte	0x2
 4169 01b8 72       		.byte	0x72
 4170 01b9 04       		.sleb128 4
 4171 01ba 00000000 		.4byte	0
 4172 01be 00000000 		.4byte	0
 4173              	.LLST18:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 166


 4174 01c2 1A000000 		.4byte	.LVL22
 4175 01c6 2C000000 		.4byte	.LVL25
 4176 01ca 0100     		.2byte	0x1
 4177 01cc 54       		.byte	0x54
 4178 01cd 00000000 		.4byte	0
 4179 01d1 00000000 		.4byte	0
 4180              	.LLST19:
 4181 01d5 1A000000 		.4byte	.LVL22
 4182 01d9 2C000000 		.4byte	.LVL25
 4183 01dd 0600     		.2byte	0x6
 4184 01df 0C       		.byte	0xc
 4185 01e0 00001D41 		.4byte	0x411d0000
 4186 01e4 9F       		.byte	0x9f
 4187 01e5 00000000 		.4byte	0
 4188 01e9 00000000 		.4byte	0
 4189              	.LLST20:
 4190 01ed 00000000 		.4byte	.LVL27
 4191 01f1 06000000 		.4byte	.LVL29
 4192 01f5 0100     		.2byte	0x1
 4193 01f7 50       		.byte	0x50
 4194 01f8 06000000 		.4byte	.LVL29
 4195 01fc 1C000000 		.4byte	.LFE196
 4196 0200 0400     		.2byte	0x4
 4197 0202 F3       		.byte	0xf3
 4198 0203 01       		.uleb128 0x1
 4199 0204 50       		.byte	0x50
 4200 0205 9F       		.byte	0x9f
 4201 0206 00000000 		.4byte	0
 4202 020a 00000000 		.4byte	0
 4203              	.LLST21:
 4204 020e 04000000 		.4byte	.LVL28
 4205 0212 14000000 		.4byte	.LVL33
 4206 0216 0200     		.2byte	0x2
 4207 0218 30       		.byte	0x30
 4208 0219 9F       		.byte	0x9f
 4209 021a 14000000 		.4byte	.LVL33
 4210 021e 1C000000 		.4byte	.LFE196
 4211 0222 0100     		.2byte	0x1
 4212 0224 50       		.byte	0x50
 4213 0225 00000000 		.4byte	0
 4214 0229 00000000 		.4byte	0
 4215              	.LLST22:
 4216 022d 0A000000 		.4byte	.LVL30
 4217 0231 10000000 		.4byte	.LVL31
 4218 0235 0100     		.2byte	0x1
 4219 0237 50       		.byte	0x50
 4220 0238 12000000 		.4byte	.LVL32
 4221 023c 14000000 		.4byte	.LVL33
 4222 0240 0100     		.2byte	0x1
 4223 0242 50       		.byte	0x50
 4224 0243 00000000 		.4byte	0
 4225 0247 00000000 		.4byte	0
 4226              	.LLST23:
 4227 024b 00000000 		.4byte	.LVL38
 4228 024f 05000000 		.4byte	.LVL39-1
 4229 0253 0100     		.2byte	0x1
 4230 0255 50       		.byte	0x50
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 167


 4231 0256 05000000 		.4byte	.LVL39-1
 4232 025a 08000000 		.4byte	.LFE187
 4233 025e 0400     		.2byte	0x4
 4234 0260 F3       		.byte	0xf3
 4235 0261 01       		.uleb128 0x1
 4236 0262 50       		.byte	0x50
 4237 0263 9F       		.byte	0x9f
 4238 0264 00000000 		.4byte	0
 4239 0268 00000000 		.4byte	0
 4240              	.LLST24:
 4241 026c 00000000 		.4byte	.LVL40
 4242 0270 23000000 		.4byte	.LVL43-1
 4243 0274 0100     		.2byte	0x1
 4244 0276 50       		.byte	0x50
 4245 0277 23000000 		.4byte	.LVL43-1
 4246 027b 4C000000 		.4byte	.LVL47
 4247 027f 0100     		.2byte	0x1
 4248 0281 54       		.byte	0x54
 4249 0282 4C000000 		.4byte	.LVL47
 4250 0286 5C000000 		.4byte	.LFE189
 4251 028a 0400     		.2byte	0x4
 4252 028c F3       		.byte	0xf3
 4253 028d 01       		.uleb128 0x1
 4254 028e 50       		.byte	0x50
 4255 028f 9F       		.byte	0x9f
 4256 0290 00000000 		.4byte	0
 4257 0294 00000000 		.4byte	0
 4258              	.LLST25:
 4259 0298 00000000 		.4byte	.LVL40
 4260 029c 23000000 		.4byte	.LVL43-1
 4261 02a0 0100     		.2byte	0x1
 4262 02a2 51       		.byte	0x51
 4263 02a3 23000000 		.4byte	.LVL43-1
 4264 02a7 4C000000 		.4byte	.LVL48
 4265 02ab 0100     		.2byte	0x1
 4266 02ad 55       		.byte	0x55
 4267 02ae 4C000000 		.4byte	.LVL48
 4268 02b2 5C000000 		.4byte	.LFE189
 4269 02b6 0400     		.2byte	0x4
 4270 02b8 F3       		.byte	0xf3
 4271 02b9 01       		.uleb128 0x1
 4272 02ba 51       		.byte	0x51
 4273 02bb 9F       		.byte	0x9f
 4274 02bc 00000000 		.4byte	0
 4275 02c0 00000000 		.4byte	0
 4276              	.LLST26:
 4277 02c4 0A000000 		.4byte	.LVL41
 4278 02c8 14000000 		.4byte	.LVL42
 4279 02cc 0600     		.2byte	0x6
 4280 02ce 0C       		.byte	0xc
 4281 02cf 00001D41 		.4byte	0x411d0000
 4282 02d3 9F       		.byte	0x9f
 4283 02d4 00000000 		.4byte	0
 4284 02d8 00000000 		.4byte	0
 4285              		.section	.debug_aranges,"",%progbits
 4286 0000 74000000 		.4byte	0x74
 4287 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 168


 4288 0006 00000000 		.4byte	.Ldebug_info0
 4289 000a 04       		.byte	0x4
 4290 000b 00       		.byte	0
 4291 000c 0000     		.2byte	0
 4292 000e 0000     		.2byte	0
 4293 0010 00000000 		.4byte	.LFB188
 4294 0014 8C000000 		.4byte	.LFE188-.LFB188
 4295 0018 00000000 		.4byte	.LFB190
 4296 001c 24000000 		.4byte	.LFE190-.LFB190
 4297 0020 00000000 		.4byte	.LFB191
 4298 0024 28000000 		.4byte	.LFE191-.LFB191
 4299 0028 00000000 		.4byte	.LFB192
 4300 002c 02000000 		.4byte	.LFE192-.LFB192
 4301 0030 00000000 		.4byte	.LFB193
 4302 0034 02000000 		.4byte	.LFE193-.LFB193
 4303 0038 00000000 		.4byte	.LFB194
 4304 003c 2C000000 		.4byte	.LFE194-.LFB194
 4305 0040 00000000 		.4byte	.LFB195
 4306 0044 48000000 		.4byte	.LFE195-.LFB195
 4307 0048 00000000 		.4byte	.LFB196
 4308 004c 1C000000 		.4byte	.LFE196-.LFB196
 4309 0050 00000000 		.4byte	.LFB197
 4310 0054 28000000 		.4byte	.LFE197-.LFB197
 4311 0058 00000000 		.4byte	.LFB186
 4312 005c 28000000 		.4byte	.LFE186-.LFB186
 4313 0060 00000000 		.4byte	.LFB187
 4314 0064 08000000 		.4byte	.LFE187-.LFB187
 4315 0068 00000000 		.4byte	.LFB189
 4316 006c 5C000000 		.4byte	.LFE189-.LFB189
 4317 0070 00000000 		.4byte	0
 4318 0074 00000000 		.4byte	0
 4319              		.section	.debug_ranges,"",%progbits
 4320              	.Ldebug_ranges0:
 4321 0000 00000000 		.4byte	.LFB188
 4322 0004 8C000000 		.4byte	.LFE188
 4323 0008 00000000 		.4byte	.LFB190
 4324 000c 24000000 		.4byte	.LFE190
 4325 0010 00000000 		.4byte	.LFB191
 4326 0014 28000000 		.4byte	.LFE191
 4327 0018 00000000 		.4byte	.LFB192
 4328 001c 02000000 		.4byte	.LFE192
 4329 0020 00000000 		.4byte	.LFB193
 4330 0024 02000000 		.4byte	.LFE193
 4331 0028 00000000 		.4byte	.LFB194
 4332 002c 2C000000 		.4byte	.LFE194
 4333 0030 00000000 		.4byte	.LFB195
 4334 0034 48000000 		.4byte	.LFE195
 4335 0038 00000000 		.4byte	.LFB196
 4336 003c 1C000000 		.4byte	.LFE196
 4337 0040 00000000 		.4byte	.LFB197
 4338 0044 28000000 		.4byte	.LFE197
 4339 0048 00000000 		.4byte	.LFB186
 4340 004c 28000000 		.4byte	.LFE186
 4341 0050 00000000 		.4byte	.LFB187
 4342 0054 08000000 		.4byte	.LFE187
 4343 0058 00000000 		.4byte	.LFB189
 4344 005c 5C000000 		.4byte	.LFE189
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 169


 4345 0060 00000000 		.4byte	0
 4346 0064 00000000 		.4byte	0
 4347              		.section	.debug_line,"",%progbits
 4348              	.Ldebug_line0:
 4349 0000 47040000 		.section	.debug_str,"MS",%progbits,1
 4349      0200F502 
 4349      00000201 
 4349      FB0E0D00 
 4349      01010101 
 4350              	.LASF136:
 4351 0000 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 4351      6843746C 
 4351      4D61696E 
 4351      57733146 
 4351      72657100 
 4352              	.LASF25:
 4353 0014 50455249 		.ascii	"PERI_TR_GR_V1_Type\000"
 4353      5F54525F 
 4353      47525F56 
 4353      315F5479 
 4353      706500
 4354              	.LASF19:
 4355 0027 52455345 		.ascii	"RESERVED\000"
 4355      52564544 
 4355      00
 4356              	.LASF71:
 4357 0030 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4357      455F494E 
 4357      54525F4D 
 4357      41534B45 
 4357      4400
 4358              	.LASF284:
 4359 0042 4144435F 		.ascii	"ADC_1_initVar\000"
 4359      315F696E 
 4359      69745661 
 4359      7200
 4360              	.LASF56:
 4361 0050 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4361      5F574F52 
 4361      4B5F5550 
 4361      44415445 
 4361      4400
 4362              	.LASF178:
 4363 0062 6970634C 		.ascii	"ipcLockStatusOffset\000"
 4363      6F636B53 
 4363      74617475 
 4363      734F6666 
 4363      73657400 
 4364              	.LASF271:
 4365 0076 4144435F 		.ascii	"ADC_1_SetChanMask\000"
 4365      315F5365 
 4365      74436861 
 4365      6E4D6173 
 4365      6B00
 4366              	.LASF245:
 4367 0088 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 4367      7973436C 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 170


 4367      6B5F5065 
 4367      72697068 
 4367      44697361 
 4368              	.LASF283:
 4369 00a7 63795F64 		.ascii	"cy_device\000"
 4369      65766963 
 4369      6500
 4370              	.LASF163:
 4371 00b1 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4371      73436D30 
 4371      436C6F63 
 4371      6B43746C 
 4371      4F666673 
 4372              	.LASF122:
 4373 00c8 70657269 		.ascii	"periClockNr\000"
 4373      436C6F63 
 4373      6B4E7200 
 4374              	.LASF279:
 4375 00d4 4144435F 		.ascii	"ADC_1_StartEx\000"
 4375      315F5374 
 4375      61727445 
 4375      7800
 4376              	.LASF33:
 4377 00e2 4449565F 		.ascii	"DIV_8_CTL\000"
 4377      385F4354 
 4377      4C00
 4378              	.LASF253:
 4379 00ec 4144435F 		.ascii	"ADC_1_intSarClock_Disable\000"
 4379      315F696E 
 4379      74536172 
 4379      436C6F63 
 4379      6B5F4469 
 4380              	.LASF96:
 4381 0106 75646242 		.ascii	"udbBase\000"
 4381      61736500 
 4382              	.LASF232:
 4383 010e 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 4383      5953434C 
 4383      4B5F4449 
 4383      565F385F 
 4383      42495400 
 4384              	.LASF51:
 4385 0122 4348414E 		.ascii	"CHAN_EN\000"
 4385      5F454E00 
 4386              	.LASF95:
 4387 012a 70657269 		.ascii	"periBase\000"
 4387      42617365 
 4387      00
 4388              	.LASF171:
 4389 0133 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4389      73436D30 
 4389      4E6D6943 
 4389      746C4F66 
 4389      66736574 
 4390              	.LASF141:
 4391 0148 64774368 		.ascii	"dwChSize\000"
 4391      53697A65 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 171


 4391      00
 4392              	.LASF295:
 4393 0151 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_1.c\000"
 4393      72617465 
 4393      645F536F 
 4393      75726365 
 4393      5C50536F 
 4394              	.LASF229:
 4395 0170 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4395      5953434C 
 4395      4B5F5449 
 4395      4D454F55 
 4395      5400
 4396              	.LASF12:
 4397 0182 756E7369 		.ascii	"unsigned int\000"
 4397      676E6564 
 4397      20696E74 
 4397      00
 4398              	.LASF276:
 4399 018f 4144435F 		.ascii	"ADC_1_Init\000"
 4399      315F496E 
 4399      697400
 4400              	.LASF282:
 4401 019a 72657374 		.ascii	"restart\000"
 4401      61727400 
 4402              	.LASF72:
 4403 01a2 494E5452 		.ascii	"INTR_CAUSE\000"
 4403      5F434155 
 4403      534500
 4404              	.LASF123:
 4405 01ad 736D6966 		.ascii	"smifDeviceNr\000"
 4405      44657669 
 4405      63654E72 
 4405      00
 4406              	.LASF204:
 4407 01ba 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4407      41525F52 
 4407      414E4745 
 4407      5F434F4E 
 4407      445F4F55 
 4408              	.LASF153:
 4409 01d4 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4409      44697643 
 4409      6D645061 
 4409      54797065 
 4409      53656C50 
 4410              	.LASF244:
 4411 01eb 64697669 		.ascii	"dividerNum\000"
 4411      6465724E 
 4411      756D00
 4412              	.LASF115:
 4413 01f6 63707573 		.ascii	"cpussFlashPaSize\000"
 4413      73466C61 
 4413      73685061 
 4413      53697A65 
 4413      00
 4414              	.LASF227:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 172


 4415 0207 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4415      5953434C 
 4415      4B5F5355 
 4415      43434553 
 4415      5300
 4416              	.LASF58:
 4417 0219 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4417      5F574F52 
 4417      4B5F4E45 
 4417      5756414C 
 4417      554500
 4418              	.LASF93:
 4419 022c 63707573 		.ascii	"cpussBase\000"
 4419      73426173 
 4419      6500
 4420              	.LASF35:
 4421 0236 4449565F 		.ascii	"DIV_16_5_CTL\000"
 4421      31365F35 
 4421      5F43544C 
 4421      00
 4422              	.LASF297:
 4423 0243 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4423      315F4973 
 4423      456E6443 
 4423      6F6E7665 
 4423      7273696F 
 4424              	.LASF41:
 4425 0259 5050555F 		.ascii	"PPU_PR\000"
 4425      505200
 4426              	.LASF117:
 4427 0260 63707573 		.ascii	"cpussFmIrq\000"
 4427      73466D49 
 4427      727100
 4428              	.LASF239:
 4429 026b 6877436F 		.ascii	"hwConfigStc\000"
 4429      6E666967 
 4429      53746300 
 4430              	.LASF118:
 4431 0277 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4431      734E6F74 
 4431      436F6E6E 
 4431      65637465 
 4431      64497271 
 4432              	.LASF261:
 4433 028c 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4433      315F5374 
 4433      61727443 
 4433      6F6E7665 
 4433      727400
 4434              	.LASF0:
 4435 029f 73686F72 		.ascii	"short int\000"
 4435      7420696E 
 4435      7400
 4436              	.LASF64:
 4437 02a9 53415455 		.ascii	"SATURATE_INTR\000"
 4437      52415445 
 4437      5F494E54 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 173


 4437      5200
 4438              	.LASF47:
 4439 02b7 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4439      4C455F54 
 4439      494D4530 
 4439      3100
 4440              	.LASF195:
 4441 02c5 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 4441      41525F57 
 4441      4149545F 
 4441      464F525F 
 4441      52455355 
 4442              	.LASF76:
 4443 02dc 494E4A5F 		.ascii	"INJ_RESULT\000"
 4443      52455355 
 4443      4C5400
 4444              	.LASF152:
 4445 02e7 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4445      44697643 
 4445      6D645061 
 4445      44697653 
 4445      656C506F 
 4446              	.LASF61:
 4447 02fd 494E5452 		.ascii	"INTR_SET\000"
 4447      5F534554 
 4447      00
 4448              	.LASF260:
 4449 0306 4144435F 		.ascii	"ADC_1_InitConfig\000"
 4449      315F496E 
 4449      6974436F 
 4449      6E666967 
 4449      00
 4450              	.LASF264:
 4451 0317 6D6F6465 		.ascii	"mode\000"
 4451      00
 4452              	.LASF219:
 4453 031c 73617449 		.ascii	"satIntrMask\000"
 4453      6E74724D 
 4453      61736B00 
 4454              	.LASF193:
 4455 0328 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 4455      6E5F7361 
 4455      725F7374 
 4455      6172745F 
 4455      636F6E76 
 4456              	.LASF149:
 4457 0346 70657269 		.ascii	"periTrGrSize\000"
 4457      54724772 
 4457      53697A65 
 4457      00
 4458              	.LASF120:
 4459 0353 73727373 		.ascii	"srssNumPll\000"
 4459      4E756D50 
 4459      6C6C00
 4460              	.LASF177:
 4461 035e 69706353 		.ascii	"ipcStructSize\000"
 4461      74727563 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 174


 4461      7453697A 
 4461      6500
 4462              	.LASF262:
 4463 036c 4144435F 		.ascii	"ADC_1_SetConvertMode\000"
 4463      315F5365 
 4463      74436F6E 
 4463      76657274 
 4463      4D6F6465 
 4464              	.LASF111:
 4465 0381 70726F74 		.ascii	"protVersion\000"
 4465      56657273 
 4465      696F6E00 
 4466              	.LASF201:
 4467 038d 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4467      41525F52 
 4467      414E4745 
 4467      5F434F4E 
 4467      445F4245 
 4468              	.LASF151:
 4469 03a5 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4469      44697643 
 4469      6D645479 
 4469      70655365 
 4469      6C506F73 
 4470              	.LASF168:
 4471 03ba 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4471      73547269 
 4471      6D52616D 
 4471      43746C4F 
 4471      66667365 
 4472              	.LASF179:
 4473 03d0 63795F73 		.ascii	"cy_stc_device_t\000"
 4473      74635F64 
 4473      65766963 
 4473      655F7400 
 4474              	.LASF30:
 4475 03e0 50455249 		.ascii	"PERI_PPU_PR_V1_Type\000"
 4475      5F505055 
 4475      5F50525F 
 4475      56315F54 
 4475      79706500 
 4476              	.LASF16:
 4477 03f4 75696E74 		.ascii	"uint32_t\000"
 4477      33325F74 
 4477      00
 4478              	.LASF161:
 4479 03fd 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4479      50727443 
 4479      66674F75 
 4479      744F6666 
 4479      73657400 
 4480              	.LASF60:
 4481 0411 494E5452 		.ascii	"INTR\000"
 4481      00
 4482              	.LASF183:
 4483 0416 666C6F61 		.ascii	"float\000"
 4483      7400
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 175


 4484              	.LASF104:
 4485 041c 63727970 		.ascii	"cryptoVersion\000"
 4485      746F5665 
 4485      7273696F 
 4485      6E00
 4486              	.LASF133:
 4487 042a 666C6173 		.ascii	"flashProgramDelay\000"
 4487      6850726F 
 4487      6772616D 
 4487      44656C61 
 4487      7900
 4488              	.LASF249:
 4489 043c 62617365 		.ascii	"base\000"
 4489      00
 4490              	.LASF238:
 4491 0441 6E756D43 		.ascii	"numChannels\000"
 4491      68616E6E 
 4491      656C7300 
 4492              	.LASF20:
 4493 044d 534C5F43 		.ascii	"SL_CTL\000"
 4493      544C00
 4494              	.LASF94:
 4495 0454 666C6173 		.ascii	"flashcBase\000"
 4495      68634261 
 4495      736500
 4496              	.LASF14:
 4497 045f 696E7431 		.ascii	"int16_t\000"
 4497      365F7400 
 4498              	.LASF160:
 4499 0467 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4499      50727443 
 4499      6667496E 
 4499      4F666673 
 4499      657400
 4500              	.LASF275:
 4501 047a 72657375 		.ascii	"result\000"
 4501      6C7400
 4502              	.LASF11:
 4503 0481 6C6F6E67 		.ascii	"long long unsigned int\000"
 4503      206C6F6E 
 4503      6720756E 
 4503      7369676E 
 4503      65642069 
 4504              	.LASF157:
 4505 0498 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4505      44697632 
 4505      345F3543 
 4505      746C4F66 
 4505      66736574 
 4506              	.LASF162:
 4507 04ad 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 4507      50727443 
 4507      66675369 
 4507      6F4F6666 
 4507      73657400 
 4508              	.LASF77:
 4509 04c1 52455345 		.ascii	"RESERVED7\000"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 176


 4509      52564544 
 4509      3700
 4510              	.LASF116:
 4511 04cb 63707573 		.ascii	"cpussIpc0Irq\000"
 4511      73497063 
 4511      30497271 
 4511      00
 4512              	.LASF48:
 4513 04d8 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4513      4C455F54 
 4513      494D4532 
 4513      3300
 4514              	.LASF214:
 4515 04e6 72616E67 		.ascii	"rangeThres\000"
 4515      65546872 
 4515      657300
 4516              	.LASF5:
 4517 04f1 5F5F7569 		.ascii	"__uint16_t\000"
 4517      6E743136 
 4517      5F7400
 4518              	.LASF202:
 4519 04fc 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4519      41525F52 
 4519      414E4745 
 4519      5F434F4E 
 4519      445F494E 
 4520              	.LASF226:
 4521 0515 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4521      74635F73 
 4521      61725F63 
 4521      6F6E6669 
 4521      675F7400 
 4522              	.LASF210:
 4523 0529 6374726C 		.ascii	"ctrl\000"
 4523      00
 4524              	.LASF291:
 4525 052e 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 4525      79734C69 
 4525      625F4173 
 4525      73657274 
 4525      4661696C 
 4526              	.LASF74:
 4527 0545 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4527      4348414E 
 4527      5F434F4E 
 4527      46494700 
 4528              	.LASF138:
 4529 0555 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4529      6843746C 
 4529      4D61696E 
 4529      57733346 
 4529      72657100 
 4530              	.LASF242:
 4531 0569 4144435F 		.ascii	"ADC_1_CONFIG_STRUCT\000"
 4531      315F434F 
 4531      4E464947 
 4531      5F535452 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 177


 4531      55435400 
 4532              	.LASF194:
 4533 057d 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
 4533      41525F52 
 4533      45545552 
 4533      4E5F5354 
 4533      41545553 
 4534              	.LASF38:
 4535 0592 54525F43 		.ascii	"TR_CMD\000"
 4535      4D4400
 4536              	.LASF91:
 4537 0599 5341525F 		.ascii	"SAR_Type\000"
 4537      54797065 
 4537      00
 4538              	.LASF288:
 4539 05a2 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 4539      41525F44 
 4539      65496E69 
 4539      7400
 4540              	.LASF231:
 4541 05b0 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4541      6E5F7379 
 4541      73636C6B 
 4541      5F737461 
 4541      7475735F 
 4542              	.LASF251:
 4543 05c6 4144435F 		.ascii	"ADC_1_intSarClock_SetDivider\000"
 4543      315F696E 
 4543      74536172 
 4543      436C6F63 
 4543      6B5F5365 
 4544              	.LASF131:
 4545 05e3 666C6173 		.ascii	"flashPipeRequired\000"
 4545      68506970 
 4545      65526571 
 4545      75697265 
 4545      6400
 4546              	.LASF70:
 4547 05f5 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4547      455F494E 
 4547      54525F4D 
 4547      41534B00 
 4548              	.LASF277:
 4549 0605 636F6E66 		.ascii	"configNum\000"
 4549      69674E75 
 4549      6D00
 4550              	.LASF278:
 4551 060f 4144435F 		.ascii	"ADC_1_Start\000"
 4551      315F5374 
 4551      61727400 
 4552              	.LASF225:
 4553 061b 5F426F6F 		.ascii	"_Bool\000"
 4553      6C00
 4554              	.LASF50:
 4555 0621 52414E47 		.ascii	"RANGE_COND\000"
 4555      455F434F 
 4555      4E4400
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 178


 4556              	.LASF135:
 4557 062c 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4557      6843746C 
 4557      4D61696E 
 4557      57733046 
 4557      72657100 
 4558              	.LASF36:
 4559 0640 4449565F 		.ascii	"DIV_24_5_CTL\000"
 4559      32345F35 
 4559      5F43544C 
 4559      00
 4560              	.LASF145:
 4561 064d 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4561      61747573 
 4561      43684964 
 4561      784D736B 
 4561      00
 4562              	.LASF207:
 4563 065e 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 4563      41525F49 
 4563      4E54525F 
 4563      454F535F 
 4563      4D41534B 
 4564              	.LASF99:
 4565 0673 6770696F 		.ascii	"gpioBase\000"
 4565      42617365 
 4565      00
 4566              	.LASF187:
 4567 067c 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 4567      41525F42 
 4567      41445F50 
 4567      4152414D 
 4567      00
 4568              	.LASF258:
 4569 068d 4144435F 		.ascii	"ADC_1_Stop\000"
 4569      315F5374 
 4569      6F7000
 4570              	.LASF272:
 4571 0698 6368616E 		.ascii	"chanCount\000"
 4571      436F756E 
 4571      7400
 4572              	.LASF34:
 4573 06a2 4449565F 		.ascii	"DIV_16_CTL\000"
 4573      31365F43 
 4573      544C00
 4574              	.LASF18:
 4575 06ad 434C4F43 		.ascii	"CLOCK_CTL\000"
 4575      4B5F4354 
 4575      4C00
 4576              	.LASF256:
 4577 06b7 656E6162 		.ascii	"enableMask\000"
 4577      6C654D61 
 4577      736B00
 4578              	.LASF170:
 4579 06c2 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4579      73537973 
 4579      5469636B 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 179


 4579      43746C4F 
 4579      66667365 
 4580              	.LASF126:
 4581 06d8 75646250 		.ascii	"udbPresent\000"
 4581      72657365 
 4581      6E7400
 4582              	.LASF144:
 4583 06e3 64775374 		.ascii	"dwStatusChIdxPos\000"
 4583      61747573 
 4583      43684964 
 4583      78506F73 
 4583      00
 4584              	.LASF90:
 4585 06f4 5341525F 		.ascii	"SAR_V1_Type\000"
 4585      56315F54 
 4585      79706500 
 4586              	.LASF224:
 4587 0700 76726566 		.ascii	"vrefMvValue\000"
 4587      4D765661 
 4587      6C756500 
 4588              	.LASF67:
 4589 070c 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4589      52415445 
 4589      5F494E54 
 4589      525F4D41 
 4589      534B4544 
 4590              	.LASF24:
 4591 0721 54525F4F 		.ascii	"TR_OUT_CTL\000"
 4591      55545F43 
 4591      544C00
 4592              	.LASF65:
 4593 072c 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4593      52415445 
 4593      5F494E54 
 4593      525F5345 
 4593      5400
 4594              	.LASF40:
 4595 073e 54525F47 		.ascii	"TR_GR\000"
 4595      5200
 4596              	.LASF203:
 4597 0744 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 4597      41525F52 
 4597      414E4745 
 4597      5F434F4E 
 4597      445F4142 
 4598              	.LASF182:
 4599 075c 63686172 		.ascii	"char\000"
 4599      00
 4600              	.LASF265:
 4601 0761 4144435F 		.ascii	"ADC_1_IRQ_Enable\000"
 4601      315F4952 
 4601      515F456E 
 4601      61626C65 
 4601      00
 4602              	.LASF216:
 4603 0772 6368616E 		.ascii	"chanEn\000"
 4603      456E00
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 180


 4604              	.LASF156:
 4605 0779 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4605      44697631 
 4605      365F3543 
 4605      746C4F66 
 4605      66736574 
 4606              	.LASF243:
 4607 078e 64697669 		.ascii	"dividerType\000"
 4607      64657254 
 4607      79706500 
 4608              	.LASF127:
 4609 079a 73797350 		.ascii	"sysPmSimoPresent\000"
 4609      6D53696D 
 4609      6F507265 
 4609      73656E74 
 4609      00
 4610              	.LASF129:
 4611 07ab 63727970 		.ascii	"cryptoMemSize\000"
 4611      746F4D65 
 4611      6D53697A 
 4611      6500
 4612              	.LASF59:
 4613 07b9 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4613      5F524553 
 4613      554C545F 
 4613      4E455756 
 4613      414C5545 
 4614              	.LASF79:
 4615 07ce 4156475F 		.ascii	"AVG_STAT\000"
 4615      53544154 
 4615      00
 4616              	.LASF247:
 4617 07d7 64697669 		.ascii	"dividerValue\000"
 4617      64657256 
 4617      616C7565 
 4617      00
 4618              	.LASF13:
 4619 07e4 75696E74 		.ascii	"uint8_t\000"
 4619      385F7400 
 4620              	.LASF190:
 4621 07ec 63795F65 		.ascii	"cy_en_sar_status_t\000"
 4621      6E5F7361 
 4621      725F7374 
 4621      61747573 
 4621      5F7400
 4622              	.LASF150:
 4623 07ff 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4623      44697643 
 4623      6D644469 
 4623      7653656C 
 4623      4D736B00 
 4624              	.LASF186:
 4625 0813 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 4625      41525F53 
 4625      55434345 
 4625      535300
 4626              	.LASF69:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 181


 4627 0822 52414E47 		.ascii	"RANGE_INTR_SET\000"
 4627      455F494E 
 4627      54525F53 
 4627      455400
 4628              	.LASF222:
 4629 0831 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4629      77697463 
 4629      68537143 
 4629      74726C00 
 4630              	.LASF215:
 4631 0841 72616E67 		.ascii	"rangeCond\000"
 4631      65436F6E 
 4631      6400
 4632              	.LASF174:
 4633 084b 63707573 		.ascii	"cpussRam0Ctl0\000"
 4633      7352616D 
 4633      3043746C 
 4633      3000
 4634              	.LASF10:
 4635 0859 6C6F6E67 		.ascii	"long long int\000"
 4635      206C6F6E 
 4635      6720696E 
 4635      7400
 4636              	.LASF101:
 4637 0867 69706342 		.ascii	"ipcBase\000"
 4637      61736500 
 4638              	.LASF142:
 4639 086f 64774368 		.ascii	"dwChCtlPrioPos\000"
 4639      43746C50 
 4639      72696F50 
 4639      6F7300
 4640              	.LASF102:
 4641 087e 63727970 		.ascii	"cryptoBase\000"
 4641      746F4261 
 4641      736500
 4642              	.LASF208:
 4643 0889 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 4643      41525F49 
 4643      4E54525F 
 4643      4F564552 
 4643      464C4F57 
 4644              	.LASF255:
 4645 08a3 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 4645      41525F53 
 4645      65744368 
 4645      616E4D61 
 4645      736B00
 4646              	.LASF209:
 4647 08b6 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 4647      41525F49 
 4647      4E54525F 
 4647      46575F43 
 4647      4F4C4C49 
 4648              	.LASF132:
 4649 08d4 666C6173 		.ascii	"flashWriteDelay\000"
 4649      68577269 
 4649      74654465 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 182


 4649      6C617900 
 4650              	.LASF294:
 4651 08e4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4651      43313120 
 4651      352E342E 
 4651      31203230 
 4651      31363036 
 4652 0917 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4652      20726576 
 4652      6973696F 
 4652      6E203233 
 4652      37373135 
 4653 094a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4653      67202D66 
 4653      66756E63 
 4653      74696F6E 
 4653      2D736563 
 4654              	.LASF43:
 4655 0976 5050555F 		.ascii	"PPU_GR\000"
 4655      475200
 4656              	.LASF246:
 4657 097d 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 4657      7973436C 
 4657      6B5F5065 
 4657      72697068 
 4657      53657444 
 4658              	.LASF4:
 4659 0998 5F5F696E 		.ascii	"__int16_t\000"
 4659      7431365F 
 4659      7400
 4660              	.LASF98:
 4661 09a2 6873696F 		.ascii	"hsiomBase\000"
 4661      6D426173 
 4661      6500
 4662              	.LASF290:
 4663 09ac 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 4663      41525F53 
 4663      74617274 
 4663      436F6E76 
 4663      65727400 
 4664              	.LASF55:
 4665 09c0 4348414E 		.ascii	"CHAN_RESULT\000"
 4665      5F524553 
 4665      554C5400 
 4666              	.LASF175:
 4667 09cc 63707573 		.ascii	"cpussRam1Ctl0\000"
 4667      7352616D 
 4667      3143746C 
 4667      3000
 4668              	.LASF148:
 4669 09da 70657269 		.ascii	"periTrGrOffset\000"
 4669      54724772 
 4669      4F666673 
 4669      657400
 4670              	.LASF68:
 4671 09e9 52414E47 		.ascii	"RANGE_INTR\000"
 4671      455F494E 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 183


 4671      545200
 4672              	.LASF114:
 4673 09f4 63707573 		.ascii	"cpussDwChNr\000"
 4673      73447743 
 4673      684E7200 
 4674              	.LASF62:
 4675 0a00 494E5452 		.ascii	"INTR_MASK\000"
 4675      5F4D4153 
 4675      4B00
 4676              	.LASF46:
 4677 0a0a 53414D50 		.ascii	"SAMPLE_CTRL\000"
 4677      4C455F43 
 4677      54524C00 
 4678              	.LASF280:
 4679 0a16 75736572 		.ascii	"userIsr\000"
 4679      49737200 
 4680              	.LASF188:
 4681 0a1e 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 4681      41525F54 
 4681      494D454F 
 4681      555400
 4682              	.LASF185:
 4683 0a2d 75696E74 		.ascii	"uint32\000"
 4683      333200
 4684              	.LASF112:
 4685 0a34 63707573 		.ascii	"cpussIpcNr\000"
 4685      73497063 
 4685      4E7200
 4686              	.LASF296:
 4687 0a3f 443A5C50 		.ascii	"D:\\Projects\\NS\\Neural-Stimulator-Firmware\\new\\"
 4687      726F6A65 
 4687      6374735C 
 4687      4E535C4E 
 4687      65757261 
 4688 0a6d 50534F43 		.ascii	"PSOC6\\dac_adc\\dac_adc.cydsn\000"
 4688      365C6461 
 4688      635F6164 
 4688      635C6461 
 4688      635F6164 
 4689              	.LASF82:
 4690 0a89 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 4690      53574954 
 4690      43485F43 
 4690      4C454152 
 4690      3000
 4691              	.LASF268:
 4692 0a9b 6D61736B 		.ascii	"mask\000"
 4692      00
 4693              	.LASF124:
 4694 0aa0 70617373 		.ascii	"passSarChannels\000"
 4694      53617243 
 4694      68616E6E 
 4694      656C7300 
 4695              	.LASF176:
 4696 0ab0 63707573 		.ascii	"cpussRam2Ctl0\000"
 4696      7352616D 
 4696      3243746C 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 184


 4696      3000
 4697              	.LASF191:
 4698 0abe 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 4698      41525F53 
 4698      54415254 
 4698      5F434F4E 
 4698      56455254 
 4699              	.LASF52:
 4700 0adf 53544152 		.ascii	"START_CTRL\000"
 4700      545F4354 
 4700      524C00
 4701              	.LASF234:
 4702 0aea 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 4702      5953434C 
 4702      4B5F4449 
 4702      565F3136 
 4702      5F355F42 
 4703              	.LASF155:
 4704 0b01 70657269 		.ascii	"periDiv16CtlOffset\000"
 4704      44697631 
 4704      3643746C 
 4704      4F666673 
 4704      657400
 4705              	.LASF287:
 4706 0b14 4144435F 		.ascii	"ADC_1_allConfigs\000"
 4706      315F616C 
 4706      6C436F6E 
 4706      66696773 
 4706      00
 4707              	.LASF267:
 4708 0b25 4144435F 		.ascii	"ADC_1_SetEosMask\000"
 4708      315F5365 
 4708      74456F73 
 4708      4D61736B 
 4708      00
 4709              	.LASF221:
 4710 0b36 6D757853 		.ascii	"muxSwitch\000"
 4710      77697463 
 4710      6800
 4711              	.LASF6:
 4712 0b40 73686F72 		.ascii	"short unsigned int\000"
 4712      7420756E 
 4712      7369676E 
 4712      65642069 
 4712      6E7400
 4713              	.LASF92:
 4714 0b53 6C6F6E67 		.ascii	"long double\000"
 4714      20646F75 
 4714      626C6500 
 4715              	.LASF15:
 4716 0b5f 75696E74 		.ascii	"uint16_t\000"
 4716      31365F74 
 4716      00
 4717              	.LASF257:
 4718 0b68 4144435F 		.ascii	"ADC_1_Enable\000"
 4718      315F456E 
 4718      61626C65 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 185


 4718      00
 4719              	.LASF147:
 4720 0b75 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 4720      5472436D 
 4720      64477253 
 4720      656C4D73 
 4720      6B00
 4721              	.LASF230:
 4722 0b87 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 4722      5953434C 
 4722      4B5F494E 
 4722      56414C49 
 4722      445F5354 
 4723              	.LASF212:
 4724 0b9f 73616D70 		.ascii	"sampleTime01\000"
 4724      6C655469 
 4724      6D653031 
 4724      00
 4725              	.LASF121:
 4726 0bac 73727373 		.ascii	"srssNumHfroot\000"
 4726      4E756D48 
 4726      66726F6F 
 4726      7400
 4727              	.LASF143:
 4728 0bba 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 4728      43746C50 
 4728      7265656D 
 4728      70746162 
 4728      6C65506F 
 4729              	.LASF233:
 4730 0bd0 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 4730      5953434C 
 4730      4B5F4449 
 4730      565F3136 
 4730      5F424954 
 4731              	.LASF105:
 4732 0be5 64775665 		.ascii	"dwVersion\000"
 4732      7273696F 
 4732      6E00
 4733              	.LASF137:
 4734 0bef 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 4734      6843746C 
 4734      4D61696E 
 4734      57733246 
 4734      72657100 
 4735              	.LASF1:
 4736 0c03 756E7369 		.ascii	"unsigned char\000"
 4736      676E6564 
 4736      20636861 
 4736      7200
 4737              	.LASF263:
 4738 0c11 636F6E66 		.ascii	"config\000"
 4738      696700
 4739              	.LASF200:
 4740 0c18 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 4740      41525F53 
 4740      57495443 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 186


 4740      485F5345 
 4740      515F4354 
 4741              	.LASF17:
 4742 0c36 73697A65 		.ascii	"sizetype\000"
 4742      74797065 
 4742      00
 4743              	.LASF228:
 4744 0c3f 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 4744      5953434C 
 4744      4B5F4241 
 4744      445F5041 
 4744      52414D00 
 4745              	.LASF172:
 4746 0c53 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 4746      73436D34 
 4746      4E6D6943 
 4746      746C4F66 
 4746      66736574 
 4747              	.LASF166:
 4748 0c68 63707573 		.ascii	"cpussCm0StatusOffset\000"
 4748      73436D30 
 4748      53746174 
 4748      75734F66 
 4748      66736574 
 4749              	.LASF154:
 4750 0c7d 70657269 		.ascii	"periDiv8CtlOffset\000"
 4750      44697638 
 4750      43746C4F 
 4750      66667365 
 4750      7400
 4751              	.LASF37:
 4752 0c8f 52455345 		.ascii	"RESERVED2\000"
 4752      52564544 
 4752      3200
 4753              	.LASF39:
 4754 0c99 52455345 		.ascii	"RESERVED3\000"
 4754      52564544 
 4754      3300
 4755              	.LASF42:
 4756 0ca3 52455345 		.ascii	"RESERVED4\000"
 4756      52564544 
 4756      3400
 4757              	.LASF73:
 4758 0cad 52455345 		.ascii	"RESERVED5\000"
 4758      52564544 
 4758      3500
 4759              	.LASF75:
 4760 0cb7 52455345 		.ascii	"RESERVED6\000"
 4760      52564544 
 4760      3600
 4761              	.LASF250:
 4762 0cc1 43795F53 		.ascii	"Cy_SAR_Disable\000"
 4762      41525F44 
 4762      69736162 
 4762      6C6500
 4763              	.LASF80:
 4764 0cd0 52455345 		.ascii	"RESERVED8\000"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 187


 4764      52564544 
 4764      3800
 4765              	.LASF83:
 4766 0cda 52455345 		.ascii	"RESERVED9\000"
 4766      52564544 
 4766      3900
 4767              	.LASF44:
 4768 0ce4 50455249 		.ascii	"PERI_V1_Type\000"
 4768      5F56315F 
 4768      54797065 
 4768      00
 4769              	.LASF85:
 4770 0cf1 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 4770      53574954 
 4770      43485F53 
 4770      515F4354 
 4770      524C00
 4771              	.LASF7:
 4772 0d04 6C6F6E67 		.ascii	"long int\000"
 4772      20696E74 
 4772      00
 4773              	.LASF103:
 4774 0d0d 63707573 		.ascii	"cpussVersion\000"
 4774      73566572 
 4774      73696F6E 
 4774      00
 4775              	.LASF107:
 4776 0d1a 6770696F 		.ascii	"gpioVersion\000"
 4776      56657273 
 4776      696F6E00 
 4777              	.LASF32:
 4778 0d26 4449565F 		.ascii	"DIV_CMD\000"
 4778      434D4400 
 4779              	.LASF106:
 4780 0d2e 666C6173 		.ascii	"flashcVersion\000"
 4780      68635665 
 4780      7273696F 
 4780      6E00
 4781              	.LASF128:
 4782 0d3c 70726F74 		.ascii	"protBusMasterMask\000"
 4782      4275734D 
 4782      61737465 
 4782      724D6173 
 4782      6B00
 4783              	.LASF97:
 4784 0d4e 70726F74 		.ascii	"protBase\000"
 4784      42617365 
 4784      00
 4785              	.LASF259:
 4786 0d57 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 4786      7973436C 
 4786      6B5F5065 
 4786      72697068 
 4786      456E6162 
 4787              	.LASF286:
 4788 0d75 4144435F 		.ascii	"ADC_1_currentConfig\000"
 4788      315F6375 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 188


 4788      7272656E 
 4788      74436F6E 
 4788      66696700 
 4789              	.LASF49:
 4790 0d89 52414E47 		.ascii	"RANGE_THRES\000"
 4790      455F5448 
 4790      52455300 
 4791              	.LASF181:
 4792 0d95 63686172 		.ascii	"char_t\000"
 4792      5F7400
 4793              	.LASF189:
 4794 0d9c 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
 4794      41525F43 
 4794      4F4E5645 
 4794      5253494F 
 4794      4E5F4E4F 
 4795              	.LASF54:
 4796 0dbb 4348414E 		.ascii	"CHAN_WORK\000"
 4796      5F574F52 
 4796      4B00
 4797              	.LASF184:
 4798 0dc5 646F7562 		.ascii	"double\000"
 4798      6C6500
 4799              	.LASF167:
 4800 0dcc 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 4800      73436D34 
 4800      50777243 
 4800      746C4F66 
 4800      66736574 
 4801              	.LASF3:
 4802 0de1 5F5F7569 		.ascii	"__uint8_t\000"
 4802      6E74385F 
 4802      7400
 4803              	.LASF240:
 4804 0deb 6D697363 		.ascii	"miscConfig\000"
 4804      436F6E66 
 4804      696700
 4805              	.LASF158:
 4806 0df6 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 4806      50727449 
 4806      6E747243 
 4806      66674F66 
 4806      66736574 
 4807              	.LASF164:
 4808 0e0b 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 4808      73436D34 
 4808      436C6F63 
 4808      6B43746C 
 4808      4F666673 
 4809              	.LASF63:
 4810 0e22 494E5452 		.ascii	"INTR_MASKED\000"
 4810      5F4D4153 
 4810      4B454400 
 4811              	.LASF169:
 4812 0e2e 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 4812      73547269 
 4812      6D526F6D 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 189


 4812      43746C4F 
 4812      66667365 
 4813              	.LASF213:
 4814 0e44 73616D70 		.ascii	"sampleTime23\000"
 4814      6C655469 
 4814      6D653233 
 4814      00
 4815              	.LASF293:
 4816 0e51 43795F53 		.ascii	"Cy_SAR_Enable\000"
 4816      41525F45 
 4816      6E61626C 
 4816      6500
 4817              	.LASF108:
 4818 0e5f 6873696F 		.ascii	"hsiomVersion\000"
 4818      6D566572 
 4818      73696F6E 
 4818      00
 4819              	.LASF9:
 4820 0e6c 6C6F6E67 		.ascii	"long unsigned int\000"
 4820      20756E73 
 4820      69676E65 
 4820      6420696E 
 4820      7400
 4821              	.LASF248:
 4822 0e7e 72657456 		.ascii	"retVal\000"
 4822      616C00
 4823              	.LASF173:
 4824 0e85 63707573 		.ascii	"cpussRomCtl\000"
 4824      73526F6D 
 4824      43746C00 
 4825              	.LASF81:
 4826 0e91 4D55585F 		.ascii	"MUX_SWITCH0\000"
 4826      53574954 
 4826      43483000 
 4827              	.LASF57:
 4828 0e9d 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 4828      5F524553 
 4828      554C545F 
 4828      55504441 
 4828      54454400 
 4829              	.LASF196:
 4830 0eb1 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 4830      6E5F7361 
 4830      725F7265 
 4830      7475726E 
 4830      5F6D6F64 
 4831              	.LASF53:
 4832 0ec9 4348414E 		.ascii	"CHAN_CONFIG\000"
 4832      5F434F4E 
 4832      46494700 
 4833              	.LASF211:
 4834 0ed5 73616D70 		.ascii	"sampleCtrl\000"
 4834      6C654374 
 4834      726C00
 4835              	.LASF206:
 4836 0ee0 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 4836      41525F49 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 190


 4836      4E54525F 
 4836      4D41534B 
 4836      5F4E4F4E 
 4837              	.LASF88:
 4838 0ef6 414E415F 		.ascii	"ANA_TRIM0\000"
 4838      5452494D 
 4838      3000
 4839              	.LASF89:
 4840 0f00 414E415F 		.ascii	"ANA_TRIM1\000"
 4840      5452494D 
 4840      3100
 4841              	.LASF8:
 4842 0f0a 5F5F7569 		.ascii	"__uint32_t\000"
 4842      6E743332 
 4842      5F7400
 4843              	.LASF180:
 4844 0f15 63795F69 		.ascii	"cy_israddress\000"
 4844      73726164 
 4844      64726573 
 4844      7300
 4845              	.LASF197:
 4846 0f23 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 4846      41525F53 
 4846      57495443 
 4846      485F4F50 
 4846      454E00
 4847              	.LASF235:
 4848 0f36 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 4848      5953434C 
 4848      4B5F4449 
 4848      565F3234 
 4848      5F355F42 
 4849              	.LASF66:
 4850 0f4d 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 4850      52415445 
 4850      5F494E54 
 4850      525F4D41 
 4850      534B00
 4851              	.LASF273:
 4852 0f60 7265744D 		.ascii	"retMode\000"
 4852      6F646500 
 4853              	.LASF87:
 4854 0f68 52455345 		.ascii	"RESERVED10\000"
 4854      52564544 
 4854      313000
 4855              	.LASF134:
 4856 0f73 666C6173 		.ascii	"flashEraseDelay\000"
 4856      68457261 
 4856      73654465 
 4856      6C617900 
 4857              	.LASF241:
 4858 0f83 636C6B44 		.ascii	"clkDivider\000"
 4858      69766964 
 4858      657200
 4859              	.LASF236:
 4860 0f8e 63795F65 		.ascii	"cy_en_divider_types_t\000"
 4860      6E5F6469 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 191


 4860      76696465 
 4860      725F7479 
 4860      7065735F 
 4861              	.LASF254:
 4862 0fa4 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 4862      41525F53 
 4862      6574496E 
 4862      74657272 
 4862      7570744D 
 4863              	.LASF274:
 4864 0fbc 656E644F 		.ascii	"endOfConversion\000"
 4864      66436F6E 
 4864      76657273 
 4864      696F6E00 
 4865              	.LASF199:
 4866 0fcc 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 4866      41525F53 
 4866      57495443 
 4866      485F5345 
 4866      515F4354 
 4867              	.LASF266:
 4868 0feb 4144435F 		.ascii	"ADC_1_IRQ_Disable\000"
 4868      315F4952 
 4868      515F4469 
 4868      7361626C 
 4868      6500
 4869              	.LASF289:
 4870 0ffd 43795F53 		.ascii	"Cy_SAR_Init\000"
 4870      41525F49 
 4870      6E697400 
 4871              	.LASF130:
 4872 1009 666C6173 		.ascii	"flashRwwRequired\000"
 4872      68527777 
 4872      52657175 
 4872      69726564 
 4872      00
 4873              	.LASF159:
 4874 101a 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 4874      50727443 
 4874      66674F66 
 4874      66736574 
 4874      00
 4875              	.LASF125:
 4876 102b 65704D6F 		.ascii	"epMonitorNr\000"
 4876      6E69746F 
 4876      724E7200 
 4877              	.LASF281:
 4878 1037 4144435F 		.ascii	"ADC_1_SelectConfig\000"
 4878      315F5365 
 4878      6C656374 
 4878      436F6E66 
 4878      696700
 4879              	.LASF2:
 4880 104a 7369676E 		.ascii	"signed char\000"
 4880      65642063 
 4880      68617200 
 4881              	.LASF140:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 192


 4882 1056 64774368 		.ascii	"dwChOffset\000"
 4882      4F666673 
 4882      657400
 4883              	.LASF113:
 4884 1061 63707573 		.ascii	"cpussIpcIrqNr\000"
 4884      73497063 
 4884      4972714E 
 4884      7200
 4885              	.LASF285:
 4886 106f 4144435F 		.ascii	"ADC_1_selected\000"
 4886      315F7365 
 4886      6C656374 
 4886      656400
 4887              	.LASF84:
 4888 107e 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 4888      53574954 
 4888      43485F44 
 4888      535F4354 
 4888      524C00
 4889              	.LASF165:
 4890 1091 63707573 		.ascii	"cpussCm4StatusOffset\000"
 4890      73436D34 
 4890      53746174 
 4890      75734F66 
 4890      66736574 
 4891              	.LASF217:
 4892 10a6 6368616E 		.ascii	"chanConfig\000"
 4892      436F6E66 
 4892      696700
 4893              	.LASF86:
 4894 10b1 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 4894      53574954 
 4894      43485F53 
 4894      54415455 
 4894      5300
 4895              	.LASF26:
 4896 10c3 41444452 		.ascii	"ADDR0\000"
 4896      3000
 4897              	.LASF28:
 4898 10c9 41444452 		.ascii	"ADDR1\000"
 4898      3100
 4899              	.LASF110:
 4900 10cf 70657269 		.ascii	"periVersion\000"
 4900      56657273 
 4900      696F6E00 
 4901              	.LASF269:
 4902 10db 6465496E 		.ascii	"deInitRouting\000"
 4902      6974526F 
 4902      7574696E 
 4902      6700
 4903              	.LASF223:
 4904 10e9 636F6E66 		.ascii	"configRouting\000"
 4904      6967526F 
 4904      7574696E 
 4904      6700
 4905              	.LASF100:
 4906 10f7 70617373 		.ascii	"passBase\000"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 193


 4906      42617365 
 4906      00
 4907              	.LASF27:
 4908 1100 41545430 		.ascii	"ATT0\000"
 4908      00
 4909              	.LASF29:
 4910 1105 41545431 		.ascii	"ATT1\000"
 4910      00
 4911              	.LASF22:
 4912 110a 52455345 		.ascii	"RESERVED1\000"
 4912      52564544 
 4912      3100
 4913              	.LASF119:
 4914 1114 73727373 		.ascii	"srssNumClkpath\000"
 4914      4E756D43 
 4914      6C6B7061 
 4914      746800
 4915              	.LASF78:
 4916 1123 53544154 		.ascii	"STATUS\000"
 4916      555300
 4917              	.LASF23:
 4918 112a 50455249 		.ascii	"PERI_GR_V1_Type\000"
 4918      5F47525F 
 4918      56315F54 
 4918      79706500 
 4919              	.LASF139:
 4920 113a 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 4920      6843746C 
 4920      4D61696E 
 4920      57733446 
 4920      72657100 
 4921              	.LASF220:
 4922 114e 72616E67 		.ascii	"rangeIntrMask\000"
 4922      65496E74 
 4922      724D6173 
 4922      6B00
 4923              	.LASF198:
 4924 115c 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 4924      41525F53 
 4924      57495443 
 4924      485F434C 
 4924      4F534500 
 4925              	.LASF270:
 4926 1170 696E7472 		.ascii	"intrMaskReg\000"
 4926      4D61736B 
 4926      52656700 
 4927              	.LASF205:
 4928 117c 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 4928      6E5F7361 
 4928      725F7261 
 4928      6E67655F 
 4928      64657465 
 4929              	.LASF21:
 4930 119f 54494D45 		.ascii	"TIMEOUT_CTL\000"
 4930      4F55545F 
 4930      43544C00 
 4931              	.LASF192:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccGRnDTe.s 			page 194


 4932 11ab 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 4932      41525F53 
 4932      54415254 
 4932      5F434F4E 
 4932      56455254 
 4933              	.LASF31:
 4934 11cb 50455249 		.ascii	"PERI_PPU_GR_V1_Type\000"
 4934      5F505055 
 4934      5F47525F 
 4934      56315F54 
 4934      79706500 
 4935              	.LASF109:
 4936 11df 69706356 		.ascii	"ipcVersion\000"
 4936      65727369 
 4936      6F6E00
 4937              	.LASF218:
 4938 11ea 696E7472 		.ascii	"intrMask\000"
 4938      4D61736B 
 4938      00
 4939              	.LASF146:
 4940 11f3 70657269 		.ascii	"periTrCmdOffset\000"
 4940      5472436D 
 4940      644F6666 
 4940      73657400 
 4941              	.LASF292:
 4942 1203 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 4942      41525F49 
 4942      73456E64 
 4942      436F6E76 
 4942      65727369 
 4943              	.LASF252:
 4944 121a 4144435F 		.ascii	"ADC_1_intSarClock_Enable\000"
 4944      315F696E 
 4944      74536172 
 4944      436C6F63 
 4944      6B5F456E 
 4945              	.LASF45:
 4946 1233 4354524C 		.ascii	"CTRL\000"
 4946      00
 4947              	.LASF237:
 4948 1238 6368616E 		.ascii	"channelBase\000"
 4948      6E656C42 
 4948      61736500 
 4949              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
