ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_1_initVar
  20              		.bss
  21              		.type	PWM_1_initVar, %object
  22              		.size	PWM_1_initVar, 1
  23              	PWM_1_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_1_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_1_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	PWM_1_Start, %function
  31              	PWM_1_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\PWM_1.c"
   1:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC5/PWM_1.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_1.c **** *
   5:Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_1.c **** *
  15:Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:Generated_Source\PSoC5/PWM_1.c **** *
  17:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_1.c **** 
  24:Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 2


  25:Generated_Source\PSoC5/PWM_1.c **** 
  26:Generated_Source\PSoC5/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_1.c **** 
  32:Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_1.c **** 
  34:Generated_Source\PSoC5/PWM_1.c **** 
  35:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  37:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_1.c **** *
  39:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_1.c **** *
  44:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_1.c **** *  None
  46:Generated_Source\PSoC5/PWM_1.c **** *
  47:Generated_Source\PSoC5/PWM_1.c **** * Return:
  48:Generated_Source\PSoC5/PWM_1.c **** *  None
  49:Generated_Source\PSoC5/PWM_1.c **** *
  50:Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_1.c **** *
  54:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  56:Generated_Source\PSoC5/PWM_1.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_1.c ****     {
  60:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_1_Init
  61:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC5/PWM_1.c ****     }
  63:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:Generated_Source\PSoC5/PWM_1.c **** 
  65:Generated_Source\PSoC5/PWM_1.c **** }
  58              		.loc 1 65 0
  59 001a 00BF     		nop
  60 001c 80BD     		pop	{r7, pc}
  61              	.L4:
  62 001e 00BF     		.align	2
  63              	.L3:
  64 0020 00000000 		.word	PWM_1_initVar
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	PWM_1_Start, .-PWM_1_Start
  68              		.section	.text.PWM_1_Init,"ax",%progbits
  69              		.align	2
  70              		.global	PWM_1_Init
  71              		.thumb
  72              		.thumb_func
  73              		.type	PWM_1_Init, %function
  74              	PWM_1_Init:
  75              	.LFB1:
  66:Generated_Source\PSoC5/PWM_1.c **** 
  67:Generated_Source\PSoC5/PWM_1.c **** 
  68:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  70:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_1.c **** *
  72:Generated_Source\PSoC5/PWM_1.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  76:Generated_Source\PSoC5/PWM_1.c **** *
  77:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_1.c **** *  None
  79:Generated_Source\PSoC5/PWM_1.c **** *
  80:Generated_Source\PSoC5/PWM_1.c **** * Return:
  81:Generated_Source\PSoC5/PWM_1.c **** *  None
  82:Generated_Source\PSoC5/PWM_1.c **** *
  83:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  85:Generated_Source\PSoC5/PWM_1.c **** {
  76              		.loc 1 85 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 8
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 82B0     		sub	sp, sp, #8
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 4


  87              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:Generated_Source\PSoC5/PWM_1.c **** 
  90:Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_1.c **** 
  97:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
  88              		.loc 1 99 0
  89 0006 284A     		ldr	r2, .L6
  90 0008 274B     		ldr	r3, .L6
  91 000a 1B78     		ldrb	r3, [r3]
  92 000c DBB2     		uxtb	r3, r3
  93 000e 43F00203 		orr	r3, r3, #2
  94 0012 DBB2     		uxtb	r3, r3
  95 0014 1370     		strb	r3, [r2]
 100:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_1.c **** 
 104:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
  96              		.loc 1 104 0
  97 0016 254B     		ldr	r3, .L6+4
  98 0018 1B78     		ldrb	r3, [r3]
  99 001a DBB2     		uxtb	r3, r3
 100 001c 23F07003 		bic	r3, r3, #112
 101 0020 FB71     		strb	r3, [r7, #7]
 105:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 102              		.loc 1 105 0
 103 0022 224A     		ldr	r2, .L6+4
 104 0024 FB79     		ldrb	r3, [r7, #7]
 105 0026 43F03003 		orr	r3, r3, #48
 106 002a DBB2     		uxtb	r3, r3
 107 002c 1370     		strb	r3, [r2]
 106:Generated_Source\PSoC5/PWM_1.c **** 
 107:Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 108              		.loc 1 108 0
 109 002e 204A     		ldr	r2, .L6+8
 110 0030 1F4B     		ldr	r3, .L6+8
 111 0032 1B78     		ldrb	r3, [r3]
 112 0034 DBB2     		uxtb	r3, r3
 113 0036 23F03003 		bic	r3, r3, #48
 114 003a DBB2     		uxtb	r3, r3
 115 003c 1370     		strb	r3, [r2]
 109:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 116              		.loc 1 109 0
 117 003e 1C4A     		ldr	r2, .L6+8
 118 0040 1B4B     		ldr	r3, .L6+8
 119 0042 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 5


 120 0044 DBB2     		uxtb	r3, r3
 121 0046 43F03003 		orr	r3, r3, #48
 122 004a DBB2     		uxtb	r3, r3
 123 004c 1370     		strb	r3, [r2]
 110:Generated_Source\PSoC5/PWM_1.c **** 
 111:Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 124              		.loc 1 112 0
 125 004e 184A     		ldr	r2, .L6+8
 126 0050 174B     		ldr	r3, .L6+8
 127 0052 1B78     		ldrb	r3, [r3]
 128 0054 DBB2     		uxtb	r3, r3
 129 0056 23F00F03 		bic	r3, r3, #15
 130 005a DBB2     		uxtb	r3, r3
 131 005c 1370     		strb	r3, [r2]
 113:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 132              		.loc 1 113 0
 133 005e 144A     		ldr	r2, .L6+8
 134 0060 134B     		ldr	r3, .L6+8
 135 0062 1B78     		ldrb	r3, [r3]
 136 0064 DBB2     		uxtb	r3, r3
 137 0066 43F00F03 		orr	r3, r3, #15
 138 006a DBB2     		uxtb	r3, r3
 139 006c 1370     		strb	r3, [r2]
 114:Generated_Source\PSoC5/PWM_1.c **** 
 115:Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_1.c **** 
 123:Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_1.c **** 
 133:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_1.c **** 
 136:Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 140              		.loc 1 136 0
 141 006e 6420     		movs	r0, #100
 142 0070 FFF7FEFF 		bl	PWM_1_WritePeriod
 137:Generated_Source\PSoC5/PWM_1.c **** 
 138:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 143              		.loc 1 139 0
 144 0074 3220     		movs	r0, #50
 145 0076 FFF7FEFF 		bl	PWM_1_WriteCompare
 140:Generated_Source\PSoC5/PWM_1.c ****         #else
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 6


 141:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_1.c **** 
 145:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_1.c **** 
 149:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_1.c **** 
 153:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 146              		.loc 1 154 0
 147 007a 0020     		movs	r0, #0
 148 007c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_1.c **** 
 157:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 149              		.loc 1 159 0
 150 0080 0C4A     		ldr	r2, .L6+12
 151 0082 0C4B     		ldr	r3, .L6+12
 152 0084 1B78     		ldrb	r3, [r3]
 153 0086 DBB2     		uxtb	r3, r3
 154 0088 43F00103 		orr	r3, r3, #1
 155 008c DBB2     		uxtb	r3, r3
 156 008e 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 157              		.loc 1 161 0
 158 0090 094A     		ldr	r2, .L6+16
 159 0092 094B     		ldr	r3, .L6+16
 160 0094 1B78     		ldrb	r3, [r3]
 161 0096 DBB2     		uxtb	r3, r3
 162 0098 43F00103 		orr	r3, r3, #1
 163 009c DBB2     		uxtb	r3, r3
 164 009e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/PWM_1.c ****     #else
 163:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:Generated_Source\PSoC5/PWM_1.c **** 
 165:Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_1.c **** 
 171:Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:Generated_Source\PSoC5/PWM_1.c **** 
 174:Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 7


 179:Generated_Source\PSoC5/PWM_1.c **** }
 165              		.loc 1 179 0
 166 00a0 00BF     		nop
 167 00a2 0837     		adds	r7, r7, #8
 168              		.cfi_def_cfa_offset 8
 169 00a4 BD46     		mov	sp, r7
 170              		.cfi_def_cfa_register 13
 171              		@ sp needed
 172 00a6 80BD     		pop	{r7, pc}
 173              	.L7:
 174              		.align	2
 175              	.L6:
 176 00a8 004F0040 		.word	1073762048
 177 00ac 024F0040 		.word	1073762050
 178 00b0 0B4F0040 		.word	1073762059
 179 00b4 A3430040 		.word	1073759139
 180 00b8 014F0040 		.word	1073762049
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	PWM_1_Init, .-PWM_1_Init
 184              		.section	.text.PWM_1_Enable,"ax",%progbits
 185              		.align	2
 186              		.global	PWM_1_Enable
 187              		.thumb
 188              		.thumb_func
 189              		.type	PWM_1_Enable, %function
 190              	PWM_1_Enable:
 191              	.LFB2:
 180:Generated_Source\PSoC5/PWM_1.c **** 
 181:Generated_Source\PSoC5/PWM_1.c **** 
 182:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 184:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_1.c **** *
 186:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_1.c **** *
 189:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_1.c **** *  None
 191:Generated_Source\PSoC5/PWM_1.c **** *
 192:Generated_Source\PSoC5/PWM_1.c **** * Return:
 193:Generated_Source\PSoC5/PWM_1.c **** *  None
 194:Generated_Source\PSoC5/PWM_1.c **** *
 195:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_1.c **** *
 198:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 200:Generated_Source\PSoC5/PWM_1.c **** {
 192              		.loc 1 200 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              		.cfi_def_cfa_offset 4
 199              		.cfi_offset 7, -4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 8


 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 202              		.loc 1 203 0
 203 0004 0D4A     		ldr	r2, .L9
 204 0006 0D4B     		ldr	r3, .L9
 205 0008 1B78     		ldrb	r3, [r3]
 206 000a DBB2     		uxtb	r3, r3
 207 000c 43F00103 		orr	r3, r3, #1
 208 0010 DBB2     		uxtb	r3, r3
 209 0012 1370     		strb	r3, [r2]
 204:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 210              		.loc 1 204 0
 211 0014 0A4A     		ldr	r2, .L9+4
 212 0016 0A4B     		ldr	r3, .L9+4
 213 0018 1B78     		ldrb	r3, [r3]
 214 001a DBB2     		uxtb	r3, r3
 215 001c 43F00103 		orr	r3, r3, #1
 216 0020 DBB2     		uxtb	r3, r3
 217 0022 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_1.c **** 
 207:Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 218              		.loc 1 209 0
 219 0024 074A     		ldr	r2, .L9+8
 220 0026 074B     		ldr	r3, .L9+8
 221 0028 1B78     		ldrb	r3, [r3]
 222 002a DBB2     		uxtb	r3, r3
 223 002c 43F00103 		orr	r3, r3, #1
 224 0030 DBB2     		uxtb	r3, r3
 225 0032 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_1.c **** }
 226              		.loc 1 211 0
 227 0034 00BF     		nop
 228 0036 BD46     		mov	sp, r7
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0038 80BC     		pop	{r7}
 232              		.cfi_restore 7
 233              		.cfi_def_cfa_offset 0
 234 003a 7047     		bx	lr
 235              	.L10:
 236              		.align	2
 237              	.L9:
 238 003c A3430040 		.word	1073759139
 239 0040 B3430040 		.word	1073759155
 240 0044 004F0040 		.word	1073762048
 241              		.cfi_endproc
 242              	.LFE2:
 243              		.size	PWM_1_Enable, .-PWM_1_Enable
 244              		.section	.text.PWM_1_Stop,"ax",%progbits
 245              		.align	2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 9


 246              		.global	PWM_1_Stop
 247              		.thumb
 248              		.thumb_func
 249              		.type	PWM_1_Stop, %function
 250              	PWM_1_Stop:
 251              	.LFB3:
 212:Generated_Source\PSoC5/PWM_1.c **** 
 213:Generated_Source\PSoC5/PWM_1.c **** 
 214:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 216:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_1.c **** *
 218:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_1.c **** *
 222:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_1.c **** *  None
 224:Generated_Source\PSoC5/PWM_1.c **** *
 225:Generated_Source\PSoC5/PWM_1.c **** * Return:
 226:Generated_Source\PSoC5/PWM_1.c **** *  None
 227:Generated_Source\PSoC5/PWM_1.c **** *
 228:Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_1.c **** *
 232:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 234:Generated_Source\PSoC5/PWM_1.c **** {
 252              		.loc 1 234 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 257 0000 80B4     		push	{r7}
 258              		.cfi_def_cfa_offset 4
 259              		.cfi_offset 7, -4
 260 0002 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 262              		.loc 1 236 0
 263 0004 0D4A     		ldr	r2, .L12
 264 0006 0D4B     		ldr	r3, .L12
 265 0008 1B78     		ldrb	r3, [r3]
 266 000a DBB2     		uxtb	r3, r3
 267 000c 23F00103 		bic	r3, r3, #1
 268 0010 DBB2     		uxtb	r3, r3
 269 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_1.c **** 
 239:Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 270              		.loc 1 241 0
 271 0014 0A4A     		ldr	r2, .L12+4
 272 0016 0A4B     		ldr	r3, .L12+4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 10


 273 0018 1B78     		ldrb	r3, [r3]
 274 001a DBB2     		uxtb	r3, r3
 275 001c 23F00103 		bic	r3, r3, #1
 276 0020 DBB2     		uxtb	r3, r3
 277 0022 1370     		strb	r3, [r2]
 242:Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 278              		.loc 1 242 0
 279 0024 074A     		ldr	r2, .L12+8
 280 0026 074B     		ldr	r3, .L12+8
 281 0028 1B78     		ldrb	r3, [r3]
 282 002a DBB2     		uxtb	r3, r3
 283 002c 23F00103 		bic	r3, r3, #1
 284 0030 DBB2     		uxtb	r3, r3
 285 0032 1370     		strb	r3, [r2]
 243:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_1.c **** }
 286              		.loc 1 244 0
 287 0034 00BF     		nop
 288 0036 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 0038 80BC     		pop	{r7}
 292              		.cfi_restore 7
 293              		.cfi_def_cfa_offset 0
 294 003a 7047     		bx	lr
 295              	.L13:
 296              		.align	2
 297              	.L12:
 298 003c 004F0040 		.word	1073762048
 299 0040 A3430040 		.word	1073759139
 300 0044 B3430040 		.word	1073759155
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	PWM_1_Stop, .-PWM_1_Stop
 304              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_1_WritePeriod
 307              		.thumb
 308              		.thumb_func
 309              		.type	PWM_1_WritePeriod, %function
 310              	PWM_1_WritePeriod:
 311              	.LFB4:
 245:Generated_Source\PSoC5/PWM_1.c **** 
 246:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_1.c **** 
 249:Generated_Source\PSoC5/PWM_1.c **** 
 250:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_1.c ****         *
 254:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_1.c ****         *
 258:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 11


 260:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_1.c ****         *
 262:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_1.c ****         *  None
 264:Generated_Source\PSoC5/PWM_1.c ****         *
 265:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_1.c ****         {
 268:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_1.c **** 
 270:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_1.c ****                 #else
 273:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_1.c **** 
 276:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_1.c **** 
 279:Generated_Source\PSoC5/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:Generated_Source\PSoC5/PWM_1.c **** 
 281:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_1.c ****                 #else
 285:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_1.c **** 
 288:Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_1.c ****                 #else
 292:Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_1.c **** 
 295:Generated_Source\PSoC5/PWM_1.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_1.c **** 
 300:Generated_Source\PSoC5/PWM_1.c ****             #else
 301:Generated_Source\PSoC5/PWM_1.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_1.c ****         }
 304:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_1.c **** 
 306:Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_1.c **** 
 308:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_1.c **** 
 310:Generated_Source\PSoC5/PWM_1.c **** 
 311:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_1.c ****         *
 315:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 12


 317:Generated_Source\PSoC5/PWM_1.c ****         *
 318:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_1.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_1.c ****         *
 322:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_1.c ****         *  None
 324:Generated_Source\PSoC5/PWM_1.c ****         *
 325:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_1.c ****         {
 328:Generated_Source\PSoC5/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_1.c ****             #else
 332:Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_1.c **** 
 335:Generated_Source\PSoC5/PWM_1.c ****             #if (PWM_1_UseControl)
 336:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:Generated_Source\PSoC5/PWM_1.c ****         }
 340:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_1.c **** 
 342:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_1.c **** 
 344:Generated_Source\PSoC5/PWM_1.c **** 
 345:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_1.c ****     *
 349:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_1.c ****     *
 352:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_1.c ****     *
 356:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_1.c ****     *  None
 358:Generated_Source\PSoC5/PWM_1.c ****     *
 359:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_1.c ****     {
 362:Generated_Source\PSoC5/PWM_1.c **** 
 363:Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_1.c ****         #else
 367:Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_1.c **** 
 370:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 371:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 13


 374:Generated_Source\PSoC5/PWM_1.c ****     }
 375:Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_1.c **** 
 377:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_1.c **** 
 379:Generated_Source\PSoC5/PWM_1.c **** 
 380:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_1.c **** 
 382:Generated_Source\PSoC5/PWM_1.c **** 
 383:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_1.c ****     *
 387:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_1.c ****     *
 393:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_1.c ****     *
 396:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_1.c ****     *  None
 398:Generated_Source\PSoC5/PWM_1.c ****     *
 399:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_1.c ****     *
 402:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_1.c ****                                        
 405:Generated_Source\PSoC5/PWM_1.c ****     {
 406:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 407:Generated_Source\PSoC5/PWM_1.c ****     }
 408:Generated_Source\PSoC5/PWM_1.c **** 
 409:Generated_Source\PSoC5/PWM_1.c **** 
 410:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_1.c ****     *
 414:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_1.c ****     *
 418:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_1.c ****     *  None
 420:Generated_Source\PSoC5/PWM_1.c ****     *
 421:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_1.c ****     *
 424:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_1.c ****     {
 427:Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 14


 431:Generated_Source\PSoC5/PWM_1.c **** 
 432:Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 434:Generated_Source\PSoC5/PWM_1.c ****     }
 435:Generated_Source\PSoC5/PWM_1.c **** 
 436:Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:Generated_Source\PSoC5/PWM_1.c **** 
 438:Generated_Source\PSoC5/PWM_1.c **** 
 439:Generated_Source\PSoC5/PWM_1.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:Generated_Source\PSoC5/PWM_1.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_1.c ****         *
 443:Generated_Source\PSoC5/PWM_1.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_1.c ****         *
 446:Generated_Source\PSoC5/PWM_1.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_1.c ****         *  None
 448:Generated_Source\PSoC5/PWM_1.c ****         *
 449:Generated_Source\PSoC5/PWM_1.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_1.c ****         *  None
 451:Generated_Source\PSoC5/PWM_1.c ****         *
 452:Generated_Source\PSoC5/PWM_1.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_1.c ****         {
 455:Generated_Source\PSoC5/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_1.c ****             {
 457:Generated_Source\PSoC5/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:Generated_Source\PSoC5/PWM_1.c ****             }
 459:Generated_Source\PSoC5/PWM_1.c ****         }
 460:Generated_Source\PSoC5/PWM_1.c **** 
 461:Generated_Source\PSoC5/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:Generated_Source\PSoC5/PWM_1.c **** 
 463:Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_1.c **** 
 465:Generated_Source\PSoC5/PWM_1.c **** 
 466:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_1.c **** *
 470:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_1.c **** *
 474:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_1.c **** *
 478:Generated_Source\PSoC5/PWM_1.c **** * Return:
 479:Generated_Source\PSoC5/PWM_1.c **** *  None
 480:Generated_Source\PSoC5/PWM_1.c **** *
 481:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_1.c **** {
 312              		.loc 1 483 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 15


 316              		@ link register save eliminated.
 317 0000 80B4     		push	{r7}
 318              		.cfi_def_cfa_offset 4
 319              		.cfi_offset 7, -4
 320 0002 83B0     		sub	sp, sp, #12
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 0346     		mov	r3, r0
 325 0008 FB71     		strb	r3, [r7, #7]
 484:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 326              		.loc 1 485 0
 327 000a 044B     		ldr	r3, .L15
 328 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 329 000e 92B2     		uxth	r2, r2
 330 0010 1A80     		strh	r2, [r3]	@ movhi
 486:Generated_Source\PSoC5/PWM_1.c ****     #else
 487:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 488:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_1.c **** }
 331              		.loc 1 489 0
 332 0012 00BF     		nop
 333 0014 0C37     		adds	r7, r7, #12
 334              		.cfi_def_cfa_offset 4
 335 0016 BD46     		mov	sp, r7
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0018 80BC     		pop	{r7}
 339              		.cfi_restore 7
 340              		.cfi_def_cfa_offset 0
 341 001a 7047     		bx	lr
 342              	.L16:
 343              		.align	2
 344              	.L15:
 345 001c 044F0040 		.word	1073762052
 346              		.cfi_endproc
 347              	.LFE4:
 348              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 349              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 350              		.align	2
 351              		.global	PWM_1_WriteCompare
 352              		.thumb
 353              		.thumb_func
 354              		.type	PWM_1_WriteCompare, %function
 355              	PWM_1_WriteCompare:
 356              	.LFB5:
 490:Generated_Source\PSoC5/PWM_1.c **** 
 491:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_1.c **** 
 493:Generated_Source\PSoC5/PWM_1.c **** 
 494:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_1.c ****     *
 498:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 16


 500:Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_1.c ****     *
 505:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_1.c ****     *
 508:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_1.c ****     *  None
 510:Generated_Source\PSoC5/PWM_1.c ****     *
 511:Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_1.c ****     *
 515:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_1.c ****                                        
 518:Generated_Source\PSoC5/PWM_1.c ****     {
 357              		.loc 1 518 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 8
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 7, -4
 365 0002 83B0     		sub	sp, sp, #12
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 369 0006 0346     		mov	r3, r0
 370 0008 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 371              		.loc 1 520 0
 372 000a 044B     		ldr	r3, .L18
 373 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 374 000e 92B2     		uxth	r2, r2
 375 0010 1A80     		strh	r2, [r3]	@ movhi
 521:Generated_Source\PSoC5/PWM_1.c ****         #else
 522:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_1.c **** 
 525:Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_1.c ****             #else
 529:Generated_Source\PSoC5/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_1.c ****     }
 376              		.loc 1 532 0
 377 0012 00BF     		nop
 378 0014 0C37     		adds	r7, r7, #12
 379              		.cfi_def_cfa_offset 4
 380 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 17


 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 0018 80BC     		pop	{r7}
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
 386 001a 7047     		bx	lr
 387              	.L19:
 388              		.align	2
 389              	.L18:
 390 001c 064F0040 		.word	1073762054
 391              		.cfi_endproc
 392              	.LFE5:
 393              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 394              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 395              		.align	2
 396              		.global	PWM_1_SetInterruptMode
 397              		.thumb
 398              		.thumb_func
 399              		.type	PWM_1_SetInterruptMode, %function
 400              	PWM_1_SetInterruptMode:
 401              	.LFB6:
 533:Generated_Source\PSoC5/PWM_1.c **** 
 534:Generated_Source\PSoC5/PWM_1.c **** 
 535:Generated_Source\PSoC5/PWM_1.c **** #else
 536:Generated_Source\PSoC5/PWM_1.c **** 
 537:Generated_Source\PSoC5/PWM_1.c **** 
 538:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_1.c ****     *
 542:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_1.c ****     *
 548:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_1.c ****     *
 551:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_1.c ****     *  None
 553:Generated_Source\PSoC5/PWM_1.c ****     *
 554:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_1.c ****                                         
 557:Generated_Source\PSoC5/PWM_1.c ****     {
 558:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_1.c ****         #else
 561:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_1.c ****     }
 564:Generated_Source\PSoC5/PWM_1.c **** 
 565:Generated_Source\PSoC5/PWM_1.c **** 
 566:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 18


 569:Generated_Source\PSoC5/PWM_1.c ****     *
 570:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_1.c ****     *
 577:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_1.c ****     *
 580:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_1.c ****     *  None
 582:Generated_Source\PSoC5/PWM_1.c ****     *
 583:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_1.c ****                                         
 586:Generated_Source\PSoC5/PWM_1.c ****     {
 587:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_1.c ****         #else
 590:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_1.c ****     }
 593:Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_1.c **** 
 595:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_1.c **** 
 597:Generated_Source\PSoC5/PWM_1.c **** 
 598:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_1.c ****     *
 602:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_1.c ****     *
 605:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_1.c ****     *
 608:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_1.c ****     *  None
 610:Generated_Source\PSoC5/PWM_1.c ****     *
 611:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_1.c ****     {
 614:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_1.c ****         #else
 618:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_1.c **** 
 622:Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 19


 626:Generated_Source\PSoC5/PWM_1.c ****             #else
 627:Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_1.c **** 
 630:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_1.c ****     }
 632:Generated_Source\PSoC5/PWM_1.c **** 
 633:Generated_Source\PSoC5/PWM_1.c **** 
 634:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_1.c ****     *
 638:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_1.c ****     *
 641:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_1.c ****     *  None
 643:Generated_Source\PSoC5/PWM_1.c ****     *
 644:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_1.c ****     *
 647:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_1.c ****     {
 650:Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_1.c ****         #else
 654:Generated_Source\PSoC5/PWM_1.c **** 
 655:Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_1.c ****             #else
 660:Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_1.c ****     }
 664:Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_1.c **** 
 666:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_1.c **** 
 668:Generated_Source\PSoC5/PWM_1.c **** 
 669:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_1.c ****     *
 673:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_1.c ****     *
 677:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_1.c ****     *
 680:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_1.c ****     *  None
 682:Generated_Source\PSoC5/PWM_1.c ****     *
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 20


 683:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_1.c ****     {
 402              		.loc 1 685 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 8
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 7, -4
 410 0002 83B0     		sub	sp, sp, #12
 411              		.cfi_def_cfa_offset 16
 412 0004 00AF     		add	r7, sp, #0
 413              		.cfi_def_cfa_register 7
 414 0006 0346     		mov	r3, r0
 415 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 416              		.loc 1 686 0
 417 000a 044A     		ldr	r2, .L21
 418 000c FB79     		ldrb	r3, [r7, #7]
 419 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_1.c ****     }
 420              		.loc 1 687 0
 421 0010 00BF     		nop
 422 0012 0C37     		adds	r7, r7, #12
 423              		.cfi_def_cfa_offset 4
 424 0014 BD46     		mov	sp, r7
 425              		.cfi_def_cfa_register 13
 426              		@ sp needed
 427 0016 80BC     		pop	{r7}
 428              		.cfi_restore 7
 429              		.cfi_def_cfa_offset 0
 430 0018 7047     		bx	lr
 431              	.L22:
 432 001a 00BF     		.align	2
 433              	.L21:
 434 001c 034F0040 		.word	1073762051
 435              		.cfi_endproc
 436              	.LFE6:
 437              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 438              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 439              		.align	2
 440              		.global	PWM_1_ReadStatusRegister
 441              		.thumb
 442              		.thumb_func
 443              		.type	PWM_1_ReadStatusRegister, %function
 444              	PWM_1_ReadStatusRegister:
 445              	.LFB7:
 688:Generated_Source\PSoC5/PWM_1.c **** 
 689:Generated_Source\PSoC5/PWM_1.c **** 
 690:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_1.c ****     *
 694:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register.
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 21


 696:Generated_Source\PSoC5/PWM_1.c ****     *
 697:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_1.c ****     *  None
 699:Generated_Source\PSoC5/PWM_1.c ****     *
 700:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_1.c ****     *
 710:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_1.c ****     {
 446              		.loc 1 712 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451 0000 80B4     		push	{r7}
 452              		.cfi_def_cfa_offset 4
 453              		.cfi_offset 7, -4
 454 0002 00AF     		add	r7, sp, #0
 455              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 456              		.loc 1 713 0
 457 0004 034B     		ldr	r3, .L25
 458 0006 1B78     		ldrb	r3, [r3]
 459 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_1.c ****     }
 460              		.loc 1 714 0
 461 000a 1846     		mov	r0, r3
 462 000c BD46     		mov	sp, r7
 463              		.cfi_def_cfa_register 13
 464              		@ sp needed
 465 000e 80BC     		pop	{r7}
 466              		.cfi_restore 7
 467              		.cfi_def_cfa_offset 0
 468 0010 7047     		bx	lr
 469              	.L26:
 470 0012 00BF     		.align	2
 471              	.L25:
 472 0014 034F0040 		.word	1073762051
 473              		.cfi_endproc
 474              	.LFE7:
 475              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 476              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 477              		.align	2
 478              		.global	PWM_1_ReadControlRegister
 479              		.thumb
 480              		.thumb_func
 481              		.type	PWM_1_ReadControlRegister, %function
 482              	PWM_1_ReadControlRegister:
 483              	.LFB8:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 22


 715:Generated_Source\PSoC5/PWM_1.c **** 
 716:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_1.c **** 
 718:Generated_Source\PSoC5/PWM_1.c **** 
 719:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 720:Generated_Source\PSoC5/PWM_1.c **** 
 721:Generated_Source\PSoC5/PWM_1.c **** 
 722:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_1.c ****     *
 726:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_1.c ****     *
 730:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_1.c ****     *  None
 732:Generated_Source\PSoC5/PWM_1.c ****     *
 733:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_1.c ****     *
 736:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_1.c ****     {
 484              		.loc 1 738 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 8
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 489 0000 80B4     		push	{r7}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 7, -4
 492 0002 83B0     		sub	sp, sp, #12
 493              		.cfi_def_cfa_offset 16
 494 0004 00AF     		add	r7, sp, #0
 495              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_1.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_1.c **** 
 741:Generated_Source\PSoC5/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 496              		.loc 1 741 0
 497 0006 044B     		ldr	r3, .L29
 498 0008 1B78     		ldrb	r3, [r3]
 499 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_1.c ****         return (result);
 500              		.loc 1 742 0
 501 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_1.c ****     }
 502              		.loc 1 743 0
 503 000e 1846     		mov	r0, r3
 504 0010 0C37     		adds	r7, r7, #12
 505              		.cfi_def_cfa_offset 4
 506 0012 BD46     		mov	sp, r7
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 0014 80BC     		pop	{r7}
 510              		.cfi_restore 7
 511              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 23


 512 0016 7047     		bx	lr
 513              	.L30:
 514              		.align	2
 515              	.L29:
 516 0018 004F0040 		.word	1073762048
 517              		.cfi_endproc
 518              	.LFE8:
 519              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 520              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 521              		.align	2
 522              		.global	PWM_1_WriteControlRegister
 523              		.thumb
 524              		.thumb_func
 525              		.type	PWM_1_WriteControlRegister, %function
 526              	PWM_1_WriteControlRegister:
 527              	.LFB9:
 744:Generated_Source\PSoC5/PWM_1.c **** 
 745:Generated_Source\PSoC5/PWM_1.c **** 
 746:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_1.c ****     *
 750:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_1.c ****     *
 754:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_1.c ****     *
 761:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_1.c ****     *  None
 763:Generated_Source\PSoC5/PWM_1.c ****     *
 764:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_1.c ****     {
 528              		.loc 1 766 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 7, -4
 536 0002 83B0     		sub	sp, sp, #12
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 0346     		mov	r3, r0
 541 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 542              		.loc 1 767 0
 543 000a 044A     		ldr	r2, .L32
 544 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 24


 545 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_1.c ****     }
 546              		.loc 1 768 0
 547 0010 00BF     		nop
 548 0012 0C37     		adds	r7, r7, #12
 549              		.cfi_def_cfa_offset 4
 550 0014 BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 0016 80BC     		pop	{r7}
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0018 7047     		bx	lr
 557              	.L33:
 558 001a 00BF     		.align	2
 559              	.L32:
 560 001c 004F0040 		.word	1073762048
 561              		.cfi_endproc
 562              	.LFE9:
 563              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 564              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 565              		.align	2
 566              		.global	PWM_1_ReadCompare
 567              		.thumb
 568              		.thumb_func
 569              		.type	PWM_1_ReadCompare, %function
 570              	PWM_1_ReadCompare:
 571              	.LFB10:
 769:Generated_Source\PSoC5/PWM_1.c **** 
 770:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:Generated_Source\PSoC5/PWM_1.c **** 
 772:Generated_Source\PSoC5/PWM_1.c **** 
 773:Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_1.c **** 
 775:Generated_Source\PSoC5/PWM_1.c **** 
 776:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_1.c ****     *
 780:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_1.c ****     *
 783:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_1.c ****     *  None
 785:Generated_Source\PSoC5/PWM_1.c ****     *
 786:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_1.c ****     *
 789:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_1.c ****     {
 792:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 793:Generated_Source\PSoC5/PWM_1.c ****     }
 794:Generated_Source\PSoC5/PWM_1.c **** 
 795:Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_1.c **** 
 797:Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 25


 798:Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_1.c **** 
 800:Generated_Source\PSoC5/PWM_1.c **** 
 801:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_1.c ****     *
 805:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_1.c ****     *
 809:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_1.c ****     *  None
 811:Generated_Source\PSoC5/PWM_1.c ****     *
 812:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_1.c ****     *
 815:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_1.c ****     {
 572              		.loc 1 817 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 582              		.loc 1 819 0
 583 0004 034B     		ldr	r3, .L36
 584 0006 1B88     		ldrh	r3, [r3]	@ movhi
 585 0008 9BB2     		uxth	r3, r3
 586 000a DBB2     		uxtb	r3, r3
 820:Generated_Source\PSoC5/PWM_1.c ****         #else
 821:Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_1.c ****     }
 587              		.loc 1 823 0
 588 000c 1846     		mov	r0, r3
 589 000e BD46     		mov	sp, r7
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 0010 80BC     		pop	{r7}
 593              		.cfi_restore 7
 594              		.cfi_def_cfa_offset 0
 595 0012 7047     		bx	lr
 596              	.L37:
 597              		.align	2
 598              	.L36:
 599 0014 064F0040 		.word	1073762054
 600              		.cfi_endproc
 601              	.LFE10:
 602              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 26


 603              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 604              		.align	2
 605              		.global	PWM_1_ReadPeriod
 606              		.thumb
 607              		.thumb_func
 608              		.type	PWM_1_ReadPeriod, %function
 609              	PWM_1_ReadPeriod:
 610              	.LFB11:
 824:Generated_Source\PSoC5/PWM_1.c **** 
 825:Generated_Source\PSoC5/PWM_1.c **** #else
 826:Generated_Source\PSoC5/PWM_1.c **** 
 827:Generated_Source\PSoC5/PWM_1.c **** 
 828:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_1.c ****     *
 832:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_1.c ****     *
 835:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_1.c ****     *  None
 837:Generated_Source\PSoC5/PWM_1.c ****     *
 838:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_1.c ****     *
 841:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_1.c ****     {
 844:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_1.c ****     }
 846:Generated_Source\PSoC5/PWM_1.c **** 
 847:Generated_Source\PSoC5/PWM_1.c **** 
 848:Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_1.c ****     *
 852:Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_1.c ****     *
 855:Generated_Source\PSoC5/PWM_1.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_1.c ****     *  None
 857:Generated_Source\PSoC5/PWM_1.c ****     *
 858:Generated_Source\PSoC5/PWM_1.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_1.c ****     *
 861:Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_1.c ****     {
 864:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_1.c ****     }
 866:Generated_Source\PSoC5/PWM_1.c **** 
 867:Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_1.c **** 
 869:Generated_Source\PSoC5/PWM_1.c **** 
 870:Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 27


 873:Generated_Source\PSoC5/PWM_1.c **** *
 874:Generated_Source\PSoC5/PWM_1.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_1.c **** *
 877:Generated_Source\PSoC5/PWM_1.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_1.c **** *  None
 879:Generated_Source\PSoC5/PWM_1.c **** *
 880:Generated_Source\PSoC5/PWM_1.c **** * Return:
 881:Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_1.c **** *
 883:Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_1.c **** {
 611              		.loc 1 885 0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 1, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 616 0000 80B4     		push	{r7}
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 00AF     		add	r7, sp, #0
 620              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 621              		.loc 1 887 0
 622 0004 034B     		ldr	r3, .L40
 623 0006 1B88     		ldrh	r3, [r3]	@ movhi
 624 0008 9BB2     		uxth	r3, r3
 625 000a DBB2     		uxtb	r3, r3
 888:Generated_Source\PSoC5/PWM_1.c ****     #else
 889:Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 890:Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_1.c **** }
 626              		.loc 1 891 0
 627 000c 1846     		mov	r0, r3
 628 000e BD46     		mov	sp, r7
 629              		.cfi_def_cfa_register 13
 630              		@ sp needed
 631 0010 80BC     		pop	{r7}
 632              		.cfi_restore 7
 633              		.cfi_def_cfa_offset 0
 634 0012 7047     		bx	lr
 635              	.L41:
 636              		.align	2
 637              	.L40:
 638 0014 044F0040 		.word	1073762052
 639              		.cfi_endproc
 640              	.LFE11:
 641              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 642              		.text
 643              	.Letext0:
 644              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 645              		.section	.debug_info,"",%progbits
 646              	.Ldebug_info0:
 647 0000 31020000 		.4byte	0x231
 648 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 28


 649 0006 00000000 		.4byte	.Ldebug_abbrev0
 650 000a 04       		.byte	0x4
 651 000b 01       		.uleb128 0x1
 652 000c 13000000 		.4byte	.LASF35
 653 0010 0C       		.byte	0xc
 654 0011 AD010000 		.4byte	.LASF36
 655 0015 3C020000 		.4byte	.LASF37
 656 0019 00000000 		.4byte	.Ldebug_ranges0+0
 657 001d 00000000 		.4byte	0
 658 0021 00000000 		.4byte	.Ldebug_line0
 659 0025 02       		.uleb128 0x2
 660 0026 01       		.byte	0x1
 661 0027 06       		.byte	0x6
 662 0028 D0020000 		.4byte	.LASF0
 663 002c 02       		.uleb128 0x2
 664 002d 01       		.byte	0x1
 665 002e 08       		.byte	0x8
 666 002f F5000000 		.4byte	.LASF1
 667 0033 02       		.uleb128 0x2
 668 0034 02       		.byte	0x2
 669 0035 05       		.byte	0x5
 670 0036 A1020000 		.4byte	.LASF2
 671 003a 02       		.uleb128 0x2
 672 003b 02       		.byte	0x2
 673 003c 07       		.byte	0x7
 674 003d A8000000 		.4byte	.LASF3
 675 0041 02       		.uleb128 0x2
 676 0042 04       		.byte	0x4
 677 0043 05       		.byte	0x5
 678 0044 B6020000 		.4byte	.LASF4
 679 0048 02       		.uleb128 0x2
 680 0049 04       		.byte	0x4
 681 004a 07       		.byte	0x7
 682 004b 19010000 		.4byte	.LASF5
 683 004f 02       		.uleb128 0x2
 684 0050 08       		.byte	0x8
 685 0051 05       		.byte	0x5
 686 0052 F4010000 		.4byte	.LASF6
 687 0056 02       		.uleb128 0x2
 688 0057 08       		.byte	0x8
 689 0058 07       		.byte	0x7
 690 0059 96010000 		.4byte	.LASF7
 691 005d 03       		.uleb128 0x3
 692 005e 04       		.byte	0x4
 693 005f 05       		.byte	0x5
 694 0060 696E7400 		.ascii	"int\000"
 695 0064 02       		.uleb128 0x2
 696 0065 04       		.byte	0x4
 697 0066 07       		.byte	0x7
 698 0067 89010000 		.4byte	.LASF8
 699 006b 04       		.uleb128 0x4
 700 006c 2B010000 		.4byte	.LASF9
 701 0070 02       		.byte	0x2
 702 0071 E401     		.2byte	0x1e4
 703 0073 2C000000 		.4byte	0x2c
 704 0077 04       		.uleb128 0x4
 705 0078 77010000 		.4byte	.LASF10
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 29


 706 007c 02       		.byte	0x2
 707 007d E501     		.2byte	0x1e5
 708 007f 3A000000 		.4byte	0x3a
 709 0083 02       		.uleb128 0x2
 710 0084 04       		.byte	0x4
 711 0085 04       		.byte	0x4
 712 0086 D4000000 		.4byte	.LASF11
 713 008a 02       		.uleb128 0x2
 714 008b 08       		.byte	0x8
 715 008c 04       		.byte	0x4
 716 008d 62010000 		.4byte	.LASF12
 717 0091 02       		.uleb128 0x2
 718 0092 01       		.byte	0x1
 719 0093 08       		.byte	0x8
 720 0094 BF020000 		.4byte	.LASF13
 721 0098 04       		.uleb128 0x4
 722 0099 03010000 		.4byte	.LASF14
 723 009d 02       		.byte	0x2
 724 009e 8E02     		.2byte	0x28e
 725 00a0 A4000000 		.4byte	0xa4
 726 00a4 05       		.uleb128 0x5
 727 00a5 6B000000 		.4byte	0x6b
 728 00a9 04       		.uleb128 0x4
 729 00aa 00000000 		.4byte	.LASF15
 730 00ae 02       		.byte	0x2
 731 00af 8F02     		.2byte	0x28f
 732 00b1 B5000000 		.4byte	0xb5
 733 00b5 05       		.uleb128 0x5
 734 00b6 77000000 		.4byte	0x77
 735 00ba 02       		.uleb128 0x2
 736 00bb 08       		.byte	0x8
 737 00bc 04       		.byte	0x4
 738 00bd C4020000 		.4byte	.LASF16
 739 00c1 02       		.uleb128 0x2
 740 00c2 04       		.byte	0x4
 741 00c3 07       		.byte	0x7
 742 00c4 D8010000 		.4byte	.LASF17
 743 00c8 06       		.uleb128 0x6
 744 00c9 E4020000 		.4byte	.LASF18
 745 00cd 01       		.byte	0x1
 746 00ce 37       		.byte	0x37
 747 00cf 00000000 		.4byte	.LFB0
 748 00d3 24000000 		.4byte	.LFE0-.LFB0
 749 00d7 01       		.uleb128 0x1
 750 00d8 9C       		.byte	0x9c
 751 00d9 07       		.uleb128 0x7
 752 00da 7E010000 		.4byte	.LASF21
 753 00de 01       		.byte	0x1
 754 00df 54       		.byte	0x54
 755 00e0 00000000 		.4byte	.LFB1
 756 00e4 BC000000 		.4byte	.LFE1-.LFB1
 757 00e8 01       		.uleb128 0x1
 758 00e9 9C       		.byte	0x9c
 759 00ea FD000000 		.4byte	0xfd
 760 00ee 08       		.uleb128 0x8
 761 00ef D3010000 		.4byte	.LASF28
 762 00f3 01       		.byte	0x1
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 30


 763 00f4 57       		.byte	0x57
 764 00f5 6B000000 		.4byte	0x6b
 765 00f9 02       		.uleb128 0x2
 766 00fa 91       		.byte	0x91
 767 00fb 77       		.sleb128 -9
 768 00fc 00       		.byte	0
 769 00fd 09       		.uleb128 0x9
 770 00fe 06000000 		.4byte	.LASF19
 771 0102 01       		.byte	0x1
 772 0103 C7       		.byte	0xc7
 773 0104 00000000 		.4byte	.LFB2
 774 0108 48000000 		.4byte	.LFE2-.LFB2
 775 010c 01       		.uleb128 0x1
 776 010d 9C       		.byte	0x9c
 777 010e 09       		.uleb128 0x9
 778 010f AB020000 		.4byte	.LASF20
 779 0113 01       		.byte	0x1
 780 0114 E9       		.byte	0xe9
 781 0115 00000000 		.4byte	.LFB3
 782 0119 48000000 		.4byte	.LFE3-.LFB3
 783 011d 01       		.uleb128 0x1
 784 011e 9C       		.byte	0x9c
 785 011f 0A       		.uleb128 0xa
 786 0120 2A020000 		.4byte	.LASF22
 787 0124 01       		.byte	0x1
 788 0125 E201     		.2byte	0x1e2
 789 0127 00000000 		.4byte	.LFB4
 790 012b 20000000 		.4byte	.LFE4-.LFB4
 791 012f 01       		.uleb128 0x1
 792 0130 9C       		.byte	0x9c
 793 0131 45010000 		.4byte	0x145
 794 0135 0B       		.uleb128 0xb
 795 0136 A1000000 		.4byte	.LASF24
 796 013a 01       		.byte	0x1
 797 013b E201     		.2byte	0x1e2
 798 013d 6B000000 		.4byte	0x6b
 799 0141 02       		.uleb128 0x2
 800 0142 91       		.byte	0x91
 801 0143 77       		.sleb128 -9
 802 0144 00       		.byte	0
 803 0145 0A       		.uleb128 0xa
 804 0146 E1010000 		.4byte	.LASF23
 805 014a 01       		.byte	0x1
 806 014b 0402     		.2byte	0x204
 807 014d 00000000 		.4byte	.LFB5
 808 0151 20000000 		.4byte	.LFE5-.LFB5
 809 0155 01       		.uleb128 0x1
 810 0156 9C       		.byte	0x9c
 811 0157 6B010000 		.4byte	0x16b
 812 015b 0B       		.uleb128 0xb
 813 015c DC020000 		.4byte	.LASF25
 814 0160 01       		.byte	0x1
 815 0161 0402     		.2byte	0x204
 816 0163 6B000000 		.4byte	0x6b
 817 0167 02       		.uleb128 0x2
 818 0168 91       		.byte	0x91
 819 0169 77       		.sleb128 -9
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 31


 820 016a 00       		.byte	0
 821 016b 0A       		.uleb128 0xa
 822 016c 39010000 		.4byte	.LASF26
 823 0170 01       		.byte	0x1
 824 0171 AC02     		.2byte	0x2ac
 825 0173 00000000 		.4byte	.LFB6
 826 0177 20000000 		.4byte	.LFE6-.LFB6
 827 017b 01       		.uleb128 0x1
 828 017c 9C       		.byte	0x9c
 829 017d 91010000 		.4byte	0x191
 830 0181 0B       		.uleb128 0xb
 831 0182 1C020000 		.4byte	.LASF27
 832 0186 01       		.byte	0x1
 833 0187 AC02     		.2byte	0x2ac
 834 0189 6B000000 		.4byte	0x6b
 835 018d 02       		.uleb128 0x2
 836 018e 91       		.byte	0x91
 837 018f 77       		.sleb128 -9
 838 0190 00       		.byte	0
 839 0191 0C       		.uleb128 0xc
 840 0192 BB000000 		.4byte	.LASF32
 841 0196 01       		.byte	0x1
 842 0197 C702     		.2byte	0x2c7
 843 0199 6B000000 		.4byte	0x6b
 844 019d 00000000 		.4byte	.LFB7
 845 01a1 18000000 		.4byte	.LFE7-.LFB7
 846 01a5 01       		.uleb128 0x1
 847 01a6 9C       		.byte	0x9c
 848 01a7 0D       		.uleb128 0xd
 849 01a8 02020000 		.4byte	.LASF38
 850 01ac 01       		.byte	0x1
 851 01ad E102     		.2byte	0x2e1
 852 01af 6B000000 		.4byte	0x6b
 853 01b3 00000000 		.4byte	.LFB8
 854 01b7 1C000000 		.4byte	.LFE8-.LFB8
 855 01bb 01       		.uleb128 0x1
 856 01bc 9C       		.byte	0x9c
 857 01bd D1010000 		.4byte	0x1d1
 858 01c1 0E       		.uleb128 0xe
 859 01c2 CC010000 		.4byte	.LASF29
 860 01c6 01       		.byte	0x1
 861 01c7 E302     		.2byte	0x2e3
 862 01c9 6B000000 		.4byte	0x6b
 863 01cd 02       		.uleb128 0x2
 864 01ce 91       		.byte	0x91
 865 01cf 77       		.sleb128 -9
 866 01d0 00       		.byte	0
 867 01d1 0A       		.uleb128 0xa
 868 01d2 DA000000 		.4byte	.LASF30
 869 01d6 01       		.byte	0x1
 870 01d7 FD02     		.2byte	0x2fd
 871 01d9 00000000 		.4byte	.LFB9
 872 01dd 20000000 		.4byte	.LFE9-.LFB9
 873 01e1 01       		.uleb128 0x1
 874 01e2 9C       		.byte	0x9c
 875 01e3 F7010000 		.4byte	0x1f7
 876 01e7 0B       		.uleb128 0xb
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 32


 877 01e8 31010000 		.4byte	.LASF31
 878 01ec 01       		.byte	0x1
 879 01ed FD02     		.2byte	0x2fd
 880 01ef 6B000000 		.4byte	0x6b
 881 01f3 02       		.uleb128 0x2
 882 01f4 91       		.byte	0x91
 883 01f5 77       		.sleb128 -9
 884 01f6 00       		.byte	0
 885 01f7 0C       		.uleb128 0xc
 886 01f8 50010000 		.4byte	.LASF33
 887 01fc 01       		.byte	0x1
 888 01fd 3003     		.2byte	0x330
 889 01ff 6B000000 		.4byte	0x6b
 890 0203 00000000 		.4byte	.LFB10
 891 0207 18000000 		.4byte	.LFE10-.LFB10
 892 020b 01       		.uleb128 0x1
 893 020c 9C       		.byte	0x9c
 894 020d 0C       		.uleb128 0xc
 895 020e 08010000 		.4byte	.LASF34
 896 0212 01       		.byte	0x1
 897 0213 7403     		.2byte	0x374
 898 0215 6B000000 		.4byte	0x6b
 899 0219 00000000 		.4byte	.LFB11
 900 021d 18000000 		.4byte	.LFE11-.LFB11
 901 0221 01       		.uleb128 0x1
 902 0222 9C       		.byte	0x9c
 903 0223 0F       		.uleb128 0xf
 904 0224 69010000 		.4byte	.LASF39
 905 0228 01       		.byte	0x1
 906 0229 20       		.byte	0x20
 907 022a 6B000000 		.4byte	0x6b
 908 022e 05       		.uleb128 0x5
 909 022f 03       		.byte	0x3
 910 0230 00000000 		.4byte	PWM_1_initVar
 911 0234 00       		.byte	0
 912              		.section	.debug_abbrev,"",%progbits
 913              	.Ldebug_abbrev0:
 914 0000 01       		.uleb128 0x1
 915 0001 11       		.uleb128 0x11
 916 0002 01       		.byte	0x1
 917 0003 25       		.uleb128 0x25
 918 0004 0E       		.uleb128 0xe
 919 0005 13       		.uleb128 0x13
 920 0006 0B       		.uleb128 0xb
 921 0007 03       		.uleb128 0x3
 922 0008 0E       		.uleb128 0xe
 923 0009 1B       		.uleb128 0x1b
 924 000a 0E       		.uleb128 0xe
 925 000b 55       		.uleb128 0x55
 926 000c 17       		.uleb128 0x17
 927 000d 11       		.uleb128 0x11
 928 000e 01       		.uleb128 0x1
 929 000f 10       		.uleb128 0x10
 930 0010 17       		.uleb128 0x17
 931 0011 00       		.byte	0
 932 0012 00       		.byte	0
 933 0013 02       		.uleb128 0x2
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 33


 934 0014 24       		.uleb128 0x24
 935 0015 00       		.byte	0
 936 0016 0B       		.uleb128 0xb
 937 0017 0B       		.uleb128 0xb
 938 0018 3E       		.uleb128 0x3e
 939 0019 0B       		.uleb128 0xb
 940 001a 03       		.uleb128 0x3
 941 001b 0E       		.uleb128 0xe
 942 001c 00       		.byte	0
 943 001d 00       		.byte	0
 944 001e 03       		.uleb128 0x3
 945 001f 24       		.uleb128 0x24
 946 0020 00       		.byte	0
 947 0021 0B       		.uleb128 0xb
 948 0022 0B       		.uleb128 0xb
 949 0023 3E       		.uleb128 0x3e
 950 0024 0B       		.uleb128 0xb
 951 0025 03       		.uleb128 0x3
 952 0026 08       		.uleb128 0x8
 953 0027 00       		.byte	0
 954 0028 00       		.byte	0
 955 0029 04       		.uleb128 0x4
 956 002a 16       		.uleb128 0x16
 957 002b 00       		.byte	0
 958 002c 03       		.uleb128 0x3
 959 002d 0E       		.uleb128 0xe
 960 002e 3A       		.uleb128 0x3a
 961 002f 0B       		.uleb128 0xb
 962 0030 3B       		.uleb128 0x3b
 963 0031 05       		.uleb128 0x5
 964 0032 49       		.uleb128 0x49
 965 0033 13       		.uleb128 0x13
 966 0034 00       		.byte	0
 967 0035 00       		.byte	0
 968 0036 05       		.uleb128 0x5
 969 0037 35       		.uleb128 0x35
 970 0038 00       		.byte	0
 971 0039 49       		.uleb128 0x49
 972 003a 13       		.uleb128 0x13
 973 003b 00       		.byte	0
 974 003c 00       		.byte	0
 975 003d 06       		.uleb128 0x6
 976 003e 2E       		.uleb128 0x2e
 977 003f 00       		.byte	0
 978 0040 3F       		.uleb128 0x3f
 979 0041 19       		.uleb128 0x19
 980 0042 03       		.uleb128 0x3
 981 0043 0E       		.uleb128 0xe
 982 0044 3A       		.uleb128 0x3a
 983 0045 0B       		.uleb128 0xb
 984 0046 3B       		.uleb128 0x3b
 985 0047 0B       		.uleb128 0xb
 986 0048 27       		.uleb128 0x27
 987 0049 19       		.uleb128 0x19
 988 004a 11       		.uleb128 0x11
 989 004b 01       		.uleb128 0x1
 990 004c 12       		.uleb128 0x12
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 34


 991 004d 06       		.uleb128 0x6
 992 004e 40       		.uleb128 0x40
 993 004f 18       		.uleb128 0x18
 994 0050 9642     		.uleb128 0x2116
 995 0052 19       		.uleb128 0x19
 996 0053 00       		.byte	0
 997 0054 00       		.byte	0
 998 0055 07       		.uleb128 0x7
 999 0056 2E       		.uleb128 0x2e
 1000 0057 01       		.byte	0x1
 1001 0058 3F       		.uleb128 0x3f
 1002 0059 19       		.uleb128 0x19
 1003 005a 03       		.uleb128 0x3
 1004 005b 0E       		.uleb128 0xe
 1005 005c 3A       		.uleb128 0x3a
 1006 005d 0B       		.uleb128 0xb
 1007 005e 3B       		.uleb128 0x3b
 1008 005f 0B       		.uleb128 0xb
 1009 0060 27       		.uleb128 0x27
 1010 0061 19       		.uleb128 0x19
 1011 0062 11       		.uleb128 0x11
 1012 0063 01       		.uleb128 0x1
 1013 0064 12       		.uleb128 0x12
 1014 0065 06       		.uleb128 0x6
 1015 0066 40       		.uleb128 0x40
 1016 0067 18       		.uleb128 0x18
 1017 0068 9642     		.uleb128 0x2116
 1018 006a 19       		.uleb128 0x19
 1019 006b 01       		.uleb128 0x1
 1020 006c 13       		.uleb128 0x13
 1021 006d 00       		.byte	0
 1022 006e 00       		.byte	0
 1023 006f 08       		.uleb128 0x8
 1024 0070 34       		.uleb128 0x34
 1025 0071 00       		.byte	0
 1026 0072 03       		.uleb128 0x3
 1027 0073 0E       		.uleb128 0xe
 1028 0074 3A       		.uleb128 0x3a
 1029 0075 0B       		.uleb128 0xb
 1030 0076 3B       		.uleb128 0x3b
 1031 0077 0B       		.uleb128 0xb
 1032 0078 49       		.uleb128 0x49
 1033 0079 13       		.uleb128 0x13
 1034 007a 02       		.uleb128 0x2
 1035 007b 18       		.uleb128 0x18
 1036 007c 00       		.byte	0
 1037 007d 00       		.byte	0
 1038 007e 09       		.uleb128 0x9
 1039 007f 2E       		.uleb128 0x2e
 1040 0080 00       		.byte	0
 1041 0081 3F       		.uleb128 0x3f
 1042 0082 19       		.uleb128 0x19
 1043 0083 03       		.uleb128 0x3
 1044 0084 0E       		.uleb128 0xe
 1045 0085 3A       		.uleb128 0x3a
 1046 0086 0B       		.uleb128 0xb
 1047 0087 3B       		.uleb128 0x3b
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 35


 1048 0088 0B       		.uleb128 0xb
 1049 0089 27       		.uleb128 0x27
 1050 008a 19       		.uleb128 0x19
 1051 008b 11       		.uleb128 0x11
 1052 008c 01       		.uleb128 0x1
 1053 008d 12       		.uleb128 0x12
 1054 008e 06       		.uleb128 0x6
 1055 008f 40       		.uleb128 0x40
 1056 0090 18       		.uleb128 0x18
 1057 0091 9742     		.uleb128 0x2117
 1058 0093 19       		.uleb128 0x19
 1059 0094 00       		.byte	0
 1060 0095 00       		.byte	0
 1061 0096 0A       		.uleb128 0xa
 1062 0097 2E       		.uleb128 0x2e
 1063 0098 01       		.byte	0x1
 1064 0099 3F       		.uleb128 0x3f
 1065 009a 19       		.uleb128 0x19
 1066 009b 03       		.uleb128 0x3
 1067 009c 0E       		.uleb128 0xe
 1068 009d 3A       		.uleb128 0x3a
 1069 009e 0B       		.uleb128 0xb
 1070 009f 3B       		.uleb128 0x3b
 1071 00a0 05       		.uleb128 0x5
 1072 00a1 27       		.uleb128 0x27
 1073 00a2 19       		.uleb128 0x19
 1074 00a3 11       		.uleb128 0x11
 1075 00a4 01       		.uleb128 0x1
 1076 00a5 12       		.uleb128 0x12
 1077 00a6 06       		.uleb128 0x6
 1078 00a7 40       		.uleb128 0x40
 1079 00a8 18       		.uleb128 0x18
 1080 00a9 9742     		.uleb128 0x2117
 1081 00ab 19       		.uleb128 0x19
 1082 00ac 01       		.uleb128 0x1
 1083 00ad 13       		.uleb128 0x13
 1084 00ae 00       		.byte	0
 1085 00af 00       		.byte	0
 1086 00b0 0B       		.uleb128 0xb
 1087 00b1 05       		.uleb128 0x5
 1088 00b2 00       		.byte	0
 1089 00b3 03       		.uleb128 0x3
 1090 00b4 0E       		.uleb128 0xe
 1091 00b5 3A       		.uleb128 0x3a
 1092 00b6 0B       		.uleb128 0xb
 1093 00b7 3B       		.uleb128 0x3b
 1094 00b8 05       		.uleb128 0x5
 1095 00b9 49       		.uleb128 0x49
 1096 00ba 13       		.uleb128 0x13
 1097 00bb 02       		.uleb128 0x2
 1098 00bc 18       		.uleb128 0x18
 1099 00bd 00       		.byte	0
 1100 00be 00       		.byte	0
 1101 00bf 0C       		.uleb128 0xc
 1102 00c0 2E       		.uleb128 0x2e
 1103 00c1 00       		.byte	0
 1104 00c2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 36


 1105 00c3 19       		.uleb128 0x19
 1106 00c4 03       		.uleb128 0x3
 1107 00c5 0E       		.uleb128 0xe
 1108 00c6 3A       		.uleb128 0x3a
 1109 00c7 0B       		.uleb128 0xb
 1110 00c8 3B       		.uleb128 0x3b
 1111 00c9 05       		.uleb128 0x5
 1112 00ca 27       		.uleb128 0x27
 1113 00cb 19       		.uleb128 0x19
 1114 00cc 49       		.uleb128 0x49
 1115 00cd 13       		.uleb128 0x13
 1116 00ce 11       		.uleb128 0x11
 1117 00cf 01       		.uleb128 0x1
 1118 00d0 12       		.uleb128 0x12
 1119 00d1 06       		.uleb128 0x6
 1120 00d2 40       		.uleb128 0x40
 1121 00d3 18       		.uleb128 0x18
 1122 00d4 9742     		.uleb128 0x2117
 1123 00d6 19       		.uleb128 0x19
 1124 00d7 00       		.byte	0
 1125 00d8 00       		.byte	0
 1126 00d9 0D       		.uleb128 0xd
 1127 00da 2E       		.uleb128 0x2e
 1128 00db 01       		.byte	0x1
 1129 00dc 3F       		.uleb128 0x3f
 1130 00dd 19       		.uleb128 0x19
 1131 00de 03       		.uleb128 0x3
 1132 00df 0E       		.uleb128 0xe
 1133 00e0 3A       		.uleb128 0x3a
 1134 00e1 0B       		.uleb128 0xb
 1135 00e2 3B       		.uleb128 0x3b
 1136 00e3 05       		.uleb128 0x5
 1137 00e4 27       		.uleb128 0x27
 1138 00e5 19       		.uleb128 0x19
 1139 00e6 49       		.uleb128 0x49
 1140 00e7 13       		.uleb128 0x13
 1141 00e8 11       		.uleb128 0x11
 1142 00e9 01       		.uleb128 0x1
 1143 00ea 12       		.uleb128 0x12
 1144 00eb 06       		.uleb128 0x6
 1145 00ec 40       		.uleb128 0x40
 1146 00ed 18       		.uleb128 0x18
 1147 00ee 9742     		.uleb128 0x2117
 1148 00f0 19       		.uleb128 0x19
 1149 00f1 01       		.uleb128 0x1
 1150 00f2 13       		.uleb128 0x13
 1151 00f3 00       		.byte	0
 1152 00f4 00       		.byte	0
 1153 00f5 0E       		.uleb128 0xe
 1154 00f6 34       		.uleb128 0x34
 1155 00f7 00       		.byte	0
 1156 00f8 03       		.uleb128 0x3
 1157 00f9 0E       		.uleb128 0xe
 1158 00fa 3A       		.uleb128 0x3a
 1159 00fb 0B       		.uleb128 0xb
 1160 00fc 3B       		.uleb128 0x3b
 1161 00fd 05       		.uleb128 0x5
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 37


 1162 00fe 49       		.uleb128 0x49
 1163 00ff 13       		.uleb128 0x13
 1164 0100 02       		.uleb128 0x2
 1165 0101 18       		.uleb128 0x18
 1166 0102 00       		.byte	0
 1167 0103 00       		.byte	0
 1168 0104 0F       		.uleb128 0xf
 1169 0105 34       		.uleb128 0x34
 1170 0106 00       		.byte	0
 1171 0107 03       		.uleb128 0x3
 1172 0108 0E       		.uleb128 0xe
 1173 0109 3A       		.uleb128 0x3a
 1174 010a 0B       		.uleb128 0xb
 1175 010b 3B       		.uleb128 0x3b
 1176 010c 0B       		.uleb128 0xb
 1177 010d 49       		.uleb128 0x49
 1178 010e 13       		.uleb128 0x13
 1179 010f 3F       		.uleb128 0x3f
 1180 0110 19       		.uleb128 0x19
 1181 0111 02       		.uleb128 0x2
 1182 0112 18       		.uleb128 0x18
 1183 0113 00       		.byte	0
 1184 0114 00       		.byte	0
 1185 0115 00       		.byte	0
 1186              		.section	.debug_aranges,"",%progbits
 1187 0000 74000000 		.4byte	0x74
 1188 0004 0200     		.2byte	0x2
 1189 0006 00000000 		.4byte	.Ldebug_info0
 1190 000a 04       		.byte	0x4
 1191 000b 00       		.byte	0
 1192 000c 0000     		.2byte	0
 1193 000e 0000     		.2byte	0
 1194 0010 00000000 		.4byte	.LFB0
 1195 0014 24000000 		.4byte	.LFE0-.LFB0
 1196 0018 00000000 		.4byte	.LFB1
 1197 001c BC000000 		.4byte	.LFE1-.LFB1
 1198 0020 00000000 		.4byte	.LFB2
 1199 0024 48000000 		.4byte	.LFE2-.LFB2
 1200 0028 00000000 		.4byte	.LFB3
 1201 002c 48000000 		.4byte	.LFE3-.LFB3
 1202 0030 00000000 		.4byte	.LFB4
 1203 0034 20000000 		.4byte	.LFE4-.LFB4
 1204 0038 00000000 		.4byte	.LFB5
 1205 003c 20000000 		.4byte	.LFE5-.LFB5
 1206 0040 00000000 		.4byte	.LFB6
 1207 0044 20000000 		.4byte	.LFE6-.LFB6
 1208 0048 00000000 		.4byte	.LFB7
 1209 004c 18000000 		.4byte	.LFE7-.LFB7
 1210 0050 00000000 		.4byte	.LFB8
 1211 0054 1C000000 		.4byte	.LFE8-.LFB8
 1212 0058 00000000 		.4byte	.LFB9
 1213 005c 20000000 		.4byte	.LFE9-.LFB9
 1214 0060 00000000 		.4byte	.LFB10
 1215 0064 18000000 		.4byte	.LFE10-.LFB10
 1216 0068 00000000 		.4byte	.LFB11
 1217 006c 18000000 		.4byte	.LFE11-.LFB11
 1218 0070 00000000 		.4byte	0
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 38


 1219 0074 00000000 		.4byte	0
 1220              		.section	.debug_ranges,"",%progbits
 1221              	.Ldebug_ranges0:
 1222 0000 00000000 		.4byte	.LFB0
 1223 0004 24000000 		.4byte	.LFE0
 1224 0008 00000000 		.4byte	.LFB1
 1225 000c BC000000 		.4byte	.LFE1
 1226 0010 00000000 		.4byte	.LFB2
 1227 0014 48000000 		.4byte	.LFE2
 1228 0018 00000000 		.4byte	.LFB3
 1229 001c 48000000 		.4byte	.LFE3
 1230 0020 00000000 		.4byte	.LFB4
 1231 0024 20000000 		.4byte	.LFE4
 1232 0028 00000000 		.4byte	.LFB5
 1233 002c 20000000 		.4byte	.LFE5
 1234 0030 00000000 		.4byte	.LFB6
 1235 0034 20000000 		.4byte	.LFE6
 1236 0038 00000000 		.4byte	.LFB7
 1237 003c 18000000 		.4byte	.LFE7
 1238 0040 00000000 		.4byte	.LFB8
 1239 0044 1C000000 		.4byte	.LFE8
 1240 0048 00000000 		.4byte	.LFB9
 1241 004c 20000000 		.4byte	.LFE9
 1242 0050 00000000 		.4byte	.LFB10
 1243 0054 18000000 		.4byte	.LFE10
 1244 0058 00000000 		.4byte	.LFB11
 1245 005c 18000000 		.4byte	.LFE11
 1246 0060 00000000 		.4byte	0
 1247 0064 00000000 		.4byte	0
 1248              		.section	.debug_line,"",%progbits
 1249              	.Ldebug_line0:
 1250 0000 3C010000 		.section	.debug_str,"MS",%progbits,1
 1250      02004200 
 1250      00000201 
 1250      FB0E0D00 
 1250      01010101 
 1251              	.LASF15:
 1252 0000 72656731 		.ascii	"reg16\000"
 1252      3600
 1253              	.LASF19:
 1254 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1254      315F456E 
 1254      61626C65 
 1254      00
 1255              	.LASF35:
 1256 0013 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1256      43313120 
 1256      352E342E 
 1256      31203230 
 1256      31363036 
 1257 0046 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1257      20726576 
 1257      6973696F 
 1257      6E203233 
 1257      37373135 
 1258 0079 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1258      66756E63 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 39


 1258      74696F6E 
 1258      2D736563 
 1258      74696F6E 
 1259              	.LASF24:
 1260 00a1 70657269 		.ascii	"period\000"
 1260      6F6400
 1261              	.LASF3:
 1262 00a8 73686F72 		.ascii	"short unsigned int\000"
 1262      7420756E 
 1262      7369676E 
 1262      65642069 
 1262      6E7400
 1263              	.LASF32:
 1264 00bb 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1264      315F5265 
 1264      61645374 
 1264      61747573 
 1264      52656769 
 1265              	.LASF11:
 1266 00d4 666C6F61 		.ascii	"float\000"
 1266      7400
 1267              	.LASF30:
 1268 00da 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1268      315F5772 
 1268      69746543 
 1268      6F6E7472 
 1268      6F6C5265 
 1269              	.LASF1:
 1270 00f5 756E7369 		.ascii	"unsigned char\000"
 1270      676E6564 
 1270      20636861 
 1270      7200
 1271              	.LASF14:
 1272 0103 72656738 		.ascii	"reg8\000"
 1272      00
 1273              	.LASF34:
 1274 0108 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1274      315F5265 
 1274      61645065 
 1274      72696F64 
 1274      00
 1275              	.LASF5:
 1276 0119 6C6F6E67 		.ascii	"long unsigned int\000"
 1276      20756E73 
 1276      69676E65 
 1276      6420696E 
 1276      7400
 1277              	.LASF9:
 1278 012b 75696E74 		.ascii	"uint8\000"
 1278      3800
 1279              	.LASF31:
 1280 0131 636F6E74 		.ascii	"control\000"
 1280      726F6C00 
 1281              	.LASF26:
 1282 0139 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1282      315F5365 
 1282      74496E74 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 40


 1282      65727275 
 1282      70744D6F 
 1283              	.LASF33:
 1284 0150 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1284      315F5265 
 1284      6164436F 
 1284      6D706172 
 1284      6500
 1285              	.LASF12:
 1286 0162 646F7562 		.ascii	"double\000"
 1286      6C6500
 1287              	.LASF39:
 1288 0169 50574D5F 		.ascii	"PWM_1_initVar\000"
 1288      315F696E 
 1288      69745661 
 1288      7200
 1289              	.LASF10:
 1290 0177 75696E74 		.ascii	"uint16\000"
 1290      313600
 1291              	.LASF21:
 1292 017e 50574D5F 		.ascii	"PWM_1_Init\000"
 1292      315F496E 
 1292      697400
 1293              	.LASF8:
 1294 0189 756E7369 		.ascii	"unsigned int\000"
 1294      676E6564 
 1294      20696E74 
 1294      00
 1295              	.LASF7:
 1296 0196 6C6F6E67 		.ascii	"long long unsigned int\000"
 1296      206C6F6E 
 1296      6720756E 
 1296      7369676E 
 1296      65642069 
 1297              	.LASF36:
 1298 01ad 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_1.c\000"
 1298      72617465 
 1298      645F536F 
 1298      75726365 
 1298      5C50536F 
 1299              	.LASF29:
 1300 01cc 72657375 		.ascii	"result\000"
 1300      6C7400
 1301              	.LASF28:
 1302 01d3 6374726C 		.ascii	"ctrl\000"
 1302      00
 1303              	.LASF17:
 1304 01d8 73697A65 		.ascii	"sizetype\000"
 1304      74797065 
 1304      00
 1305              	.LASF23:
 1306 01e1 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1306      315F5772 
 1306      69746543 
 1306      6F6D7061 
 1306      726500
 1307              	.LASF6:
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 41


 1308 01f4 6C6F6E67 		.ascii	"long long int\000"
 1308      206C6F6E 
 1308      6720696E 
 1308      7400
 1309              	.LASF38:
 1310 0202 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1310      315F5265 
 1310      6164436F 
 1310      6E74726F 
 1310      6C526567 
 1311              	.LASF27:
 1312 021c 696E7465 		.ascii	"interruptMode\000"
 1312      72727570 
 1312      744D6F64 
 1312      6500
 1313              	.LASF22:
 1314 022a 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1314      315F5772 
 1314      69746550 
 1314      6572696F 
 1314      6400
 1315              	.LASF37:
 1316 023c 443A5C50 		.ascii	"D:\\Projects\\NS\\Firmware\\NeruoStim\\PSOC6\\blink"
 1316      726F6A65 
 1316      6374735C 
 1316      4E535C46 
 1316      69726D77 
 1317 0269 795F6C65 		.ascii	"y_led\\blinky_led\\CE195352_PSoC_5LP_Blinking_LED01"
 1317      645C626C 
 1317      696E6B79 
 1317      5F6C6564 
 1317      5C434531 
 1318 029a 2E637964 		.ascii	".cydsn\000"
 1318      736E00
 1319              	.LASF2:
 1320 02a1 73686F72 		.ascii	"short int\000"
 1320      7420696E 
 1320      7400
 1321              	.LASF20:
 1322 02ab 50574D5F 		.ascii	"PWM_1_Stop\000"
 1322      315F5374 
 1322      6F7000
 1323              	.LASF4:
 1324 02b6 6C6F6E67 		.ascii	"long int\000"
 1324      20696E74 
 1324      00
 1325              	.LASF13:
 1326 02bf 63686172 		.ascii	"char\000"
 1326      00
 1327              	.LASF16:
 1328 02c4 6C6F6E67 		.ascii	"long double\000"
 1328      20646F75 
 1328      626C6500 
 1329              	.LASF0:
 1330 02d0 7369676E 		.ascii	"signed char\000"
 1330      65642063 
 1330      68617200 
ARM GAS  C:\Users\subra\AppData\Local\Temp\ccUasokb.s 			page 42


 1331              	.LASF25:
 1332 02dc 636F6D70 		.ascii	"compare\000"
 1332      61726500 
 1333              	.LASF18:
 1334 02e4 50574D5F 		.ascii	"PWM_1_Start\000"
 1334      315F5374 
 1334      61727400 
 1335              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
