<?xml version="1.0" encoding="utf-8"?>
<blockRegMap version="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://cypress.com/xsd/cyblockregmap cyblockregmap.xsd" xmlns="http://cypress.com/xsd/cyblockregmap">
  <block name="VDAC_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
    <block name="cy_analog_virtualmux_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="IncludeDriver_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_virtualmux_2" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_constant_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="VirtualMux_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_3" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cy_analog_noconnect_4" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="CTDAC" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <register name="CTDAC_CTDAC_CTRL" address="0x40000" bitWidth="32" desc="Global CTDAC control" hidden="false">
      <field name="DEGLITCH_CNT" from="5" to="0" access="RW" resetVal="" desc="To prevent glitches after VALUE changes from propagating, the output switch can be opened for DEGLITCH_CNT+1 clk_ctdac clock cycles." hidden="false" />
      <field name="DEGLITCH_CO6" from="8" to="8" access="RW" resetVal="" desc="Force CTDAC.CO6 switch open after each VALUE change for the set number of clock cycles." hidden="false" />
      <field name="DEGLITCH_COS" from="9" to="9" access="RW" resetVal="" desc="Force CTB.COS switch open after each VALUE change for the set number of clock cycles." hidden="false" />
      <field name="OUT_EN" from="22" to="22" access="RW" resetVal="" desc="Output enable, intended to be used during the Hold phase of the Sample and Hold when power cycling :&#xA;0: output disabled, the output is either: &#xA;       - Tri-state (DISABLED_MODE=0) &#xA;       - or Vssa (DISABLED_MODE=1 &amp;&amp; CTDAC_RANGE=0)  &#xA;       - or Vref (DISABLED_MODE=1 &amp;&amp; CTDAC_RANGE=1) &#xA;1: output enabled, CTDAC output drives the programmed VALUE" hidden="false" />
      <field name="CTDAC_RANGE" from="23" to="23" access="RW" resetVal="" desc="By closing the bottom switch in the R2R network the output is lifted by one LSB, effectively adding 1&#xA;0: Range is [0, 4095] * Vref / 4096 &#xA;1: Range is [1, 4096] * Vref / 4096" hidden="false" />
      <field name="CTDAC_MODE" from="25" to="24" access="RW" resetVal="" desc="DAC mode, this determines the Value decoding" hidden="false">
        <value name="UNSIGNED12" value="0" desc="Unsigned 12-bit VDAC, i.e. no value decoding." />
        <value name="VIRT_SIGNED12" value="1" desc="Virtual signed 12-bits' VDAC. Value decoding: &#xA;add 0x800 to the 12-bit Value (=invert MSB), to convert the lowest signed number 0x800 to the lowest unsigned number 0x000. This is the same as the SAR handles 12-bit 'virtual' signed numbers." />
        <value name="RESERVED2" value="10" desc="" />
        <value name="RESERVED3" value="11" desc="" />
      </field>
      <field name="DISABLED_MODE" from="27" to="27" access="RW" resetVal="" desc="Select the output value when the output is disabled (OUT_EN=0) (for risk mitigation)&#xA;0: Tri-state CTDAC output when disabled&#xA;1: output Vssa or Vref when disabled (see OUT_EN description)" hidden="false" />
      <field name="DSI_STROBE_EN" from="28" to="28" access="RW" resetVal="" desc="DSI strobe input Enable. This enables CTDAC updates to be further throttled by DSI.&#xA;0: Ignore DSI strobe input&#xA;1: Only do a CTDAC update if alllowed by the DSI stobe (throttle), see below for level or edge" hidden="false" />
      <field name="DSI_STROBE_LEVEL" from="29" to="29" access="RW" resetVal="" desc="Select level or edge detect for DSI strobe&#xA;- 0: DSI strobe signal is a pulse input, after a positive edge is detected on the DSI strobe signal the next DAC value update is done on the next CTDAC clock&#xA;- 1: DSI strobe signal is a level input, as long as the DSI strobe signal remains high the CTDAC will do a next DAC value update on each CTDAC clock." hidden="false" />
      <field name="DEEPSLEEP_ON" from="30" to="30" access="RW" resetVal="" desc="- 0: CTDAC IP disabled off during DeepSleep power mode&#xA;- 1: CTDAC IP remains enabled during DeepSleep power mode (if ENABLED=1)" hidden="false" />
      <field name="ENABLED" from="31" to="31" access="RW" resetVal="" desc="0: CTDAC IP disabled (put analog in power down, open all switches)&#xA;1: CTDAC IP enabled" hidden="false" />
    </register>
    <register name="CTDAC_INTR" address="0x40020" bitWidth="32" desc="Interrupt request register" hidden="false">
      <field name="VDAC_EMPTY" from="0" to="0" access="RW" resetVal="" desc="VDAC Interrupt: hardware sets this interrupt when VDAC next value field is empty, i.e. was copied to the current VALUE. Write with '1' to clear bit." hidden="false" />
    </register>
    <register name="CTDAC_INTR_SET" address="0x40024" bitWidth="32" desc="Interrupt request set register" hidden="false">
      <field name="VDAC_EMPTY_SET" from="0" to="0" access="RW" resetVal="" desc="Write with '1' to set corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="CTDAC_INTR_MASK" address="0x40028" bitWidth="32" desc="Interrupt request mask" hidden="false">
      <field name="VDAC_EMPTY_MASK" from="0" to="0" access="RW" resetVal="" desc="Mask bit for corresponding bit in interrupt request register." hidden="false" />
    </register>
    <register name="CTDAC_INTR_MASKED" address="0x4002C" bitWidth="32" desc="Interrupt request masked" hidden="false">
      <field name="VDAC_EMPTY_MASKED" from="0" to="0" access="R" resetVal="" desc="Logical and of corresponding request and mask bits." hidden="false" />
    </register>
    <register name="CTDAC_CTDAC_SW" address="0x400B0" bitWidth="32" desc="CTDAC switch control" hidden="false">
      <field name="CTDD_CVD" from="0" to="0" access="RW" resetVal="" desc="VDDA supply to ctdrefdrive" hidden="false" />
      <field name="CTDO_CO6" from="8" to="8" access="RW" resetVal="" desc="ctdvout to P6 pin. Note this switch will temporarily be opened for deglitching if DEGLITCH_CO6 is set" hidden="false" />
    </register>
    <register name="CTDAC_CTDAC_SW_CLEAR" address="0x400B4" bitWidth="32" desc="CTDAC switch control clear" hidden="false">
      <field name="CTDD_CVD" from="0" to="0" access="RW" resetVal="" desc="see corresponding bit in CTD_SW" hidden="false" />
      <field name="CTDO_CO6" from="8" to="8" access="RW" resetVal="" desc="see corresponding bit in CTD_SW" hidden="false" />
    </register>
    <register name="CTDAC_CTDAC_VAL" address="0x40100" bitWidth="32" desc="DAC Value" hidden="false">
      <field name="VALUE" from="11" to="0" access="RW" resetVal="" desc="Value, in CTDAC_MODE 1 this value is decoded" hidden="false" />
    </register>
    <register name="CTDAC_CTDAC_VAL_NXT" address="0x40104" bitWidth="32" desc="Next DAC value (double buffering)" hidden="false">
      <field name="VALUE" from="11" to="0" access="RW" resetVal="" desc="Next value for CTDAC_VAL.VALUE" hidden="false" />
    </register>
  </block>
  <block name="VDAC_Out" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="vRef_1" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="UART" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
    <block name="rx_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="rx" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="cts_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="SCB" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="SCB_IRQ" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="clock_VM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="SCBCLK" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="ZeroTerminal_7" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="tx" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
    <block name="or_sclk" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  </block>
  <block name="Timer" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false">
    <block name="TCPWM" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  </block>
  <block name="Clock" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
  <block name="isrTimer" BASE="0x0" SIZE="0x0" desc="" visible="true" hidden="false" />
</blockRegMap>